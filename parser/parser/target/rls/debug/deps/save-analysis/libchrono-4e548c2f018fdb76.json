{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18","program":"/home/zoozle/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","chrono","/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"clock\"","--cfg","feature=\"default\"","--cfg","feature=\"libc\"","--cfg","feature=\"oldtime\"","--cfg","feature=\"std\"","--cfg","feature=\"time\"","--cfg","feature=\"winapi\"","-C","metadata=4e548c2f018fdb76","-C","extra-filename=-4e548c2f018fdb76","--out-dir","/home/zoozle/Code/Rust/Zle_Edition2/target/rls/debug/deps","-L","dependency=/home/zoozle/Code/Rust/Zle_Edition2/target/rls/debug/deps","--extern","libc=/home/zoozle/Code/Rust/Zle_Edition2/target/rls/debug/deps/liblibc-3966b3915cff12c4.rmeta","--extern","num_integer=/home/zoozle/Code/Rust/Zle_Edition2/target/rls/debug/deps/libnum_integer-73e244be63f7450d.rmeta","--extern","num_traits=/home/zoozle/Code/Rust/Zle_Edition2/target/rls/debug/deps/libnum_traits-beee4ebee2052b1c.rmeta","--extern","time=/home/zoozle/Code/Rust/Zle_Edition2/target/rls/debug/deps/libtime-16e9533f3235e1ed.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/zoozle/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/zoozle/Code/Rust/Zle_Edition2/target/rls/debug/deps/libchrono-4e548c2f018fdb76.rmeta"},"prelude":{"crate_id":{"name":"chrono","disambiguator":[16701879096944255432,8787260746703039615]},"crate_root":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src","external_crates":[{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[10344648486569477446,2454248652556920925]}},{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14168888756904427512,16776303916459465465]}},{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[17407741297230913278,16283799328799007365]}},{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4492142733197306814,14151866605630611617]}},{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[9785299734546160784,636286335322626912]}},{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[5680562745065174860,9217186745851755644]}},{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[1647702202987759035,15124534591008137148]}},{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[16711431240759211485,3970175217288203291]}},{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[125532023394459561,9172165323910118991]}},{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[17639569287364244572,9623243733363078576]}},{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[10466182059741283835,56412014413285874]}},{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[6793855748667116046,87956666511033926]}},{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[15647227138251999113,1639002543540862534]}},{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[10550792004909319356,1806099500584167781]}},{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","num":15,"id":{"name":"time","disambiguator":[13902836023754051804,12028016026062596278]}},{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","num":16,"id":{"name":"libc","disambiguator":[13613441338302829385,15834011562650765427]}},{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","num":17,"id":{"name":"num_integer","disambiguator":[8429643767252047043,5755834619097450785]}},{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","num":18,"id":{"name":"num_traits","disambiguator":[6399887423296005962,17038762746415715837]}}],"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":76,"byte_end":55909,"line_start":4,"line_end":1535,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":15,"index":295},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":22135,"byte_end":22143,"line_start":486,"line_end":486,"column_start":18,"column_end":26},"alias_span":null,"name":"Duration","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1770},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":22161,"byte_end":22165,"line_start":488,"line_end":488,"column_start":16,"column_end":20},"alias_span":null,"name":"Date","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":780},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":22167,"byte_end":22175,"line_start":488,"line_end":488,"column_start":22,"column_end":30},"alias_span":null,"name":"MAX_DATE","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":779},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":22177,"byte_end":22185,"line_start":488,"line_end":488,"column_start":32,"column_end":40},"alias_span":null,"name":"MIN_DATE","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1801},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":22289,"byte_end":22297,"line_start":491,"line_end":491,"column_start":20,"column_end":28},"alias_span":null,"name":"DateTime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1777},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":22299,"byte_end":22312,"line_start":491,"line_end":491,"column_start":30,"column_end":43},"alias_span":null,"name":"SecondsFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":930},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":22314,"byte_end":22326,"line_start":491,"line_end":491,"column_start":45,"column_end":57},"alias_span":null,"name":"MAX_DATETIME","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":929},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":22328,"byte_end":22340,"line_start":491,"line_end":491,"column_start":59,"column_end":71},"alias_span":null,"name":"MIN_DATETIME","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2015},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":22439,"byte_end":22449,"line_start":495,"line_end":495,"column_start":18,"column_end":28},"alias_span":null,"name":"ParseError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1123},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":22451,"byte_end":22462,"line_start":495,"line_end":495,"column_start":30,"column_end":41},"alias_span":null,"name":"ParseResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1725},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":22499,"byte_end":22506,"line_start":497,"line_end":497,"column_start":17,"column_end":24},"alias_span":null,"name":"IsoWeek","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1582},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":22508,"byte_end":22517,"line_start":497,"line_end":497,"column_start":26,"column_end":35},"alias_span":null,"name":"NaiveDate","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1655},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":22519,"byte_end":22532,"line_start":497,"line_end":497,"column_start":37,"column_end":50},"alias_span":null,"name":"NaiveDateTime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1745},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":22534,"byte_end":22543,"line_start":497,"line_end":497,"column_start":52,"column_end":61},"alias_span":null,"name":"NaiveTime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1564},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":22606,"byte_end":22611,"line_start":500,"line_end":500,"column_start":17,"column_end":22},"alias_span":null,"name":"Local","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1549},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":22648,"byte_end":22659,"line_start":502,"line_end":502,"column_start":18,"column_end":29},"alias_span":null,"name":"FixedOffset","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1515},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":22661,"byte_end":22672,"line_start":502,"line_end":502,"column_start":31,"column_end":42},"alias_span":null,"name":"LocalResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":137},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":22674,"byte_end":22680,"line_start":502,"line_end":502,"column_start":44,"column_end":50},"alias_span":null,"name":"Offset","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":139},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":22682,"byte_end":22690,"line_start":502,"line_end":502,"column_start":52,"column_end":60},"alias_span":null,"name":"TimeZone","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1571},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":22692,"byte_end":22695,"line_start":502,"line_end":502,"column_start":62,"column_end":65},"alias_span":null,"name":"Utc","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1443},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":22714,"byte_end":22727,"line_start":503,"line_end":503,"column_start":17,"column_end":30},"alias_span":null,"name":"DurationRound","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2116},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":22729,"byte_end":22742,"line_start":503,"line_end":503,"column_start":32,"column_end":45},"alias_span":null,"name":"RoundingError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1435},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":22744,"byte_end":22755,"line_start":503,"line_end":503,"column_start":47,"column_end":58},"alias_span":null,"name":"SubsecRound","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1770},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":22894,"byte_end":22898,"line_start":508,"line_end":508,"column_start":13,"column_end":17},"alias_span":null,"name":"Date","value":"","parent":{"krate":0,"index":75}},{"kind":"Use","ref_id":{"krate":0,"index":1564},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":22964,"byte_end":22969,"line_start":511,"line_end":511,"column_start":13,"column_end":18},"alias_span":null,"name":"Local","value":"","parent":{"krate":0,"index":75}},{"kind":"Use","ref_id":{"krate":0,"index":1435},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":23088,"byte_end":23099,"line_start":516,"line_end":516,"column_start":13,"column_end":24},"alias_span":null,"name":"SubsecRound","value":"","parent":{"krate":0,"index":75}},{"kind":"Use","ref_id":{"krate":0,"index":1801},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":23136,"byte_end":23144,"line_start":518,"line_end":518,"column_start":14,"column_end":22},"alias_span":null,"name":"DateTime","value":"","parent":{"krate":0,"index":75}},{"kind":"Use","ref_id":{"krate":0,"index":1777},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":23146,"byte_end":23159,"line_start":518,"line_end":518,"column_start":24,"column_end":37},"alias_span":null,"name":"SecondsFormat","value":"","parent":{"krate":0,"index":75}},{"kind":"Use","ref_id":{"krate":0,"index":1483},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":23197,"byte_end":23205,"line_start":520,"line_end":520,"column_start":14,"column_end":22},"alias_span":null,"name":"Datelike","value":"","parent":{"krate":0,"index":75}},{"kind":"Use","ref_id":{"krate":0,"index":2178},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":23207,"byte_end":23212,"line_start":520,"line_end":520,"column_start":24,"column_end":29},"alias_span":null,"name":"Month","value":"","parent":{"krate":0,"index":75}},{"kind":"Use","ref_id":{"krate":0,"index":1502},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":23214,"byte_end":23222,"line_start":520,"line_end":520,"column_start":31,"column_end":39},"alias_span":null,"name":"Timelike","value":"","parent":{"krate":0,"index":75}},{"kind":"Use","ref_id":{"krate":0,"index":2134},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":23224,"byte_end":23231,"line_start":520,"line_end":520,"column_start":41,"column_end":48},"alias_span":null,"name":"Weekday","value":"","parent":{"krate":0,"index":75}},{"kind":"Use","ref_id":{"krate":0,"index":1549},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":23269,"byte_end":23280,"line_start":522,"line_end":522,"column_start":14,"column_end":25},"alias_span":null,"name":"FixedOffset","value":"","parent":{"krate":0,"index":75}},{"kind":"Use","ref_id":{"krate":0,"index":1571},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":23282,"byte_end":23285,"line_start":522,"line_end":522,"column_start":27,"column_end":30},"alias_span":null,"name":"Utc","value":"","parent":{"krate":0,"index":75}},{"kind":"Use","ref_id":{"krate":0,"index":1582},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":23323,"byte_end":23332,"line_start":524,"line_end":524,"column_start":14,"column_end":23},"alias_span":null,"name":"NaiveDate","value":"","parent":{"krate":0,"index":75}},{"kind":"Use","ref_id":{"krate":0,"index":1655},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":23334,"byte_end":23347,"line_start":524,"line_end":524,"column_start":25,"column_end":38},"alias_span":null,"name":"NaiveDateTime","value":"","parent":{"krate":0,"index":75}},{"kind":"Use","ref_id":{"krate":0,"index":1745},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":23349,"byte_end":23358,"line_start":524,"line_end":524,"column_start":40,"column_end":49},"alias_span":null,"name":"NaiveTime","value":"","parent":{"krate":0,"index":75}},{"kind":"Use","ref_id":{"krate":0,"index":137},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":23396,"byte_end":23402,"line_start":526,"line_end":526,"column_start":14,"column_end":20},"alias_span":null,"name":"Offset","value":"","parent":{"krate":0,"index":75}},{"kind":"Use","ref_id":{"krate":0,"index":139},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":23404,"byte_end":23412,"line_start":526,"line_end":526,"column_start":22,"column_end":30},"alias_span":null,"name":"TimeZone","value":"","parent":{"krate":0,"index":75}},{"kind":"Use","ref_id":{"krate":0,"index":1549},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":82941,"byte_end":82952,"line_start":469,"line_end":469,"column_start":22,"column_end":33},"alias_span":null,"name":"FixedOffset","value":"","parent":{"krate":0,"index":104}},{"kind":"Use","ref_id":{"krate":0,"index":1564},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":83001,"byte_end":83006,"line_start":471,"line_end":471,"column_start":22,"column_end":27},"alias_span":null,"name":"Local","value":"","parent":{"krate":0,"index":104}},{"kind":"Use","ref_id":{"krate":0,"index":1571},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":83027,"byte_end":83030,"line_start":472,"line_end":472,"column_start":20,"column_end":23},"alias_span":null,"name":"Utc","value":"","parent":{"krate":0,"index":104}},{"kind":"Use","ref_id":{"krate":0,"index":1582},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":23994,"byte_end":24003,"line_start":554,"line_end":554,"column_start":26,"column_end":35},"alias_span":null,"name":"NaiveDate","value":"","parent":{"krate":0,"index":296}},{"kind":"Use","ref_id":{"krate":0,"index":338},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":24005,"byte_end":24013,"line_start":554,"line_end":554,"column_start":37,"column_end":45},"alias_span":null,"name":"MAX_DATE","value":"","parent":{"krate":0,"index":296}},{"kind":"Use","ref_id":{"krate":0,"index":337},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":24015,"byte_end":24023,"line_start":554,"line_end":554,"column_start":47,"column_end":55},"alias_span":null,"name":"MIN_DATE","value":"","parent":{"krate":0,"index":296}},{"kind":"Use","ref_id":{"krate":0,"index":1655},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":24176,"byte_end":24189,"line_start":558,"line_end":558,"column_start":30,"column_end":43},"alias_span":null,"name":"NaiveDateTime","value":"","parent":{"krate":0,"index":296}},{"kind":"Use","ref_id":{"krate":0,"index":477},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":24191,"byte_end":24203,"line_start":558,"line_end":558,"column_start":45,"column_end":57},"alias_span":null,"name":"MAX_DATETIME","value":"","parent":{"krate":0,"index":296}},{"kind":"Use","ref_id":{"krate":0,"index":476},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":24205,"byte_end":24217,"line_start":558,"line_end":558,"column_start":59,"column_end":71},"alias_span":null,"name":"MIN_DATETIME","value":"","parent":{"krate":0,"index":296}},{"kind":"Use","ref_id":{"krate":0,"index":1725},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":24247,"byte_end":24254,"line_start":559,"line_end":559,"column_start":28,"column_end":35},"alias_span":null,"name":"IsoWeek","value":"","parent":{"krate":0,"index":296}},{"kind":"Use","ref_id":{"krate":0,"index":1745},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":24280,"byte_end":24289,"line_start":560,"line_end":560,"column_start":25,"column_end":34},"alias_span":null,"name":"NaiveTime","value":"","parent":{"krate":0,"index":296}},{"kind":"Use","ref_id":{"krate":0,"index":1295},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":509019,"byte_end":509024,"line_start":42,"line_end":42,"column_start":22,"column_end":27},"alias_span":null,"name":"parse","value":"","parent":{"krate":0,"index":1085}},{"kind":"Use","ref_id":{"krate":0,"index":2056},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":509048,"byte_end":509054,"line_start":43,"line_end":43,"column_start":23,"column_end":29},"alias_span":null,"name":"Parsed","value":"","parent":{"krate":0,"index":1085}},{"kind":"Use","ref_id":{"krate":0,"index":2087},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":509080,"byte_end":509093,"line_start":44,"line_end":44,"column_start":25,"column_end":38},"alias_span":null,"name":"StrftimeItems","value":"","parent":{"krate":0,"index":1085}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":76,"byte_end":55909,"line_start":4,"line_end":1535,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":51},{"krate":0,"index":56},{"krate":0,"index":59},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":71},{"krate":0,"index":75},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":104},{"krate":0,"index":296},{"krate":0,"index":753},{"krate":0,"index":888},{"krate":0,"index":1085},{"krate":0,"index":1423},{"krate":0,"index":2134},{"krate":0,"index":2167},{"krate":0,"index":2168},{"krate":0,"index":2164},{"krate":0,"index":2165},{"krate":0,"index":2163},{"krate":0,"index":2161},{"krate":0,"index":2159},{"krate":0,"index":2156},{"krate":0,"index":1457},{"krate":0,"index":1464},{"krate":0,"index":1466},{"krate":0,"index":1469},{"krate":0,"index":2170},{"krate":0,"index":2176},{"krate":0,"index":2172},{"krate":0,"index":2173},{"krate":0,"index":1470},{"krate":0,"index":2178},{"krate":0,"index":2226},{"krate":0,"index":2227},{"krate":0,"index":2223},{"krate":0,"index":2224},{"krate":0,"index":2222},{"krate":0,"index":2220},{"krate":0,"index":2218},{"krate":0,"index":2215},{"krate":0,"index":1472},{"krate":0,"index":1477},{"krate":0,"index":2229},{"krate":0,"index":2235},{"krate":0,"index":2231},{"krate":0,"index":2232},{"krate":0,"index":1481},{"krate":0,"index":1483},{"krate":0,"index":1502},{"krate":0,"index":1513}],"decl_id":null,"docs":" # Chrono: Date and Time for Rust","sig":null,"attributes":[{"value":"! # Chrono: Date and Time for Rust","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":76,"byte_end":112,"line_start":4,"line_end":4,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":113,"byte_end":116,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! It aims to be a feature-complete superset of","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":117,"byte_end":165,"line_start":6,"line_end":6,"column_start":1,"column_end":49}},{"value":"! the [time](https://github.com/rust-lang-deprecated/time) library.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":166,"byte_end":235,"line_start":7,"line_end":7,"column_start":1,"column_end":70}},{"value":"! In particular,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":236,"byte_end":254,"line_start":8,"line_end":8,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":255,"byte_end":258,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"! * Chrono strictly adheres to ISO 8601.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":259,"byte_end":301,"line_start":10,"line_end":10,"column_start":1,"column_end":43}},{"value":"! * Chrono is timezone-aware by default, with separate timezone-naive types.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":302,"byte_end":380,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"! * Chrono is space-optimal and (while not being the primary goal) reasonably efficient.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":381,"byte_end":471,"line_start":12,"line_end":12,"column_start":1,"column_end":91}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":472,"byte_end":475,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"! There were several previous attempts to bring a good date and time library to Rust,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":476,"byte_end":563,"line_start":14,"line_end":14,"column_start":1,"column_end":88}},{"value":"! which Chrono builds upon and should acknowledge:","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":564,"byte_end":616,"line_start":15,"line_end":15,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":617,"byte_end":620,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! * [Initial research on","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":621,"byte_end":647,"line_start":17,"line_end":17,"column_start":1,"column_end":27}},{"value":"!    the wiki](https://github.com/rust-lang/rust-wiki-backup/blob/master/Lib-datetime.md)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":648,"byte_end":739,"line_start":18,"line_end":18,"column_start":1,"column_end":92}},{"value":"! * Dietrich Epp's [datetime-rs](https://github.com/depp/datetime-rs)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":740,"byte_end":811,"line_start":19,"line_end":19,"column_start":1,"column_end":72}},{"value":"! * Luis de Bethencourt's [rust-datetime](https://github.com/luisbg/rust-datetime)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":812,"byte_end":896,"line_start":20,"line_end":20,"column_start":1,"column_end":85}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":897,"byte_end":900,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! Any significant changes to Chrono are documented in","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":901,"byte_end":956,"line_start":22,"line_end":22,"column_start":1,"column_end":56}},{"value":"! the [`CHANGELOG.md`](https://github.com/chronotope/chrono/blob/main/CHANGELOG.md) file.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":957,"byte_end":1048,"line_start":23,"line_end":23,"column_start":1,"column_end":92}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":1049,"byte_end":1052,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"! ## Usage","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":1053,"byte_end":1065,"line_start":25,"line_end":25,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":1066,"byte_end":1069,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! Put this in your `Cargo.toml`:","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":1070,"byte_end":1104,"line_start":27,"line_end":27,"column_start":1,"column_end":35}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":1105,"byte_end":1108,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! ```toml","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":1109,"byte_end":1120,"line_start":29,"line_end":29,"column_start":1,"column_end":12}},{"value":"! [dependencies]","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":1121,"byte_end":1139,"line_start":30,"line_end":30,"column_start":1,"column_end":19}},{"value":"! chrono = \"0.4\"","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":1140,"byte_end":1158,"line_start":31,"line_end":31,"column_start":1,"column_end":19}},{"value":"! ```","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":1159,"byte_end":1166,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":1167,"byte_end":1170,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"! ### Features","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":1171,"byte_end":1187,"line_start":34,"line_end":34,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":1188,"byte_end":1191,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! Chrono supports various runtime environments and operating systems, and has","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":1192,"byte_end":1271,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"! several features that may be enabled or disabled.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":1272,"byte_end":1325,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":1326,"byte_end":1329,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! Default features:","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":1330,"byte_end":1351,"line_start":39,"line_end":39,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":1352,"byte_end":1355,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"! - `alloc`: Enable features that depend on allocation (primarily string formatting)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":1356,"byte_end":1442,"line_start":41,"line_end":41,"column_start":1,"column_end":87}},{"value":"! - `std`: Enables functionality that depends on the standard library. This","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":1443,"byte_end":1520,"line_start":42,"line_end":42,"column_start":1,"column_end":78}},{"value":"!   is a superset of `alloc` and adds interoperation with standard library types","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":1521,"byte_end":1603,"line_start":43,"line_end":43,"column_start":1,"column_end":83}},{"value":"!   and traits.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":1604,"byte_end":1621,"line_start":44,"line_end":44,"column_start":1,"column_end":18}},{"value":"! - `clock`: enables reading the system time (`now`), independent of whether","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":1622,"byte_end":1700,"line_start":45,"line_end":45,"column_start":1,"column_end":79}},{"value":"!   `std::time::SystemTime` is present, depends on having a libc.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":1701,"byte_end":1768,"line_start":46,"line_end":46,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":1769,"byte_end":1772,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"! Optional features:","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":1773,"byte_end":1795,"line_start":48,"line_end":48,"column_start":1,"column_end":23}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":1796,"byte_end":1799,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"! - `wasmbind`: Enable integration with [wasm-bindgen][] and its `js-sys` project","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":1800,"byte_end":1883,"line_start":50,"line_end":50,"column_start":1,"column_end":84}},{"value":"! - [`serde`][]: Enable serialization/deserialization via serde.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":1884,"byte_end":1950,"line_start":51,"line_end":51,"column_start":1,"column_end":67}},{"value":"! - `unstable-locales`: Enable localization. This adds various methods with a","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":1951,"byte_end":2030,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"!   `_localized` suffix. The implementation and API may change or even be","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":2031,"byte_end":2106,"line_start":53,"line_end":53,"column_start":1,"column_end":76}},{"value":"!   removed in a patch release. Feedback welcome.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":2107,"byte_end":2158,"line_start":54,"line_end":54,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":2159,"byte_end":2162,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! [`serde`]: https://github.com/serde-rs/serde","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":2163,"byte_end":2211,"line_start":56,"line_end":56,"column_start":1,"column_end":49}},{"value":"! [wasm-bindgen]: https://github.com/rustwasm/wasm-bindgen","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":2212,"byte_end":2272,"line_start":57,"line_end":57,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":2273,"byte_end":2276,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"! See the [cargo docs][] for examples of specifying features.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":2277,"byte_end":2340,"line_start":59,"line_end":59,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":2341,"byte_end":2344,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"! [cargo docs]: https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html#choosing-features","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":2345,"byte_end":2451,"line_start":61,"line_end":61,"column_start":1,"column_end":107}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":2452,"byte_end":2455,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"! ## Overview","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":2456,"byte_end":2471,"line_start":63,"line_end":63,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":2472,"byte_end":2475,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"! ### Duration","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":2476,"byte_end":2492,"line_start":65,"line_end":65,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":2493,"byte_end":2496,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"! Chrono currently uses its own [`Duration`] type to represent the magnitude","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":2497,"byte_end":2575,"line_start":67,"line_end":67,"column_start":1,"column_end":79}},{"value":"! of a time span. Since this has the same name as the newer, standard type for","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":2576,"byte_end":2656,"line_start":68,"line_end":68,"column_start":1,"column_end":81}},{"value":"! duration, the reference will refer this type as `OldDuration`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":2657,"byte_end":2723,"line_start":69,"line_end":69,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":2724,"byte_end":2727,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"! Note that this is an \"accurate\" duration represented as seconds and","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":2728,"byte_end":2799,"line_start":71,"line_end":71,"column_start":1,"column_end":72}},{"value":"! nanoseconds and does not represent \"nominal\" components such as days or","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":2800,"byte_end":2875,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"! months.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":2876,"byte_end":2887,"line_start":73,"line_end":73,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":2888,"byte_end":2891,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"! When the `oldtime` feature is enabled, [`Duration`] is an alias for the","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":2892,"byte_end":2967,"line_start":75,"line_end":75,"column_start":1,"column_end":76}},{"value":"! [`time::Duration`](https://docs.rs/time/0.1.40/time/struct.Duration.html)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":2968,"byte_end":3045,"line_start":76,"line_end":76,"column_start":1,"column_end":78}},{"value":"! type from v0.1 of the time crate. time v0.1 is deprecated, so new code","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":3046,"byte_end":3120,"line_start":77,"line_end":77,"column_start":1,"column_end":75}},{"value":"! should disable the `oldtime` feature and use the `chrono::Duration` type","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":3121,"byte_end":3197,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"! instead. The `oldtime` feature is enabled by default for backwards","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":3198,"byte_end":3268,"line_start":79,"line_end":79,"column_start":1,"column_end":71}},{"value":"! compatibility, but future versions of Chrono are likely to remove the","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":3269,"byte_end":3342,"line_start":80,"line_end":80,"column_start":1,"column_end":74}},{"value":"! feature entirely.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":3343,"byte_end":3364,"line_start":81,"line_end":81,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":3365,"byte_end":3368,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"! Chrono does not yet natively support","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":3369,"byte_end":3409,"line_start":83,"line_end":83,"column_start":1,"column_end":41}},{"value":"! the standard [`Duration`](https://doc.rust-lang.org/std/time/struct.Duration.html) type,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":3410,"byte_end":3502,"line_start":84,"line_end":84,"column_start":1,"column_end":93}},{"value":"! but it will be supported in the future.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":3503,"byte_end":3546,"line_start":85,"line_end":85,"column_start":1,"column_end":44}},{"value":"! Meanwhile you can convert between two types with","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":3547,"byte_end":3599,"line_start":86,"line_end":86,"column_start":1,"column_end":53}},{"value":"! [`Duration::from_std`](https://docs.rs/time/0.1.40/time/struct.Duration.html#method.from_std)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":3600,"byte_end":3697,"line_start":87,"line_end":87,"column_start":1,"column_end":98}},{"value":"! and","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":3698,"byte_end":3705,"line_start":88,"line_end":88,"column_start":1,"column_end":8}},{"value":"! [`Duration::to_std`](https://docs.rs/time/0.1.40/time/struct.Duration.html#method.to_std)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":3706,"byte_end":3799,"line_start":89,"line_end":89,"column_start":1,"column_end":94}},{"value":"! methods.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":3800,"byte_end":3812,"line_start":90,"line_end":90,"column_start":1,"column_end":13}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":3813,"byte_end":3816,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"! ### Date and Time","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":3817,"byte_end":3838,"line_start":92,"line_end":92,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":3839,"byte_end":3842,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"! Chrono provides a","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":3843,"byte_end":3864,"line_start":94,"line_end":94,"column_start":1,"column_end":22}},{"value":"! [**`DateTime`**](./struct.DateTime.html)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":3865,"byte_end":3909,"line_start":95,"line_end":95,"column_start":1,"column_end":45}},{"value":"! type to represent a date and a time in a timezone.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":3910,"byte_end":3964,"line_start":96,"line_end":96,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":3965,"byte_end":3968,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"! For more abstract moment-in-time tracking such as internal timekeeping","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":3969,"byte_end":4043,"line_start":98,"line_end":98,"column_start":1,"column_end":75}},{"value":"! that is unconcerned with timezones, consider","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":4044,"byte_end":4092,"line_start":99,"line_end":99,"column_start":1,"column_end":49}},{"value":"! [`time::SystemTime`](https://doc.rust-lang.org/std/time/struct.SystemTime.html),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":4093,"byte_end":4177,"line_start":100,"line_end":100,"column_start":1,"column_end":85}},{"value":"! which tracks your system clock, or","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":4178,"byte_end":4216,"line_start":101,"line_end":101,"column_start":1,"column_end":39}},{"value":"! [`time::Instant`](https://doc.rust-lang.org/std/time/struct.Instant.html), which","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":4217,"byte_end":4301,"line_start":102,"line_end":102,"column_start":1,"column_end":85}},{"value":"! is an opaque but monotonically-increasing representation of a moment in time.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":4302,"byte_end":4383,"line_start":103,"line_end":103,"column_start":1,"column_end":82}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":4384,"byte_end":4387,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"! `DateTime` is timezone-aware and must be constructed from","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":4388,"byte_end":4449,"line_start":105,"line_end":105,"column_start":1,"column_end":62}},{"value":"! the [**`TimeZone`**](./offset/trait.TimeZone.html) object,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":4450,"byte_end":4512,"line_start":106,"line_end":106,"column_start":1,"column_end":63}},{"value":"! which defines how the local date is converted to and back from the UTC date.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":4513,"byte_end":4593,"line_start":107,"line_end":107,"column_start":1,"column_end":81}},{"value":"! There are three well-known `TimeZone` implementations:","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":4594,"byte_end":4652,"line_start":108,"line_end":108,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":4653,"byte_end":4656,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"! * [**`Utc`**](./offset/struct.Utc.html) specifies the UTC time zone. It is most efficient.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":4657,"byte_end":4751,"line_start":110,"line_end":110,"column_start":1,"column_end":95}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":4752,"byte_end":4755,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"! * [**`Local`**](./offset/struct.Local.html) specifies the system local time zone.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":4756,"byte_end":4841,"line_start":112,"line_end":112,"column_start":1,"column_end":86}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":4842,"byte_end":4845,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"! * [**`FixedOffset`**](./offset/struct.FixedOffset.html) specifies","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":4846,"byte_end":4915,"line_start":114,"line_end":114,"column_start":1,"column_end":70}},{"value":"!   an arbitrary, fixed time zone such as UTC+09:00 or UTC-10:30.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":4916,"byte_end":4983,"line_start":115,"line_end":115,"column_start":1,"column_end":68}},{"value":"!   This often results from the parsed textual date and time.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":4984,"byte_end":5047,"line_start":116,"line_end":116,"column_start":1,"column_end":64}},{"value":"!   Since it stores the most information and does not depend on the system environment,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":5048,"byte_end":5137,"line_start":117,"line_end":117,"column_start":1,"column_end":90}},{"value":"!   you would want to normalize other `TimeZone`s into this type.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":5138,"byte_end":5205,"line_start":118,"line_end":118,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":5206,"byte_end":5209,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"! `DateTime`s with different `TimeZone` types are distinct and do not mix,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":5210,"byte_end":5286,"line_start":120,"line_end":120,"column_start":1,"column_end":77}},{"value":"! but can be converted to each other using","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":5287,"byte_end":5331,"line_start":121,"line_end":121,"column_start":1,"column_end":45}},{"value":"! the [`DateTime::with_timezone`](./struct.DateTime.html#method.with_timezone) method.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":5332,"byte_end":5420,"line_start":122,"line_end":122,"column_start":1,"column_end":89}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":5421,"byte_end":5424,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"! You can get the current date and time in the UTC time zone","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":5425,"byte_end":5487,"line_start":124,"line_end":124,"column_start":1,"column_end":63}},{"value":"! ([`Utc::now()`](./offset/struct.Utc.html#method.now))","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":5488,"byte_end":5545,"line_start":125,"line_end":125,"column_start":1,"column_end":58}},{"value":"! or in the local time zone","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":5546,"byte_end":5575,"line_start":126,"line_end":126,"column_start":1,"column_end":30}},{"value":"! ([`Local::now()`](./offset/struct.Local.html#method.now)).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":5576,"byte_end":5638,"line_start":127,"line_end":127,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":5639,"byte_end":5642,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":5643,"byte_end":5654,"line_start":129,"line_end":129,"column_start":1,"column_end":12}},{"value":"! use chrono::prelude::*;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":5655,"byte_end":5682,"line_start":130,"line_end":130,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":5683,"byte_end":5686,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"! let utc: DateTime<Utc> = Utc::now();       // e.g. `2014-11-28T12:45:59.324310806Z`","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":5687,"byte_end":5774,"line_start":132,"line_end":132,"column_start":1,"column_end":88}},{"value":"! let local: DateTime<Local> = Local::now(); // e.g. `2014-11-28T21:45:59.324310806+09:00`","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":5775,"byte_end":5867,"line_start":133,"line_end":133,"column_start":1,"column_end":93}},{"value":"! # let _ = utc; let _ = local;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":5868,"byte_end":5901,"line_start":134,"line_end":134,"column_start":1,"column_end":34}},{"value":"! ```","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":5902,"byte_end":5909,"line_start":135,"line_end":135,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":5910,"byte_end":5913,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"! Alternatively, you can create your own date and time.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":5914,"byte_end":5971,"line_start":137,"line_end":137,"column_start":1,"column_end":58}},{"value":"! This is a bit verbose due to Rust's lack of function and method overloading,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":5972,"byte_end":6052,"line_start":138,"line_end":138,"column_start":1,"column_end":81}},{"value":"! but in turn we get a rich combination of initialization methods.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":6053,"byte_end":6121,"line_start":139,"line_end":139,"column_start":1,"column_end":69}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":6122,"byte_end":6125,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":6126,"byte_end":6137,"line_start":141,"line_end":141,"column_start":1,"column_end":12}},{"value":"! use chrono::prelude::*;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":6138,"byte_end":6165,"line_start":142,"line_end":142,"column_start":1,"column_end":28}},{"value":"! use chrono::offset::LocalResult;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":6166,"byte_end":6202,"line_start":143,"line_end":143,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":6203,"byte_end":6206,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"! let dt = Utc.ymd(2014, 7, 8).and_hms(9, 10, 11); // `2014-07-08T09:10:11Z`","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":6207,"byte_end":6285,"line_start":145,"line_end":145,"column_start":1,"column_end":79}},{"value":"! // July 8 is 188th day of the year 2014 (`o` for \"ordinal\")","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":6286,"byte_end":6349,"line_start":146,"line_end":146,"column_start":1,"column_end":64}},{"value":"! assert_eq!(dt, Utc.yo(2014, 189).and_hms(9, 10, 11));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":6350,"byte_end":6407,"line_start":147,"line_end":147,"column_start":1,"column_end":58}},{"value":"! // July 8 is Tuesday in ISO week 28 of the year 2014.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":6408,"byte_end":6465,"line_start":148,"line_end":148,"column_start":1,"column_end":58}},{"value":"! assert_eq!(dt, Utc.isoywd(2014, 28, Weekday::Tue).and_hms(9, 10, 11));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":6466,"byte_end":6540,"line_start":149,"line_end":149,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":6541,"byte_end":6544,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"! let dt = Utc.ymd(2014, 7, 8).and_hms_milli(9, 10, 11, 12); // `2014-07-08T09:10:11.012Z`","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":6545,"byte_end":6637,"line_start":151,"line_end":151,"column_start":1,"column_end":93}},{"value":"! assert_eq!(dt, Utc.ymd(2014, 7, 8).and_hms_micro(9, 10, 11, 12_000));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":6638,"byte_end":6711,"line_start":152,"line_end":152,"column_start":1,"column_end":74}},{"value":"! assert_eq!(dt, Utc.ymd(2014, 7, 8).and_hms_nano(9, 10, 11, 12_000_000));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":6712,"byte_end":6788,"line_start":153,"line_end":153,"column_start":1,"column_end":77}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":6789,"byte_end":6792,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"! // dynamic verification","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":6793,"byte_end":6820,"line_start":155,"line_end":155,"column_start":1,"column_end":28}},{"value":"! assert_eq!(Utc.ymd_opt(2014, 7, 8).and_hms_opt(21, 15, 33),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":6821,"byte_end":6884,"line_start":156,"line_end":156,"column_start":1,"column_end":64}},{"value":"!            LocalResult::Single(Utc.ymd(2014, 7, 8).and_hms(21, 15, 33)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":6885,"byte_end":6962,"line_start":157,"line_end":157,"column_start":1,"column_end":78}},{"value":"! assert_eq!(Utc.ymd_opt(2014, 7, 8).and_hms_opt(80, 15, 33), LocalResult::None);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":6963,"byte_end":7046,"line_start":158,"line_end":158,"column_start":1,"column_end":84}},{"value":"! assert_eq!(Utc.ymd_opt(2014, 7, 38).and_hms_opt(21, 15, 33), LocalResult::None);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":7047,"byte_end":7131,"line_start":159,"line_end":159,"column_start":1,"column_end":85}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":7132,"byte_end":7135,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"! // other time zone objects can be used to construct a local datetime.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":7136,"byte_end":7209,"line_start":161,"line_end":161,"column_start":1,"column_end":74}},{"value":"! // obviously, `local_dt` is normally different from `dt`, but `fixed_dt` should be identical.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":7210,"byte_end":7307,"line_start":162,"line_end":162,"column_start":1,"column_end":98}},{"value":"! let local_dt = Local.ymd(2014, 7, 8).and_hms_milli(9, 10, 11, 12);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":7308,"byte_end":7378,"line_start":163,"line_end":163,"column_start":1,"column_end":71}},{"value":"! let fixed_dt = FixedOffset::east(9 * 3600).ymd(2014, 7, 8).and_hms_milli(18, 10, 11, 12);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":7379,"byte_end":7472,"line_start":164,"line_end":164,"column_start":1,"column_end":94}},{"value":"! assert_eq!(dt, fixed_dt);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":7473,"byte_end":7502,"line_start":165,"line_end":165,"column_start":1,"column_end":30}},{"value":"! # let _ = local_dt;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":7503,"byte_end":7526,"line_start":166,"line_end":166,"column_start":1,"column_end":24}},{"value":"! ```","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":7527,"byte_end":7534,"line_start":167,"line_end":167,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":7535,"byte_end":7538,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"! Various properties are available to the date and time, and can be altered individually.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":7539,"byte_end":7630,"line_start":169,"line_end":169,"column_start":1,"column_end":92}},{"value":"! Most of them are defined in the traits [`Datelike`](./trait.Datelike.html) and","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":7631,"byte_end":7713,"line_start":170,"line_end":170,"column_start":1,"column_end":83}},{"value":"! [`Timelike`](./trait.Timelike.html) which you should `use` before.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":7714,"byte_end":7784,"line_start":171,"line_end":171,"column_start":1,"column_end":71}},{"value":"! Addition and subtraction is also supported.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":7785,"byte_end":7832,"line_start":172,"line_end":172,"column_start":1,"column_end":48}},{"value":"! The following illustrates most supported operations to the date and time:","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":7833,"byte_end":7910,"line_start":173,"line_end":173,"column_start":1,"column_end":78}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":7911,"byte_end":7914,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":7915,"byte_end":7926,"line_start":175,"line_end":175,"column_start":1,"column_end":12}},{"value":"! # extern crate chrono;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":7927,"byte_end":7953,"line_start":176,"line_end":176,"column_start":1,"column_end":27}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":7954,"byte_end":7957,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"! # fn main() {","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":7958,"byte_end":7975,"line_start":178,"line_end":178,"column_start":1,"column_end":18}},{"value":"! use chrono::prelude::*;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":7976,"byte_end":8003,"line_start":179,"line_end":179,"column_start":1,"column_end":28}},{"value":"! use chrono::Duration;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":8004,"byte_end":8029,"line_start":180,"line_end":180,"column_start":1,"column_end":26}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":8030,"byte_end":8033,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"! // assume this returned `2014-11-28T21:45:59.324310806+09:00`:","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":8034,"byte_end":8100,"line_start":182,"line_end":182,"column_start":1,"column_end":67}},{"value":"! let dt = FixedOffset::east(9*3600).ymd(2014, 11, 28).and_hms_nano(21, 45, 59, 324310806);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":8101,"byte_end":8194,"line_start":183,"line_end":183,"column_start":1,"column_end":94}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":8195,"byte_end":8198,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"! // property accessors","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":8199,"byte_end":8224,"line_start":185,"line_end":185,"column_start":1,"column_end":26}},{"value":"! assert_eq!((dt.year(), dt.month(), dt.day()), (2014, 11, 28));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":8225,"byte_end":8291,"line_start":186,"line_end":186,"column_start":1,"column_end":67}},{"value":"! assert_eq!((dt.month0(), dt.day0()), (10, 27)); // for unfortunate souls","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":8292,"byte_end":8368,"line_start":187,"line_end":187,"column_start":1,"column_end":77}},{"value":"! assert_eq!((dt.hour(), dt.minute(), dt.second()), (21, 45, 59));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":8369,"byte_end":8437,"line_start":188,"line_end":188,"column_start":1,"column_end":69}},{"value":"! assert_eq!(dt.weekday(), Weekday::Fri);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":8438,"byte_end":8481,"line_start":189,"line_end":189,"column_start":1,"column_end":44}},{"value":"! assert_eq!(dt.weekday().number_from_monday(), 5); // Mon=1, ..., Sun=7","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":8482,"byte_end":8556,"line_start":190,"line_end":190,"column_start":1,"column_end":75}},{"value":"! assert_eq!(dt.ordinal(), 332); // the day of year","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":8557,"byte_end":8610,"line_start":191,"line_end":191,"column_start":1,"column_end":54}},{"value":"! assert_eq!(dt.num_days_from_ce(), 735565); // the number of days from and including Jan 1, 1","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":8611,"byte_end":8707,"line_start":192,"line_end":192,"column_start":1,"column_end":97}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":8708,"byte_end":8711,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"! // time zone accessor and manipulation","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":8712,"byte_end":8754,"line_start":194,"line_end":194,"column_start":1,"column_end":43}},{"value":"! assert_eq!(dt.offset().fix().local_minus_utc(), 9 * 3600);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":8755,"byte_end":8817,"line_start":195,"line_end":195,"column_start":1,"column_end":63}},{"value":"! assert_eq!(dt.timezone(), FixedOffset::east(9 * 3600));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":8818,"byte_end":8877,"line_start":196,"line_end":196,"column_start":1,"column_end":60}},{"value":"! assert_eq!(dt.with_timezone(&Utc), Utc.ymd(2014, 11, 28).and_hms_nano(12, 45, 59, 324310806));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":8878,"byte_end":8976,"line_start":197,"line_end":197,"column_start":1,"column_end":99}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":8977,"byte_end":8980,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"! // a sample of property manipulations (validates dynamically)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":8981,"byte_end":9046,"line_start":199,"line_end":199,"column_start":1,"column_end":66}},{"value":"! assert_eq!(dt.with_day(29).unwrap().weekday(), Weekday::Sat); // 2014-11-29 is Saturday","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":9047,"byte_end":9138,"line_start":200,"line_end":200,"column_start":1,"column_end":92}},{"value":"! assert_eq!(dt.with_day(32), None);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":9139,"byte_end":9177,"line_start":201,"line_end":201,"column_start":1,"column_end":39}},{"value":"! assert_eq!(dt.with_year(-300).unwrap().num_days_from_ce(), -109606); // November 29, 301 BCE","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":9178,"byte_end":9274,"line_start":202,"line_end":202,"column_start":1,"column_end":97}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":9275,"byte_end":9278,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"! // arithmetic operations","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":9279,"byte_end":9307,"line_start":204,"line_end":204,"column_start":1,"column_end":29}},{"value":"! let dt1 = Utc.ymd(2014, 11, 14).and_hms(8, 9, 10);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":9308,"byte_end":9362,"line_start":205,"line_end":205,"column_start":1,"column_end":55}},{"value":"! let dt2 = Utc.ymd(2014, 11, 14).and_hms(10, 9, 8);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":9363,"byte_end":9417,"line_start":206,"line_end":206,"column_start":1,"column_end":55}},{"value":"! assert_eq!(dt1.signed_duration_since(dt2), Duration::seconds(-2 * 3600 + 2));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":9418,"byte_end":9499,"line_start":207,"line_end":207,"column_start":1,"column_end":82}},{"value":"! assert_eq!(dt2.signed_duration_since(dt1), Duration::seconds(2 * 3600 - 2));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":9500,"byte_end":9580,"line_start":208,"line_end":208,"column_start":1,"column_end":81}},{"value":"! assert_eq!(Utc.ymd(1970, 1, 1).and_hms(0, 0, 0) + Duration::seconds(1_000_000_000),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":9581,"byte_end":9668,"line_start":209,"line_end":209,"column_start":1,"column_end":88}},{"value":"!            Utc.ymd(2001, 9, 9).and_hms(1, 46, 40));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":9669,"byte_end":9724,"line_start":210,"line_end":210,"column_start":1,"column_end":56}},{"value":"! assert_eq!(Utc.ymd(1970, 1, 1).and_hms(0, 0, 0) - Duration::seconds(1_000_000_000),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":9725,"byte_end":9812,"line_start":211,"line_end":211,"column_start":1,"column_end":88}},{"value":"!            Utc.ymd(1938, 4, 24).and_hms(22, 13, 20));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":9813,"byte_end":9870,"line_start":212,"line_end":212,"column_start":1,"column_end":58}},{"value":"! # }","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":9871,"byte_end":9878,"line_start":213,"line_end":213,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":9879,"byte_end":9886,"line_start":214,"line_end":214,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":9887,"byte_end":9890,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"! ### Formatting and Parsing","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":9891,"byte_end":9921,"line_start":216,"line_end":216,"column_start":1,"column_end":31}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":9922,"byte_end":9925,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"! Formatting is done via the [`format`](./struct.DateTime.html#method.format) method,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":9926,"byte_end":10013,"line_start":218,"line_end":218,"column_start":1,"column_end":88}},{"value":"! which format is equivalent to the familiar `strftime` format.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":10014,"byte_end":10079,"line_start":219,"line_end":219,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":10080,"byte_end":10083,"line_start":220,"line_end":220,"column_start":1,"column_end":4}},{"value":"! See [`format::strftime`](./format/strftime/index.html#specifiers)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":10084,"byte_end":10153,"line_start":221,"line_end":221,"column_start":1,"column_end":70}},{"value":"! documentation for full syntax and list of specifiers.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":10154,"byte_end":10211,"line_start":222,"line_end":222,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":10212,"byte_end":10215,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"! The default `to_string` method and `{:?}` specifier also give a reasonable representation.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":10216,"byte_end":10310,"line_start":224,"line_end":224,"column_start":1,"column_end":95}},{"value":"! Chrono also provides [`to_rfc2822`](./struct.DateTime.html#method.to_rfc2822) and","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":10311,"byte_end":10396,"line_start":225,"line_end":225,"column_start":1,"column_end":86}},{"value":"! [`to_rfc3339`](./struct.DateTime.html#method.to_rfc3339) methods","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":10397,"byte_end":10465,"line_start":226,"line_end":226,"column_start":1,"column_end":69}},{"value":"! for well-known formats.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":10466,"byte_end":10493,"line_start":227,"line_end":227,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":10494,"byte_end":10497,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"! Chrono now also provides date formatting in almost any language without the","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":10498,"byte_end":10577,"line_start":229,"line_end":229,"column_start":1,"column_end":80}},{"value":"! help of an additional C library. This functionality is under the feature","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":10578,"byte_end":10654,"line_start":230,"line_end":230,"column_start":1,"column_end":77}},{"value":"! `unstable-locales`:","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":10655,"byte_end":10678,"line_start":231,"line_end":231,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":10679,"byte_end":10682,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":10683,"byte_end":10694,"line_start":233,"line_end":233,"column_start":1,"column_end":12}},{"value":"! chrono { version = \"0.4\", features = [\"unstable-locales\"]","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":10695,"byte_end":10756,"line_start":234,"line_end":234,"column_start":1,"column_end":62}},{"value":"! ```","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":10757,"byte_end":10764,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":10765,"byte_end":10768,"line_start":236,"line_end":236,"column_start":1,"column_end":4}},{"value":"! The `unstable-locales` feature requires and implies at least the `alloc` feature.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":10769,"byte_end":10854,"line_start":237,"line_end":237,"column_start":1,"column_end":86}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":10855,"byte_end":10858,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":10859,"byte_end":10870,"line_start":239,"line_end":239,"column_start":1,"column_end":12}},{"value":"! use chrono::prelude::*;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":10871,"byte_end":10898,"line_start":240,"line_end":240,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":10899,"byte_end":10902,"line_start":241,"line_end":241,"column_start":1,"column_end":4}},{"value":"! let dt = Utc.ymd(2014, 11, 28).and_hms(12, 0, 9);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":10903,"byte_end":10956,"line_start":242,"line_end":242,"column_start":1,"column_end":54}},{"value":"! assert_eq!(dt.format(\"%Y-%m-%d %H:%M:%S\").to_string(), \"2014-11-28 12:00:09\");","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":10957,"byte_end":11039,"line_start":243,"line_end":243,"column_start":1,"column_end":83}},{"value":"! assert_eq!(dt.format(\"%a %b %e %T %Y\").to_string(), \"Fri Nov 28 12:00:09 2014\");","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":11040,"byte_end":11124,"line_start":244,"line_end":244,"column_start":1,"column_end":85}},{"value":"! assert_eq!(dt.format_localized(\"%A %e %B %Y, %T\", Locale::fr_BE).to_string(), \"vendredi 28 novembre 2014, 12:00:09\");","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":11125,"byte_end":11246,"line_start":245,"line_end":245,"column_start":1,"column_end":122}},{"value":"! assert_eq!(dt.format(\"%a %b %e %T %Y\").to_string(), dt.format(\"%c\").to_string());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":11247,"byte_end":11332,"line_start":246,"line_end":246,"column_start":1,"column_end":86}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":11333,"byte_end":11336,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"! assert_eq!(dt.to_string(), \"2014-11-28 12:00:09 UTC\");","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":11337,"byte_end":11395,"line_start":248,"line_end":248,"column_start":1,"column_end":59}},{"value":"! assert_eq!(dt.to_rfc2822(), \"Fri, 28 Nov 2014 12:00:09 +0000\");","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":11396,"byte_end":11463,"line_start":249,"line_end":249,"column_start":1,"column_end":68}},{"value":"! assert_eq!(dt.to_rfc3339(), \"2014-11-28T12:00:09+00:00\");","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":11464,"byte_end":11525,"line_start":250,"line_end":250,"column_start":1,"column_end":62}},{"value":"! assert_eq!(format!(\"{:?}\", dt), \"2014-11-28T12:00:09Z\");","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":11526,"byte_end":11586,"line_start":251,"line_end":251,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":11587,"byte_end":11590,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"! // Note that milli/nanoseconds are only printed if they are non-zero","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":11591,"byte_end":11663,"line_start":253,"line_end":253,"column_start":1,"column_end":73}},{"value":"! let dt_nano = Utc.ymd(2014, 11, 28).and_hms_nano(12, 0, 9, 1);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":11664,"byte_end":11730,"line_start":254,"line_end":254,"column_start":1,"column_end":67}},{"value":"! assert_eq!(format!(\"{:?}\", dt_nano), \"2014-11-28T12:00:09.000000001Z\");","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":11731,"byte_end":11806,"line_start":255,"line_end":255,"column_start":1,"column_end":76}},{"value":"! ```","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":11807,"byte_end":11814,"line_start":256,"line_end":256,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":11815,"byte_end":11818,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"! Parsing can be done with three methods:","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":11819,"byte_end":11862,"line_start":258,"line_end":258,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":11863,"byte_end":11866,"line_start":259,"line_end":259,"column_start":1,"column_end":4}},{"value":"! 1. The standard [`FromStr`](https://doc.rust-lang.org/std/str/trait.FromStr.html) trait","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":11867,"byte_end":11958,"line_start":260,"line_end":260,"column_start":1,"column_end":92}},{"value":"!    (and [`parse`](https://doc.rust-lang.org/std/primitive.str.html#method.parse) method","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":11959,"byte_end":12050,"line_start":261,"line_end":261,"column_start":1,"column_end":92}},{"value":"!    on a string) can be used for parsing `DateTime<FixedOffset>`, `DateTime<Utc>` and","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":12051,"byte_end":12139,"line_start":262,"line_end":262,"column_start":1,"column_end":89}},{"value":"!    `DateTime<Local>` values. This parses what the `{:?}`","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":12140,"byte_end":12200,"line_start":263,"line_end":263,"column_start":1,"column_end":61}},{"value":"!    ([`std::fmt::Debug`](https://doc.rust-lang.org/std/fmt/trait.Debug.html))","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":12201,"byte_end":12281,"line_start":264,"line_end":264,"column_start":1,"column_end":81}},{"value":"!    format specifier prints, and requires the offset to be present.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":12282,"byte_end":12352,"line_start":265,"line_end":265,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":12353,"byte_end":12356,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"! 2. [`DateTime::parse_from_str`](./struct.DateTime.html#method.parse_from_str) parses","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":12357,"byte_end":12445,"line_start":267,"line_end":267,"column_start":1,"column_end":89}},{"value":"!    a date and time with offsets and returns `DateTime<FixedOffset>`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":12446,"byte_end":12518,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"!    This should be used when the offset is a part of input and the caller cannot guess that.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":12519,"byte_end":12614,"line_start":269,"line_end":269,"column_start":1,"column_end":96}},{"value":"!    It *cannot* be used when the offset can be missing.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":12615,"byte_end":12673,"line_start":270,"line_end":270,"column_start":1,"column_end":59}},{"value":"!    [`DateTime::parse_from_rfc2822`](./struct.DateTime.html#method.parse_from_rfc2822)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":12674,"byte_end":12763,"line_start":271,"line_end":271,"column_start":1,"column_end":90}},{"value":"!    and","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":12764,"byte_end":12774,"line_start":272,"line_end":272,"column_start":1,"column_end":11}},{"value":"!    [`DateTime::parse_from_rfc3339`](./struct.DateTime.html#method.parse_from_rfc3339)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":12775,"byte_end":12864,"line_start":273,"line_end":273,"column_start":1,"column_end":90}},{"value":"!    are similar but for well-known formats.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":12865,"byte_end":12911,"line_start":274,"line_end":274,"column_start":1,"column_end":47}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":12912,"byte_end":12915,"line_start":275,"line_end":275,"column_start":1,"column_end":4}},{"value":"! 3. [`Offset::datetime_from_str`](./offset/trait.TimeZone.html#method.datetime_from_str) is","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":12916,"byte_end":13010,"line_start":276,"line_end":276,"column_start":1,"column_end":95}},{"value":"!    similar but returns `DateTime` of given offset.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":13011,"byte_end":13065,"line_start":277,"line_end":277,"column_start":1,"column_end":55}},{"value":"!    When the explicit offset is missing from the input, it simply uses given offset.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":13066,"byte_end":13153,"line_start":278,"line_end":278,"column_start":1,"column_end":88}},{"value":"!    It issues an error when the input contains an explicit offset different","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":13154,"byte_end":13232,"line_start":279,"line_end":279,"column_start":1,"column_end":79}},{"value":"!    from the current offset.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":13233,"byte_end":13264,"line_start":280,"line_end":280,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":13265,"byte_end":13268,"line_start":281,"line_end":281,"column_start":1,"column_end":4}},{"value":"! More detailed control over the parsing process is available via","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":13269,"byte_end":13336,"line_start":282,"line_end":282,"column_start":1,"column_end":68}},{"value":"! [`format`](./format/index.html) module.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":13337,"byte_end":13380,"line_start":283,"line_end":283,"column_start":1,"column_end":44}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":13381,"byte_end":13384,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":13385,"byte_end":13396,"line_start":285,"line_end":285,"column_start":1,"column_end":12}},{"value":"! use chrono::prelude::*;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":13397,"byte_end":13424,"line_start":286,"line_end":286,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":13425,"byte_end":13428,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"! let dt = Utc.ymd(2014, 11, 28).and_hms(12, 0, 9);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":13429,"byte_end":13482,"line_start":288,"line_end":288,"column_start":1,"column_end":54}},{"value":"! let fixed_dt = dt.with_timezone(&FixedOffset::east(9*3600));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":13483,"byte_end":13547,"line_start":289,"line_end":289,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":13548,"byte_end":13551,"line_start":290,"line_end":290,"column_start":1,"column_end":4}},{"value":"! // method 1","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":13552,"byte_end":13567,"line_start":291,"line_end":291,"column_start":1,"column_end":16}},{"value":"! assert_eq!(\"2014-11-28T12:00:09Z\".parse::<DateTime<Utc>>(), Ok(dt.clone()));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":13568,"byte_end":13648,"line_start":292,"line_end":292,"column_start":1,"column_end":81}},{"value":"! assert_eq!(\"2014-11-28T21:00:09+09:00\".parse::<DateTime<Utc>>(), Ok(dt.clone()));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":13649,"byte_end":13734,"line_start":293,"line_end":293,"column_start":1,"column_end":86}},{"value":"! assert_eq!(\"2014-11-28T21:00:09+09:00\".parse::<DateTime<FixedOffset>>(), Ok(fixed_dt.clone()));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":13735,"byte_end":13834,"line_start":294,"line_end":294,"column_start":1,"column_end":100}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":13835,"byte_end":13838,"line_start":295,"line_end":295,"column_start":1,"column_end":4}},{"value":"! // method 2","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":13839,"byte_end":13854,"line_start":296,"line_end":296,"column_start":1,"column_end":16}},{"value":"! assert_eq!(DateTime::parse_from_str(\"2014-11-28 21:00:09 +09:00\", \"%Y-%m-%d %H:%M:%S %z\"),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":13855,"byte_end":13949,"line_start":297,"line_end":297,"column_start":1,"column_end":95}},{"value":"!            Ok(fixed_dt.clone()));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":13950,"byte_end":13987,"line_start":298,"line_end":298,"column_start":1,"column_end":38}},{"value":"! assert_eq!(DateTime::parse_from_rfc2822(\"Fri, 28 Nov 2014 21:00:09 +0900\"),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":13988,"byte_end":14067,"line_start":299,"line_end":299,"column_start":1,"column_end":80}},{"value":"!            Ok(fixed_dt.clone()));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":14068,"byte_end":14105,"line_start":300,"line_end":300,"column_start":1,"column_end":38}},{"value":"! assert_eq!(DateTime::parse_from_rfc3339(\"2014-11-28T21:00:09+09:00\"), Ok(fixed_dt.clone()));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":14106,"byte_end":14202,"line_start":301,"line_end":301,"column_start":1,"column_end":97}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":14203,"byte_end":14206,"line_start":302,"line_end":302,"column_start":1,"column_end":4}},{"value":"! // method 3","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":14207,"byte_end":14222,"line_start":303,"line_end":303,"column_start":1,"column_end":16}},{"value":"! assert_eq!(Utc.datetime_from_str(\"2014-11-28 12:00:09\", \"%Y-%m-%d %H:%M:%S\"), Ok(dt.clone()));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":14223,"byte_end":14321,"line_start":304,"line_end":304,"column_start":1,"column_end":99}},{"value":"! assert_eq!(Utc.datetime_from_str(\"Fri Nov 28 12:00:09 2014\", \"%a %b %e %T %Y\"), Ok(dt.clone()));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":14322,"byte_end":14422,"line_start":305,"line_end":305,"column_start":1,"column_end":101}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":14423,"byte_end":14426,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"! // oops, the year is missing!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":14427,"byte_end":14460,"line_start":307,"line_end":307,"column_start":1,"column_end":34}},{"value":"! assert!(Utc.datetime_from_str(\"Fri Nov 28 12:00:09\", \"%a %b %e %T %Y\").is_err());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":14461,"byte_end":14546,"line_start":308,"line_end":308,"column_start":1,"column_end":86}},{"value":"! // oops, the format string does not include the year at all!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":14547,"byte_end":14611,"line_start":309,"line_end":309,"column_start":1,"column_end":65}},{"value":"! assert!(Utc.datetime_from_str(\"Fri Nov 28 12:00:09\", \"%a %b %e %T\").is_err());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":14612,"byte_end":14694,"line_start":310,"line_end":310,"column_start":1,"column_end":83}},{"value":"! // oops, the weekday is incorrect!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":14695,"byte_end":14733,"line_start":311,"line_end":311,"column_start":1,"column_end":39}},{"value":"! assert!(Utc.datetime_from_str(\"Sat Nov 28 12:00:09 2014\", \"%a %b %e %T %Y\").is_err());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":14734,"byte_end":14824,"line_start":312,"line_end":312,"column_start":1,"column_end":91}},{"value":"! ```","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":14825,"byte_end":14832,"line_start":313,"line_end":313,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":14833,"byte_end":14836,"line_start":314,"line_end":314,"column_start":1,"column_end":4}},{"value":"! Again : See [`format::strftime`](./format/strftime/index.html#specifiers)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":14837,"byte_end":14914,"line_start":315,"line_end":315,"column_start":1,"column_end":78}},{"value":"! documentation for full syntax and list of specifiers.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":14915,"byte_end":14972,"line_start":316,"line_end":316,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":14973,"byte_end":14976,"line_start":317,"line_end":317,"column_start":1,"column_end":4}},{"value":"! ### Conversion from and to EPOCH timestamps","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":14977,"byte_end":15024,"line_start":318,"line_end":318,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":15025,"byte_end":15028,"line_start":319,"line_end":319,"column_start":1,"column_end":4}},{"value":"! Use [`Utc.timestamp(seconds, nanoseconds)`](./offset/trait.TimeZone.html#method.timestamp)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":15029,"byte_end":15123,"line_start":320,"line_end":320,"column_start":1,"column_end":95}},{"value":"! to construct a [`DateTime<Utc>`](./struct.DateTime.html) from a UNIX timestamp","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":15124,"byte_end":15206,"line_start":321,"line_end":321,"column_start":1,"column_end":83}},{"value":"! (seconds, nanoseconds that passed since January 1st 1970).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":15207,"byte_end":15269,"line_start":322,"line_end":322,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":15270,"byte_end":15273,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"! Use [`DateTime.timestamp`](./struct.DateTime.html#method.timestamp) to get the timestamp (in seconds)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":15274,"byte_end":15379,"line_start":324,"line_end":324,"column_start":1,"column_end":106}},{"value":"! from a [`DateTime`](./struct.DateTime.html). Additionally, you can use","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":15380,"byte_end":15454,"line_start":325,"line_end":325,"column_start":1,"column_end":75}},{"value":"! [`DateTime.timestamp_subsec_nanos`](./struct.DateTime.html#method.timestamp_subsec_nanos)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":15455,"byte_end":15548,"line_start":326,"line_end":326,"column_start":1,"column_end":94}},{"value":"! to get the number of additional number of nanoseconds.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":15549,"byte_end":15607,"line_start":327,"line_end":327,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":15608,"byte_end":15611,"line_start":328,"line_end":328,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":15612,"byte_end":15623,"line_start":329,"line_end":329,"column_start":1,"column_end":12}},{"value":"! // We need the trait in scope to use Utc::timestamp().","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":15624,"byte_end":15682,"line_start":330,"line_end":330,"column_start":1,"column_end":59}},{"value":"! use chrono::{DateTime, TimeZone, Utc};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":15683,"byte_end":15725,"line_start":331,"line_end":331,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":15726,"byte_end":15729,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"! // Construct a datetime from epoch:","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":15730,"byte_end":15769,"line_start":333,"line_end":333,"column_start":1,"column_end":40}},{"value":"! let dt = Utc.timestamp(1_500_000_000, 0);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":15770,"byte_end":15815,"line_start":334,"line_end":334,"column_start":1,"column_end":46}},{"value":"! assert_eq!(dt.to_rfc2822(), \"Fri, 14 Jul 2017 02:40:00 +0000\");","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":15816,"byte_end":15883,"line_start":335,"line_end":335,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":15884,"byte_end":15887,"line_start":336,"line_end":336,"column_start":1,"column_end":4}},{"value":"! // Get epoch value from a datetime:","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":15888,"byte_end":15927,"line_start":337,"line_end":337,"column_start":1,"column_end":40}},{"value":"! let dt = DateTime::parse_from_rfc2822(\"Fri, 14 Jul 2017 02:40:00 +0000\").unwrap();","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":15928,"byte_end":16014,"line_start":338,"line_end":338,"column_start":1,"column_end":87}},{"value":"! assert_eq!(dt.timestamp(), 1_500_000_000);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":16015,"byte_end":16061,"line_start":339,"line_end":339,"column_start":1,"column_end":47}},{"value":"! ```","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":16062,"byte_end":16069,"line_start":340,"line_end":340,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":16070,"byte_end":16073,"line_start":341,"line_end":341,"column_start":1,"column_end":4}},{"value":"! ### Individual date","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":16074,"byte_end":16097,"line_start":342,"line_end":342,"column_start":1,"column_end":24}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":16098,"byte_end":16101,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"! Chrono also provides an individual date type ([**`Date`**](./struct.Date.html)).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":16102,"byte_end":16186,"line_start":344,"line_end":344,"column_start":1,"column_end":85}},{"value":"! It also has time zones attached, and have to be constructed via time zones.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":16187,"byte_end":16266,"line_start":345,"line_end":345,"column_start":1,"column_end":80}},{"value":"! Most operations available to `DateTime` are also available to `Date` whenever appropriate.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":16267,"byte_end":16361,"line_start":346,"line_end":346,"column_start":1,"column_end":95}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":16362,"byte_end":16365,"line_start":347,"line_end":347,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":16366,"byte_end":16377,"line_start":348,"line_end":348,"column_start":1,"column_end":12}},{"value":"! use chrono::prelude::*;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":16378,"byte_end":16405,"line_start":349,"line_end":349,"column_start":1,"column_end":28}},{"value":"! use chrono::offset::LocalResult;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":16406,"byte_end":16442,"line_start":350,"line_end":350,"column_start":1,"column_end":37}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":16443,"byte_end":16446,"line_start":351,"line_end":351,"column_start":1,"column_end":4}},{"value":"! # // these *may* fail, but only very rarely. just rerun the test if you were that unfortunate ;)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":16447,"byte_end":16547,"line_start":352,"line_end":352,"column_start":1,"column_end":101}},{"value":"! assert_eq!(Utc::today(), Utc::now().date());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":16548,"byte_end":16596,"line_start":353,"line_end":353,"column_start":1,"column_end":49}},{"value":"! assert_eq!(Local::today(), Local::now().date());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":16597,"byte_end":16649,"line_start":354,"line_end":354,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":16650,"byte_end":16653,"line_start":355,"line_end":355,"column_start":1,"column_end":4}},{"value":"! assert_eq!(Utc.ymd(2014, 11, 28).weekday(), Weekday::Fri);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":16654,"byte_end":16716,"line_start":356,"line_end":356,"column_start":1,"column_end":63}},{"value":"! assert_eq!(Utc.ymd_opt(2014, 11, 31), LocalResult::None);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":16717,"byte_end":16778,"line_start":357,"line_end":357,"column_start":1,"column_end":62}},{"value":"! assert_eq!(Utc.ymd(2014, 11, 28).and_hms_milli(7, 8, 9, 10).format(\"%H%M%S\").to_string(),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":16779,"byte_end":16872,"line_start":358,"line_end":358,"column_start":1,"column_end":94}},{"value":"!            \"070809\");","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":16873,"byte_end":16898,"line_start":359,"line_end":359,"column_start":1,"column_end":26}},{"value":"! ```","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":16899,"byte_end":16906,"line_start":360,"line_end":360,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":16907,"byte_end":16910,"line_start":361,"line_end":361,"column_start":1,"column_end":4}},{"value":"! There is no timezone-aware `Time` due to the lack of usefulness and also the complexity.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":16911,"byte_end":17003,"line_start":362,"line_end":362,"column_start":1,"column_end":93}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":17004,"byte_end":17007,"line_start":363,"line_end":363,"column_start":1,"column_end":4}},{"value":"! `DateTime` has [`date`](./struct.DateTime.html#method.date) method","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":17008,"byte_end":17078,"line_start":364,"line_end":364,"column_start":1,"column_end":71}},{"value":"! which returns a `Date` which represents its date component.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":17079,"byte_end":17142,"line_start":365,"line_end":365,"column_start":1,"column_end":64}},{"value":"! There is also a [`time`](./struct.DateTime.html#method.time) method,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":17143,"byte_end":17215,"line_start":366,"line_end":366,"column_start":1,"column_end":73}},{"value":"! which simply returns a naive local time described below.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":17216,"byte_end":17276,"line_start":367,"line_end":367,"column_start":1,"column_end":61}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":17277,"byte_end":17280,"line_start":368,"line_end":368,"column_start":1,"column_end":4}},{"value":"! ### Naive date and time","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":17281,"byte_end":17308,"line_start":369,"line_end":369,"column_start":1,"column_end":28}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":17309,"byte_end":17312,"line_start":370,"line_end":370,"column_start":1,"column_end":4}},{"value":"! Chrono provides naive counterparts to `Date`, (non-existent) `Time` and `DateTime`","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":17313,"byte_end":17399,"line_start":371,"line_end":371,"column_start":1,"column_end":87}},{"value":"! as [**`NaiveDate`**](./naive/struct.NaiveDate.html),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":17400,"byte_end":17456,"line_start":372,"line_end":372,"column_start":1,"column_end":57}},{"value":"! [**`NaiveTime`**](./naive/struct.NaiveTime.html) and","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":17457,"byte_end":17513,"line_start":373,"line_end":373,"column_start":1,"column_end":57}},{"value":"! [**`NaiveDateTime`**](./naive/struct.NaiveDateTime.html) respectively.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":17514,"byte_end":17588,"line_start":374,"line_end":374,"column_start":1,"column_end":75}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":17589,"byte_end":17592,"line_start":375,"line_end":375,"column_start":1,"column_end":4}},{"value":"! They have almost equivalent interfaces as their timezone-aware twins,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":17593,"byte_end":17666,"line_start":376,"line_end":376,"column_start":1,"column_end":74}},{"value":"! but are not associated to time zones obviously and can be quite low-level.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":17667,"byte_end":17745,"line_start":377,"line_end":377,"column_start":1,"column_end":79}},{"value":"! They are mostly useful for building blocks for higher-level types.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":17746,"byte_end":17816,"line_start":378,"line_end":378,"column_start":1,"column_end":71}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":17817,"byte_end":17820,"line_start":379,"line_end":379,"column_start":1,"column_end":4}},{"value":"! Timezone-aware `DateTime` and `Date` types have two methods returning naive versions:","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":17821,"byte_end":17910,"line_start":380,"line_end":380,"column_start":1,"column_end":90}},{"value":"! [`naive_local`](./struct.DateTime.html#method.naive_local) returns","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":17911,"byte_end":17981,"line_start":381,"line_end":381,"column_start":1,"column_end":71}},{"value":"! a view to the naive local time,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":17982,"byte_end":18017,"line_start":382,"line_end":382,"column_start":1,"column_end":36}},{"value":"! and [`naive_utc`](./struct.DateTime.html#method.naive_utc) returns","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":18018,"byte_end":18088,"line_start":383,"line_end":383,"column_start":1,"column_end":71}},{"value":"! a view to the naive UTC time.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":18089,"byte_end":18122,"line_start":384,"line_end":384,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":18123,"byte_end":18126,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"! ## Limitations","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":18127,"byte_end":18145,"line_start":386,"line_end":386,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":18146,"byte_end":18149,"line_start":387,"line_end":387,"column_start":1,"column_end":4}},{"value":"! Only proleptic Gregorian calendar (i.e. extended to support older dates) is supported.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":18150,"byte_end":18240,"line_start":388,"line_end":388,"column_start":1,"column_end":91}},{"value":"! Be very careful if you really have to deal with pre-20C dates, they can be in Julian or others.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":18241,"byte_end":18340,"line_start":389,"line_end":389,"column_start":1,"column_end":100}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":18341,"byte_end":18344,"line_start":390,"line_end":390,"column_start":1,"column_end":4}},{"value":"! Date types are limited in about +/- 262,000 years from the common epoch.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":18345,"byte_end":18421,"line_start":391,"line_end":391,"column_start":1,"column_end":77}},{"value":"! Time types are limited in the nanosecond accuracy.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":18422,"byte_end":18476,"line_start":392,"line_end":392,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":18477,"byte_end":18480,"line_start":393,"line_end":393,"column_start":1,"column_end":4}},{"value":"! [Leap seconds are supported in the representation but","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":18481,"byte_end":18538,"line_start":394,"line_end":394,"column_start":1,"column_end":58}},{"value":"! Chrono doesn't try to make use of them](./naive/struct.NaiveTime.html#leap-second-handling).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":18539,"byte_end":18635,"line_start":395,"line_end":395,"column_start":1,"column_end":97}},{"value":"! (The main reason is that leap seconds are not really predictable.)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":18636,"byte_end":18706,"line_start":396,"line_end":396,"column_start":1,"column_end":71}},{"value":"! Almost *every* operation over the possible leap seconds will ignore them.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":18707,"byte_end":18784,"line_start":397,"line_end":397,"column_start":1,"column_end":78}},{"value":"! Consider using `NaiveDateTime` with the implicit TAI (International Atomic Time) scale","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":18785,"byte_end":18875,"line_start":398,"line_end":398,"column_start":1,"column_end":91}},{"value":"! if you want.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":18876,"byte_end":18892,"line_start":399,"line_end":399,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":18893,"byte_end":18896,"line_start":400,"line_end":400,"column_start":1,"column_end":4}},{"value":"! Chrono inherently does not support an inaccurate or partial date and time representation.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":18897,"byte_end":18990,"line_start":401,"line_end":401,"column_start":1,"column_end":94}},{"value":"! Any operation that can be ambiguous will return `None` in such cases.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":18991,"byte_end":19064,"line_start":402,"line_end":402,"column_start":1,"column_end":74}},{"value":"! For example, \"a month later\" of 2014-01-30 is not well-defined","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":19065,"byte_end":19131,"line_start":403,"line_end":403,"column_start":1,"column_end":67}},{"value":"! and consequently `Utc.ymd(2014, 1, 30).with_month(2)` returns `None`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":19132,"byte_end":19205,"line_start":404,"line_end":404,"column_start":1,"column_end":74}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":19206,"byte_end":19209,"line_start":405,"line_end":405,"column_start":1,"column_end":4}},{"value":"! Non ISO week handling is not yet supported.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":19210,"byte_end":19257,"line_start":406,"line_end":406,"column_start":1,"column_end":48}},{"value":"! For now you can use the [chrono_ext](https://crates.io/crates/chrono_ext)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":19258,"byte_end":19335,"line_start":407,"line_end":407,"column_start":1,"column_end":78}},{"value":"! crate ([sources](https://github.com/bcourtine/chrono-ext/)).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":19336,"byte_end":19400,"line_start":408,"line_end":408,"column_start":1,"column_end":65}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":19401,"byte_end":19404,"line_start":409,"line_end":409,"column_start":1,"column_end":4}},{"value":"! Advanced time zone handling is not yet supported.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":19405,"byte_end":19458,"line_start":410,"line_end":410,"column_start":1,"column_end":54}},{"value":"! For now you can try the [Chrono-tz](https://github.com/chronotope/chrono-tz/) crate instead.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":19459,"byte_end":19555,"line_start":411,"line_end":411,"column_start":1,"column_end":97}},{"value":"deny(missing_docs)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":19704,"byte_end":19726,"line_start":415,"line_end":415,"column_start":1,"column_end":23}},{"value":"deny(missing_debug_implementations)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":19727,"byte_end":19766,"line_start":416,"line_end":416,"column_start":1,"column_end":40}},{"value":"deny(dead_code)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":19767,"byte_end":19786,"line_start":417,"line_end":417,"column_start":1,"column_end":20}},{"value":"allow(unknown_lints)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":19836,"byte_end":19860,"line_start":419,"line_end":419,"column_start":1,"column_end":25}}]},{"kind":"Mod","id":{"krate":0,"index":75},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":22850,"byte_end":22857,"line_start":506,"line_end":506,"column_start":9,"column_end":16},"name":"prelude","qualname":"::prelude","value":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":82},{"krate":0,"index":87},{"krate":0,"index":90},{"krate":0,"index":94}],"decl_id":null,"docs":" A convenience module appropriate for glob imports (`use chrono::prelude::*;`).\n","sig":null,"attributes":[{"value":"/ A convenience module appropriate for glob imports (`use chrono::prelude::*;`).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":22759,"byte_end":22841,"line_start":505,"line_end":505,"column_start":1,"column_end":83}}]},{"kind":"Mod","id":{"krate":0,"index":104},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"offset","qualname":"::offset","value":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":111},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":1515},{"krate":0,"index":1546},{"krate":0,"index":1540},{"krate":0,"index":1542},{"krate":0,"index":1537},{"krate":0,"index":1535},{"krate":0,"index":1530},{"krate":0,"index":1532},{"krate":0,"index":1526},{"krate":0,"index":119},{"krate":0,"index":127},{"krate":0,"index":134},{"krate":0,"index":137},{"krate":0,"index":139},{"krate":0,"index":164},{"krate":0,"index":223},{"krate":0,"index":261},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295}],"decl_id":null,"docs":" The time zone, which calculates offsets from the local time to UTC.","sig":null,"attributes":[{"value":"! The time zone, which calculates offsets from the local time to UTC.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":64625,"byte_end":64696,"line_start":4,"line_end":4,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":64697,"byte_end":64700,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! There are four operations provided by the `TimeZone` trait:","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":64701,"byte_end":64764,"line_start":6,"line_end":6,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":64765,"byte_end":64768,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"! 1. Converting the local `NaiveDateTime` to `DateTime<Tz>`","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":64769,"byte_end":64830,"line_start":8,"line_end":8,"column_start":1,"column_end":62}},{"value":"! 2. Converting the UTC `NaiveDateTime` to `DateTime<Tz>`","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":64831,"byte_end":64890,"line_start":9,"line_end":9,"column_start":1,"column_end":60}},{"value":"! 3. Converting `DateTime<Tz>` to the local `NaiveDateTime`","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":64891,"byte_end":64952,"line_start":10,"line_end":10,"column_start":1,"column_end":62}},{"value":"! 4. Constructing `DateTime<Tz>` objects from various offsets","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":64953,"byte_end":65016,"line_start":11,"line_end":11,"column_start":1,"column_end":64}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":65017,"byte_end":65020,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! 1 is used for constructors. 2 is used for the `with_timezone` method of date and time types.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":65021,"byte_end":65117,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"! 3 is used for other methods, e.g. `year()` or `format()`, and provided by an associated type","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":65118,"byte_end":65214,"line_start":14,"line_end":14,"column_start":1,"column_end":97}},{"value":"! which implements `Offset` (which then passed to `TimeZone` for actual implementations).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":65215,"byte_end":65306,"line_start":15,"line_end":15,"column_start":1,"column_end":92}},{"value":"! Technically speaking `TimeZone` has a total knowledge about given timescale,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":65307,"byte_end":65387,"line_start":16,"line_end":16,"column_start":1,"column_end":81}},{"value":"! but `Offset` is used as a cache to avoid the repeated conversion","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":65388,"byte_end":65456,"line_start":17,"line_end":17,"column_start":1,"column_end":69}},{"value":"! and provides implementations for 1 and 3.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":65457,"byte_end":65502,"line_start":18,"line_end":18,"column_start":1,"column_end":46}},{"value":"! An `TimeZone` instance can be reconstructed from the corresponding `Offset` instance.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":65503,"byte_end":65592,"line_start":19,"line_end":19,"column_start":1,"column_end":90}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1517},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":66046,"byte_end":66050,"line_start":33,"line_end":33,"column_start":5,"column_end":9},"name":"None","qualname":"::offset::LocalResult::None","value":"LocalResult::None","parent":{"krate":0,"index":1515},"children":[],"decl_id":null,"docs":" Given local time representation is invalid.\n This can occur when, for example, the positive timezone transition.\n","sig":null,"attributes":[{"value":"/ Given local time representation is invalid.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":65918,"byte_end":65965,"line_start":31,"line_end":31,"column_start":5,"column_end":52}},{"value":"/ This can occur when, for example, the positive timezone transition.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":65970,"byte_end":66041,"line_start":32,"line_end":32,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1519},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":66124,"byte_end":66130,"line_start":35,"line_end":35,"column_start":5,"column_end":11},"name":"Single","qualname":"::offset::LocalResult::Single","value":"LocalResult::Single(T)","parent":{"krate":0,"index":1515},"children":[],"decl_id":null,"docs":" Given local time representation has a single unique result.\n","sig":null,"attributes":[{"value":"/ Given local time representation has a single unique result.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":66056,"byte_end":66119,"line_start":34,"line_end":34,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1522},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":66296,"byte_end":66305,"line_start":38,"line_end":38,"column_start":5,"column_end":14},"name":"Ambiguous","qualname":"::offset::LocalResult::Ambiguous","value":"LocalResult::Ambiguous(T, T)","parent":{"krate":0,"index":1515},"children":[],"decl_id":null,"docs":" Given local time representation has multiple results and thus ambiguous.\n This can occur when, for example, the negative timezone transition.\n","sig":null,"attributes":[{"value":"/ Given local time representation has multiple results and thus ambiguous.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":66139,"byte_end":66215,"line_start":36,"line_end":36,"column_start":5,"column_end":81}},{"value":"/ This can occur when, for example, the negative timezone transition.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":66220,"byte_end":66291,"line_start":37,"line_end":37,"column_start":5,"column_end":76}}]},{"kind":"Enum","id":{"krate":0,"index":1515},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":65897,"byte_end":65908,"line_start":30,"line_end":30,"column_start":10,"column_end":21},"name":"LocalResult","qualname":"::offset::LocalResult","value":"LocalResult::{None, Single, Ambiguous}","parent":null,"children":[{"krate":0,"index":1517},{"krate":0,"index":1519},{"krate":0,"index":1522}],"decl_id":null,"docs":" The conversion result from the local time to the timezone-aware datetime types.\n","sig":null,"attributes":[{"value":"/ The conversion result from the local time to the timezone-aware datetime types.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":65753,"byte_end":65836,"line_start":28,"line_end":28,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":66455,"byte_end":66461,"line_start":43,"line_end":43,"column_start":12,"column_end":18},"name":"single","qualname":"<LocalResult<T>>::single","value":"fn (self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some` only when the conversion result is unique, or `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `Some` only when the conversion result is unique, or `None` otherwise.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":66361,"byte_end":66443,"line_start":42,"line_end":42,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":66689,"byte_end":66697,"line_start":51,"line_end":51,"column_start":12,"column_end":20},"name":"earliest","qualname":"<LocalResult<T>>::earliest","value":"fn (self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some` for the earliest possible conversion result, or `None` if none.\n","sig":null,"attributes":[{"value":"/ Returns `Some` for the earliest possible conversion result, or `None` if none.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":66595,"byte_end":66677,"line_start":50,"line_end":50,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":66954,"byte_end":66960,"line_start":59,"line_end":59,"column_start":12,"column_end":18},"name":"latest","qualname":"<LocalResult<T>>::latest","value":"fn (self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some` for the latest possible conversion result, or `None` if none.\n","sig":null,"attributes":[{"value":"/ Returns `Some` for the latest possible conversion result, or `None` if none.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":66862,"byte_end":66942,"line_start":58,"line_end":58,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":67207,"byte_end":67210,"line_start":67,"line_end":67,"column_start":12,"column_end":15},"name":"map","qualname":"<LocalResult<T>>::map","value":"fn <U, F> (self, mut f: F) -> LocalResult<U>","parent":null,"children":[],"decl_id":null,"docs":" Maps a `LocalResult<T>` into `LocalResult<U>` with given function.\n","sig":null,"attributes":[{"value":"/ Maps a `LocalResult<T>` into `LocalResult<U>` with given function.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":67125,"byte_end":67195,"line_start":66,"line_end":66,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":67785,"byte_end":67793,"line_start":82,"line_end":82,"column_start":12,"column_end":20},"name":"and_time","qualname":"<LocalResult<Date<Tz>>>::and_time","value":"fn (self, time: NaiveTime) -> LocalResult<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date and given `NaiveTime`.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date and given `NaiveTime`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":67560,"byte_end":67631,"line_start":77,"line_end":77,"column_start":5,"column_end":76}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":67636,"byte_end":67684,"line_start":78,"line_end":78,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":67689,"byte_end":67692,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Propagates any error. Ambiguous result would be discarded.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":67697,"byte_end":67759,"line_start":80,"line_end":80,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":67764,"byte_end":67773,"line_start":81,"line_end":81,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":68288,"byte_end":68299,"line_start":96,"line_end":96,"column_start":12,"column_end":23},"name":"and_hms_opt","qualname":"<LocalResult<Date<Tz>>>::and_hms_opt","value":"fn (self, hour: u32, min: u32, sec: u32) -> LocalResult<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute and second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute and second.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":68060,"byte_end":68134,"line_start":91,"line_end":91,"column_start":5,"column_end":79}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":68139,"byte_end":68187,"line_start":92,"line_end":92,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":68192,"byte_end":68195,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Propagates any error. Ambiguous result would be discarded.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":68200,"byte_end":68262,"line_start":94,"line_end":94,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":68267,"byte_end":68276,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":68919,"byte_end":68936,"line_start":111,"line_end":111,"column_start":12,"column_end":29},"name":"and_hms_milli_opt","qualname":"<LocalResult<Date<Tz>>>::and_hms_milli_opt","value":"fn (self, hour: u32, min: u32, sec: u32, milli: u32) -> LocalResult<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and millisecond.\n The millisecond part can exceed 1,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute, second and millisecond.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":68593,"byte_end":68680,"line_start":105,"line_end":105,"column_start":5,"column_end":92}},{"value":"/ The millisecond part can exceed 1,000 in order to represent the leap second.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":68685,"byte_end":68765,"line_start":106,"line_end":106,"column_start":5,"column_end":85}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":68770,"byte_end":68818,"line_start":107,"line_end":107,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":68823,"byte_end":68826,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ Propagates any error. Ambiguous result would be discarded.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":68831,"byte_end":68893,"line_start":109,"line_end":109,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":68898,"byte_end":68907,"line_start":110,"line_end":110,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":69635,"byte_end":69652,"line_start":132,"line_end":132,"column_start":12,"column_end":29},"name":"and_hms_micro_opt","qualname":"<LocalResult<Date<Tz>>>::and_hms_micro_opt","value":"fn (self, hour: u32, min: u32, sec: u32, micro: u32) -> LocalResult<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and microsecond.\n The microsecond part can exceed 1,000,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute, second and microsecond.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":69305,"byte_end":69392,"line_start":126,"line_end":126,"column_start":5,"column_end":92}},{"value":"/ The microsecond part can exceed 1,000,000 in order to represent the leap second.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":69397,"byte_end":69481,"line_start":127,"line_end":127,"column_start":5,"column_end":89}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":69486,"byte_end":69534,"line_start":128,"line_end":128,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":69539,"byte_end":69542,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ Propagates any error. Ambiguous result would be discarded.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":69547,"byte_end":69609,"line_start":130,"line_end":130,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":69614,"byte_end":69623,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":70353,"byte_end":70369,"line_start":153,"line_end":153,"column_start":12,"column_end":28},"name":"and_hms_nano_opt","qualname":"<LocalResult<Date<Tz>>>::and_hms_nano_opt","value":"fn (self, hour: u32, min: u32, sec: u32, nano: u32) -> LocalResult<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.\n The nanosecond part can exceed 1,000,000,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":70021,"byte_end":70107,"line_start":147,"line_end":147,"column_start":5,"column_end":91}},{"value":"/ The nanosecond part can exceed 1,000,000,000 in order to represent the leap second.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":70112,"byte_end":70199,"line_start":148,"line_end":148,"column_start":5,"column_end":92}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":70204,"byte_end":70252,"line_start":149,"line_end":149,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":70257,"byte_end":70260,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ Propagates any error. Ambiguous result would be discarded.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":70265,"byte_end":70327,"line_start":151,"line_end":151,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":70332,"byte_end":70341,"line_start":152,"line_end":152,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":70857,"byte_end":70863,"line_start":171,"line_end":171,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<LocalResult<T>>::unwrap","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the single unique conversion result, or panics accordingly.\n","sig":null,"attributes":[{"value":"/ Returns the single unique conversion result, or panics accordingly.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":70774,"byte_end":70845,"line_start":170,"line_end":170,"column_start":5,"column_end":76}}]},{"kind":"Trait","id":{"krate":0,"index":137},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":71218,"byte_end":71224,"line_start":183,"line_end":183,"column_start":11,"column_end":17},"name":"Offset","qualname":"::offset::Offset","value":"Offset: Sized + Clone + fmt::Debug","parent":null,"children":[{"krate":0,"index":138}],"decl_id":null,"docs":" The offset from the local time to UTC.\n","sig":null,"attributes":[{"value":"/ The offset from the local time to UTC.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":71165,"byte_end":71207,"line_start":182,"line_end":182,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":71330,"byte_end":71333,"line_start":185,"line_end":185,"column_start":8,"column_end":11},"name":"fix","qualname":"::offset::Offset::fix","value":"fn (&self) -> FixedOffset","parent":{"krate":0,"index":137},"children":[],"decl_id":null,"docs":" Returns the fixed offset from UTC to the local time stored.\n","sig":null,"attributes":[{"value":"/ Returns the fixed offset from UTC to the local time stored.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":71259,"byte_end":71322,"line_start":184,"line_end":184,"column_start":5,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":139},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":71532,"byte_end":71540,"line_start":192,"line_end":192,"column_start":11,"column_end":19},"name":"TimeZone","qualname":"::offset::TimeZone","value":"TimeZone: Sized + Clone","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":158},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163}],"decl_id":null,"docs":" The time zone.","sig":null,"attributes":[{"value":"/ The time zone.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":71360,"byte_end":71378,"line_start":188,"line_end":188,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":71379,"byte_end":71382,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ The methods here are the primarily constructors for [`Date`](../struct.Date.html) and","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":71383,"byte_end":71472,"line_start":190,"line_end":190,"column_start":1,"column_end":90}},{"value":"/ [`DateTime`](../struct.DateTime.html) types.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":71473,"byte_end":71521,"line_start":191,"line_end":191,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":140},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":71763,"byte_end":71769,"line_start":196,"line_end":196,"column_start":10,"column_end":16},"name":"Offset","qualname":"::offset::TimeZone::Offset","value":"type Offset: Offset;","parent":{"krate":0,"index":139},"children":[],"decl_id":null,"docs":" An associated offset type.\n This type is used to store the actual offset in date and time types.\n The original `TimeZone` value can be recovered via `TimeZone::from_offset`.\n","sig":null,"attributes":[{"value":"/ An associated offset type.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":71562,"byte_end":71592,"line_start":193,"line_end":193,"column_start":5,"column_end":35}},{"value":"/ This type is used to store the actual offset in date and time types.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":71597,"byte_end":71669,"line_start":194,"line_end":194,"column_start":5,"column_end":77}},{"value":"/ The original `TimeZone` value can be recovered via `TimeZone::from_offset`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":71674,"byte_end":71753,"line_start":195,"line_end":195,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":72386,"byte_end":72389,"line_start":213,"line_end":213,"column_start":8,"column_end":11},"name":"ymd","qualname":"::offset::TimeZone::ymd","value":"fn (&self, year: i32, month: u32, day: u32) -> Date<Self>","parent":{"krate":0,"index":139},"children":[],"decl_id":null,"docs":" Makes a new `Date` from year, month, day and the current time zone.\n This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","sig":null,"attributes":[{"value":"/ Makes a new `Date` from year, month, day and the current time zone.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":71784,"byte_end":71855,"line_start":198,"line_end":198,"column_start":5,"column_end":76}},{"value":"/ This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":71860,"byte_end":71939,"line_start":199,"line_end":199,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":71944,"byte_end":71947,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ The time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":71952,"byte_end":72045,"line_start":201,"line_end":201,"column_start":5,"column_end":98}},{"value":"/ but it will propagate to the `DateTime` values constructed via this date.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":72050,"byte_end":72127,"line_start":202,"line_end":202,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":72132,"byte_end":72135,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ Panics on the out-of-range date, invalid month and/or day.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":72140,"byte_end":72202,"line_start":204,"line_end":204,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":72207,"byte_end":72210,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":72215,"byte_end":72228,"line_start":206,"line_end":206,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":72233,"byte_end":72236,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":72241,"byte_end":72249,"line_start":208,"line_end":208,"column_start":5,"column_end":13}},{"value":"/ use chrono::{Utc, TimeZone};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":72254,"byte_end":72286,"line_start":209,"line_end":209,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":72291,"byte_end":72294,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Utc.ymd(2015, 5, 15).to_string(), \"2015-05-15UTC\");","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":72299,"byte_end":72365,"line_start":211,"line_end":211,"column_start":5,"column_end":71}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":72370,"byte_end":72378,"line_start":212,"line_end":212,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":73205,"byte_end":73212,"line_start":233,"line_end":233,"column_start":8,"column_end":15},"name":"ymd_opt","qualname":"::offset::TimeZone::ymd_opt","value":"fn (&self, year: i32, month: u32, day: u32) -> LocalResult<Date<Self>>","parent":{"krate":0,"index":139},"children":[],"decl_id":null,"docs":" Makes a new `Date` from year, month, day and the current time zone.\n This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","sig":null,"attributes":[{"value":"/ Makes a new `Date` from year, month, day and the current time zone.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":72505,"byte_end":72576,"line_start":217,"line_end":217,"column_start":5,"column_end":76}},{"value":"/ This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":72581,"byte_end":72660,"line_start":218,"line_end":218,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":72665,"byte_end":72668,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ The time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":72673,"byte_end":72766,"line_start":220,"line_end":220,"column_start":5,"column_end":98}},{"value":"/ but it will propagate to the `DateTime` values constructed via this date.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":72771,"byte_end":72848,"line_start":221,"line_end":221,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":72853,"byte_end":72856,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on the out-of-range date, invalid month and/or day.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":72861,"byte_end":72931,"line_start":223,"line_end":223,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":72936,"byte_end":72939,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":72944,"byte_end":72957,"line_start":225,"line_end":225,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":72962,"byte_end":72965,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":72970,"byte_end":72978,"line_start":227,"line_end":227,"column_start":5,"column_end":13}},{"value":"/ use chrono::{Utc, LocalResult, TimeZone};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":72983,"byte_end":73028,"line_start":228,"line_end":228,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":73033,"byte_end":73036,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Utc.ymd_opt(2015, 5, 15).unwrap().to_string(), \"2015-05-15UTC\");","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":73041,"byte_end":73120,"line_start":230,"line_end":230,"column_start":5,"column_end":84}},{"value":"/ assert_eq!(Utc.ymd_opt(2000, 0, 0), LocalResult::None);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":73125,"byte_end":73184,"line_start":231,"line_end":231,"column_start":5,"column_end":64}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":73189,"byte_end":73197,"line_start":232,"line_end":232,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":74061,"byte_end":74063,"line_start":255,"line_end":255,"column_start":8,"column_end":10},"name":"yo","qualname":"::offset::TimeZone::yo","value":"fn (&self, year: i32, ordinal: u32) -> Date<Self>","parent":{"krate":0,"index":139},"children":[],"decl_id":null,"docs":" Makes a new `Date` from year, day of year (DOY or \"ordinal\") and the current time zone.\n This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","sig":null,"attributes":[{"value":"/ Makes a new `Date` from year, day of year (DOY or \"ordinal\") and the current time zone.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":73449,"byte_end":73540,"line_start":240,"line_end":240,"column_start":5,"column_end":96}},{"value":"/ This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":73545,"byte_end":73624,"line_start":241,"line_end":241,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":73629,"byte_end":73632,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ The time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":73637,"byte_end":73730,"line_start":243,"line_end":243,"column_start":5,"column_end":98}},{"value":"/ but it will propagate to the `DateTime` values constructed via this date.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":73735,"byte_end":73812,"line_start":244,"line_end":244,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":73817,"byte_end":73820,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ Panics on the out-of-range date and/or invalid DOY.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":73825,"byte_end":73880,"line_start":246,"line_end":246,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":73885,"byte_end":73888,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":73893,"byte_end":73906,"line_start":248,"line_end":248,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":73911,"byte_end":73914,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":73919,"byte_end":73927,"line_start":250,"line_end":250,"column_start":5,"column_end":13}},{"value":"/ use chrono::{Utc, TimeZone};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":73932,"byte_end":73964,"line_start":251,"line_end":251,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":73969,"byte_end":73972,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Utc.yo(2015, 135).to_string(), \"2015-05-15UTC\");","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":73977,"byte_end":74040,"line_start":253,"line_end":253,"column_start":5,"column_end":68}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":74045,"byte_end":74053,"line_start":254,"line_end":254,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":74614,"byte_end":74620,"line_start":266,"line_end":266,"column_start":8,"column_end":14},"name":"yo_opt","qualname":"::offset::TimeZone::yo_opt","value":"fn (&self, year: i32, ordinal: u32) -> LocalResult<Date<Self>>","parent":{"krate":0,"index":139},"children":[],"decl_id":null,"docs":" Makes a new `Date` from year, day of year (DOY or \"ordinal\") and the current time zone.\n This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","sig":null,"attributes":[{"value":"/ Makes a new `Date` from year, day of year (DOY or \"ordinal\") and the current time zone.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":74167,"byte_end":74258,"line_start":259,"line_end":259,"column_start":5,"column_end":96}},{"value":"/ This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":74263,"byte_end":74342,"line_start":260,"line_end":260,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":74347,"byte_end":74350,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ The time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":74355,"byte_end":74448,"line_start":262,"line_end":262,"column_start":5,"column_end":98}},{"value":"/ but it will propagate to the `DateTime` values constructed via this date.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":74453,"byte_end":74530,"line_start":263,"line_end":263,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":74535,"byte_end":74538,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on the out-of-range date and/or invalid DOY.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":74543,"byte_end":74606,"line_start":265,"line_end":265,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":75598,"byte_end":75604,"line_start":290,"line_end":290,"column_start":8,"column_end":14},"name":"isoywd","qualname":"::offset::TimeZone::isoywd","value":"fn (&self, year: i32, week: u32, weekday: Weekday) -> Date<Self>","parent":{"krate":0,"index":139},"children":[],"decl_id":null,"docs":" Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and\n the current time zone.\n This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\n The resulting `Date` may have a different year from the input year.","sig":null,"attributes":[{"value":"/ Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":74845,"byte_end":74936,"line_start":273,"line_end":273,"column_start":5,"column_end":96}},{"value":"/ the current time zone.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":74941,"byte_end":74967,"line_start":274,"line_end":274,"column_start":5,"column_end":31}},{"value":"/ This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":74972,"byte_end":75051,"line_start":275,"line_end":275,"column_start":5,"column_end":84}},{"value":"/ The resulting `Date` may have a different year from the input year.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":75056,"byte_end":75127,"line_start":276,"line_end":276,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":75132,"byte_end":75135,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ The time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":75140,"byte_end":75233,"line_start":278,"line_end":278,"column_start":5,"column_end":98}},{"value":"/ but it will propagate to the `DateTime` values constructed via this date.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":75238,"byte_end":75315,"line_start":279,"line_end":279,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":75320,"byte_end":75323,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ Panics on the out-of-range date and/or invalid week number.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":75328,"byte_end":75391,"line_start":281,"line_end":281,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":75396,"byte_end":75399,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":75404,"byte_end":75417,"line_start":283,"line_end":283,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":75422,"byte_end":75425,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":75430,"byte_end":75438,"line_start":285,"line_end":285,"column_start":5,"column_end":13}},{"value":"/ use chrono::{Utc, Weekday, TimeZone};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":75443,"byte_end":75484,"line_start":286,"line_end":286,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":75489,"byte_end":75492,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Utc.isoywd(2015, 20, Weekday::Fri).to_string(), \"2015-05-15UTC\");","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":75497,"byte_end":75577,"line_start":288,"line_end":288,"column_start":5,"column_end":85}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":75582,"byte_end":75590,"line_start":289,"line_end":289,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":76295,"byte_end":76305,"line_start":303,"line_end":303,"column_start":8,"column_end":18},"name":"isoywd_opt","qualname":"::offset::TimeZone::isoywd_opt","value":"fn (&self, year: i32, week: u32, weekday: Weekday) -> LocalResult<Date<Self>>","parent":{"krate":0,"index":139},"children":[],"decl_id":null,"docs":" Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and\n the current time zone.\n This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.\n The resulting `Date` may have a different year from the input year.","sig":null,"attributes":[{"value":"/ Makes a new `Date` from ISO week date (year and week number), day of the week (DOW) and","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":75733,"byte_end":75824,"line_start":294,"line_end":294,"column_start":5,"column_end":96}},{"value":"/ the current time zone.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":75829,"byte_end":75855,"line_start":295,"line_end":295,"column_start":5,"column_end":31}},{"value":"/ This assumes the proleptic Gregorian calendar, with the year 0 being 1 BCE.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":75860,"byte_end":75939,"line_start":296,"line_end":296,"column_start":5,"column_end":84}},{"value":"/ The resulting `Date` may have a different year from the input year.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":75944,"byte_end":76015,"line_start":297,"line_end":297,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":76020,"byte_end":76023,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ The time zone normally does not affect the date (unless it is between UTC-24 and UTC+24),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":76028,"byte_end":76121,"line_start":299,"line_end":299,"column_start":5,"column_end":98}},{"value":"/ but it will propagate to the `DateTime` values constructed via this date.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":76126,"byte_end":76203,"line_start":300,"line_end":300,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":76208,"byte_end":76211,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on the out-of-range date and/or invalid week number.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":76216,"byte_end":76287,"line_start":302,"line_end":302,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":77130,"byte_end":77139,"line_start":324,"line_end":324,"column_start":8,"column_end":17},"name":"timestamp","qualname":"::offset::TimeZone::timestamp","value":"fn (&self, secs: i64, nsecs: u32) -> DateTime<Self>","parent":{"krate":0,"index":139},"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the number of non-leap seconds\n since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\")\n and the number of nanoseconds since the last whole non-leap second.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the number of non-leap seconds","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":76555,"byte_end":76617,"line_start":310,"line_end":310,"column_start":5,"column_end":67}},{"value":"/ since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\")","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":76622,"byte_end":76682,"line_start":311,"line_end":311,"column_start":5,"column_end":65}},{"value":"/ and the number of nanoseconds since the last whole non-leap second.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":76687,"byte_end":76758,"line_start":312,"line_end":312,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":76763,"byte_end":76766,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ Panics on the out-of-range number of seconds and/or invalid nanosecond,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":76771,"byte_end":76846,"line_start":314,"line_end":314,"column_start":5,"column_end":80}},{"value":"/ for a non-panicking version see [`timestamp_opt`](#method.timestamp_opt).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":76851,"byte_end":76928,"line_start":315,"line_end":315,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":76933,"byte_end":76936,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":76941,"byte_end":76954,"line_start":317,"line_end":317,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":76959,"byte_end":76962,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":76967,"byte_end":76975,"line_start":319,"line_end":319,"column_start":5,"column_end":13}},{"value":"/ use chrono::{Utc, TimeZone};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":76980,"byte_end":77012,"line_start":320,"line_end":320,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":77017,"byte_end":77020,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Utc.timestamp(1431648000, 0).to_string(), \"2015-05-15 00:00:00 UTC\");","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":77025,"byte_end":77109,"line_start":322,"line_end":322,"column_start":5,"column_end":89}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":77114,"byte_end":77122,"line_start":323,"line_end":323,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":77622,"byte_end":77635,"line_start":334,"line_end":334,"column_start":8,"column_end":21},"name":"timestamp_opt","qualname":"::offset::TimeZone::timestamp_opt","value":"fn (&self, secs: i64, nsecs: u32) -> LocalResult<DateTime<Self>>","parent":{"krate":0,"index":139},"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the number of non-leap seconds\n since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\")\n and the number of nanoseconds since the last whole non-leap second.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the number of non-leap seconds","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":77250,"byte_end":77312,"line_start":328,"line_end":328,"column_start":5,"column_end":67}},{"value":"/ since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\")","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":77317,"byte_end":77377,"line_start":329,"line_end":329,"column_start":5,"column_end":65}},{"value":"/ and the number of nanoseconds since the last whole non-leap second.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":77382,"byte_end":77453,"line_start":330,"line_end":330,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":77458,"byte_end":77461,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ Returns `LocalResult::None` on out-of-range number of seconds and/or","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":77466,"byte_end":77538,"line_start":332,"line_end":332,"column_start":5,"column_end":77}},{"value":"/ invalid nanosecond, otherwise always returns `LocalResult::Single`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":77543,"byte_end":77614,"line_start":333,"line_end":333,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":78375,"byte_end":78391,"line_start":354,"line_end":354,"column_start":8,"column_end":24},"name":"timestamp_millis","qualname":"::offset::TimeZone::timestamp_millis","value":"fn (&self, millis: i64) -> DateTime<Self>","parent":{"krate":0,"index":139},"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the number of non-leap milliseconds\n since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the number of non-leap milliseconds","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":77896,"byte_end":77963,"line_start":341,"line_end":341,"column_start":5,"column_end":72}},{"value":"/ since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":77968,"byte_end":78029,"line_start":342,"line_end":342,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":78034,"byte_end":78037,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ Panics on out-of-range number of milliseconds for a non-panicking","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":78042,"byte_end":78111,"line_start":344,"line_end":344,"column_start":5,"column_end":74}},{"value":"/ version see [`timestamp_millis_opt`](#method.timestamp_millis_opt).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":78116,"byte_end":78187,"line_start":345,"line_end":345,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":78192,"byte_end":78195,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":78200,"byte_end":78213,"line_start":347,"line_end":347,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":78218,"byte_end":78221,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":78226,"byte_end":78234,"line_start":349,"line_end":349,"column_start":5,"column_end":13}},{"value":"/ use chrono::{Utc, TimeZone};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":78239,"byte_end":78271,"line_start":350,"line_end":350,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":78276,"byte_end":78279,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Utc.timestamp_millis(1431648000).timestamp(), 1431648);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":78284,"byte_end":78354,"line_start":352,"line_end":352,"column_start":5,"column_end":75}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":78359,"byte_end":78367,"line_start":353,"line_end":353,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":79122,"byte_end":79142,"line_start":375,"line_end":375,"column_start":8,"column_end":28},"name":"timestamp_millis_opt","qualname":"::offset::TimeZone::timestamp_millis_opt","value":"fn (&self, millis: i64) -> LocalResult<DateTime<Self>>","parent":{"krate":0,"index":139},"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the number of non-leap milliseconds\n since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the number of non-leap milliseconds","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":78494,"byte_end":78561,"line_start":358,"line_end":358,"column_start":5,"column_end":72}},{"value":"/ since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":78566,"byte_end":78627,"line_start":359,"line_end":359,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":78632,"byte_end":78635,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":78640,"byte_end":78643,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ Returns `LocalResult::None` on out-of-range number of milliseconds","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":78648,"byte_end":78718,"line_start":362,"line_end":362,"column_start":5,"column_end":75}},{"value":"/ and/or invalid nanosecond, otherwise always returns","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":78723,"byte_end":78778,"line_start":363,"line_end":363,"column_start":5,"column_end":60}},{"value":"/ `LocalResult::Single`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":78783,"byte_end":78809,"line_start":364,"line_end":364,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":78814,"byte_end":78817,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":78822,"byte_end":78835,"line_start":366,"line_end":366,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":78840,"byte_end":78843,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":78848,"byte_end":78856,"line_start":368,"line_end":368,"column_start":5,"column_end":13}},{"value":"/ use chrono::{Utc, TimeZone, LocalResult};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":78861,"byte_end":78906,"line_start":369,"line_end":369,"column_start":5,"column_end":50}},{"value":"/ match Utc.timestamp_millis_opt(1431648000) {","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":78911,"byte_end":78959,"line_start":370,"line_end":370,"column_start":5,"column_end":53}},{"value":"/     LocalResult::Single(dt) => assert_eq!(dt.timestamp(), 1431648),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":78964,"byte_end":79035,"line_start":371,"line_end":371,"column_start":5,"column_end":76}},{"value":"/     _ => panic!(\"Incorrect timestamp_millis\"),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":79040,"byte_end":79090,"line_start":372,"line_end":372,"column_start":5,"column_end":55}},{"value":"/ };","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":79095,"byte_end":79101,"line_start":373,"line_end":373,"column_start":5,"column_end":11}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":79106,"byte_end":79114,"line_start":374,"line_end":374,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":79844,"byte_end":79859,"line_start":397,"line_end":397,"column_start":8,"column_end":23},"name":"timestamp_nanos","qualname":"::offset::TimeZone::timestamp_nanos","value":"fn (&self, nanos: i64) -> DateTime<Self>","parent":{"krate":0,"index":139},"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the number of non-leap nanoseconds\n since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the number of non-leap nanoseconds","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":79421,"byte_end":79487,"line_start":384,"line_end":384,"column_start":5,"column_end":71}},{"value":"/ since January 1, 1970 0:00:00 UTC (aka \"UNIX timestamp\").","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":79492,"byte_end":79553,"line_start":385,"line_end":385,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":79558,"byte_end":79561,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ Unlike [`timestamp_millis`](#method.timestamp_millis), this never","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":79566,"byte_end":79635,"line_start":387,"line_end":387,"column_start":5,"column_end":74}},{"value":"/ panics.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":79640,"byte_end":79651,"line_start":388,"line_end":388,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":79656,"byte_end":79659,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":79664,"byte_end":79677,"line_start":390,"line_end":390,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":79682,"byte_end":79685,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":79690,"byte_end":79698,"line_start":392,"line_end":392,"column_start":5,"column_end":13}},{"value":"/ use chrono::{Utc, TimeZone};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":79703,"byte_end":79735,"line_start":393,"line_end":393,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":79740,"byte_end":79743,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Utc.timestamp_nanos(1431648000000000).timestamp(), 1431648);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":79748,"byte_end":79823,"line_start":395,"line_end":395,"column_start":5,"column_end":80}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":79828,"byte_end":79836,"line_start":396,"line_end":396,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":80646,"byte_end":80663,"line_start":416,"line_end":416,"column_start":8,"column_end":25},"name":"datetime_from_str","qualname":"::offset::TimeZone::datetime_from_str","value":"fn (&self, s: &str, fmt: &str) -> ParseResult<DateTime<Self>>","parent":{"krate":0,"index":139},"children":[],"decl_id":null,"docs":" Parses a string with the specified format string and\n returns a `DateTime` with the current offset.\n See the [`format::strftime` module](../format/strftime/index.html)\n on the supported escape sequences.","sig":null,"attributes":[{"value":"/ Parses a string with the specified format string and","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":80142,"byte_end":80198,"line_start":406,"line_end":406,"column_start":5,"column_end":61}},{"value":"/ returns a `DateTime` with the current offset.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":80203,"byte_end":80252,"line_start":407,"line_end":407,"column_start":5,"column_end":54}},{"value":"/ See the [`format::strftime` module](../format/strftime/index.html)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":80257,"byte_end":80327,"line_start":408,"line_end":408,"column_start":5,"column_end":75}},{"value":"/ on the supported escape sequences.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":80332,"byte_end":80370,"line_start":409,"line_end":409,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":80375,"byte_end":80378,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ If the format does not include offsets, the current offset is assumed;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":80383,"byte_end":80457,"line_start":411,"line_end":411,"column_start":5,"column_end":79}},{"value":"/ otherwise the input should have a matching UTC offset.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":80462,"byte_end":80520,"line_start":412,"line_end":412,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":80525,"byte_end":80528,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ See also `DateTime::parse_from_str` which gives a local `DateTime`","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":80533,"byte_end":80603,"line_start":414,"line_end":414,"column_start":5,"column_end":75}},{"value":"/ with parsed `FixedOffset`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":80608,"byte_end":80638,"line_start":415,"line_end":415,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":153},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":80934,"byte_end":80945,"line_start":423,"line_end":423,"column_start":8,"column_end":19},"name":"from_offset","qualname":"::offset::TimeZone::from_offset","value":"fn (offset: &Self::Offset) -> Self","parent":{"krate":0,"index":139},"children":[],"decl_id":null,"docs":" Reconstructs the time zone from the offset.\n","sig":null,"attributes":[{"value":"/ Reconstructs the time zone from the offset.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":80879,"byte_end":80926,"line_start":422,"line_end":422,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":81057,"byte_end":81079,"line_start":426,"line_end":426,"column_start":8,"column_end":30},"name":"offset_from_local_date","qualname":"::offset::TimeZone::offset_from_local_date","value":"fn (&self, local: &NaiveDate) -> LocalResult<Self::Offset>","parent":{"krate":0,"index":139},"children":[],"decl_id":null,"docs":" Creates the offset(s) for given local `NaiveDate` if possible.\n","sig":null,"attributes":[{"value":"/ Creates the offset(s) for given local `NaiveDate` if possible.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":80983,"byte_end":81049,"line_start":425,"line_end":425,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":155},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":81219,"byte_end":81245,"line_start":429,"line_end":429,"column_start":8,"column_end":34},"name":"offset_from_local_datetime","qualname":"::offset::TimeZone::offset_from_local_datetime","value":"fn (&self, local: &NaiveDateTime) -> LocalResult<Self::Offset>","parent":{"krate":0,"index":139},"children":[],"decl_id":null,"docs":" Creates the offset(s) for given local `NaiveDateTime` if possible.\n","sig":null,"attributes":[{"value":"/ Creates the offset(s) for given local `NaiveDateTime` if possible.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":81141,"byte_end":81211,"line_start":428,"line_end":428,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":81395,"byte_end":81410,"line_start":432,"line_end":432,"column_start":8,"column_end":23},"name":"from_local_date","qualname":"::offset::TimeZone::from_local_date","value":"fn (&self, local: &NaiveDate) -> LocalResult<Date<Self>>","parent":{"krate":0,"index":139},"children":[],"decl_id":null,"docs":" Converts the local `NaiveDate` to the timezone-aware `Date` if possible.\n","sig":null,"attributes":[{"value":"/ Converts the local `NaiveDate` to the timezone-aware `Date` if possible.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":81311,"byte_end":81387,"line_start":431,"line_end":431,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":81762,"byte_end":81781,"line_start":440,"line_end":440,"column_start":8,"column_end":27},"name":"from_local_datetime","qualname":"::offset::TimeZone::from_local_datetime","value":"fn (&self, local: &NaiveDateTime) -> LocalResult<DateTime<Self>>","parent":{"krate":0,"index":139},"children":[],"decl_id":null,"docs":" Converts the local `NaiveDateTime` to the timezone-aware `DateTime` if possible.\n","sig":null,"attributes":[{"value":"/ Converts the local `NaiveDateTime` to the timezone-aware `DateTime` if possible.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":81670,"byte_end":81754,"line_start":439,"line_end":439,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":82055,"byte_end":82075,"line_start":446,"line_end":446,"column_start":8,"column_end":28},"name":"offset_from_utc_date","qualname":"::offset::TimeZone::offset_from_utc_date","value":"fn (&self, utc: &NaiveDate) -> Self::Offset","parent":{"krate":0,"index":139},"children":[],"decl_id":null,"docs":" Creates the offset for given UTC `NaiveDate`. This cannot fail.\n","sig":null,"attributes":[{"value":"/ Creates the offset for given UTC `NaiveDate`. This cannot fail.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":81980,"byte_end":82047,"line_start":445,"line_end":445,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":161},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":82201,"byte_end":82225,"line_start":449,"line_end":449,"column_start":8,"column_end":32},"name":"offset_from_utc_datetime","qualname":"::offset::TimeZone::offset_from_utc_datetime","value":"fn (&self, utc: &NaiveDateTime) -> Self::Offset","parent":{"krate":0,"index":139},"children":[],"decl_id":null,"docs":" Creates the offset for given UTC `NaiveDateTime`. This cannot fail.\n","sig":null,"attributes":[{"value":"/ Creates the offset for given UTC `NaiveDateTime`. This cannot fail.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":82122,"byte_end":82193,"line_start":448,"line_end":448,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":82432,"byte_end":82445,"line_start":453,"line_end":453,"column_start":8,"column_end":21},"name":"from_utc_date","qualname":"::offset::TimeZone::from_utc_date","value":"fn (&self, utc: &NaiveDate) -> Date<Self>","parent":{"krate":0,"index":139},"children":[],"decl_id":null,"docs":" Converts the UTC `NaiveDate` to the local time.\n The UTC is continuous and thus this cannot fail (but can give the duplicate local time).\n","sig":null,"attributes":[{"value":"/ Converts the UTC `NaiveDate` to the local time.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":82276,"byte_end":82327,"line_start":451,"line_end":451,"column_start":5,"column_end":56}},{"value":"/ The UTC is continuous and thus this cannot fail (but can give the duplicate local time).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":82332,"byte_end":82424,"line_start":452,"line_end":452,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":82718,"byte_end":82735,"line_start":459,"line_end":459,"column_start":8,"column_end":25},"name":"from_utc_datetime","qualname":"::offset::TimeZone::from_utc_datetime","value":"fn (&self, utc: &NaiveDateTime) -> DateTime<Self>","parent":{"krate":0,"index":139},"children":[],"decl_id":null,"docs":" Converts the UTC `NaiveDateTime` to the local time.\n The UTC is continuous and thus this cannot fail (but can give the duplicate local time).\n","sig":null,"attributes":[{"value":"/ Converts the UTC `NaiveDateTime` to the local time.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":82558,"byte_end":82613,"line_start":457,"line_end":457,"column_start":5,"column_end":60}},{"value":"/ The UTC is continuous and thus this cannot fail (but can give the duplicate local time).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":82618,"byte_end":82710,"line_start":458,"line_end":458,"column_start":5,"column_end":97}}]},{"kind":"Struct","id":{"krate":0,"index":1549},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":86063,"byte_end":86074,"line_start":23,"line_end":23,"column_start":12,"column_end":23},"name":"FixedOffset","qualname":"::offset::fixed::FixedOffset","value":"FixedOffset {  }","parent":null,"children":[{"krate":0,"index":1550}],"decl_id":null,"docs":" The time zone with fixed offset, from UTC-23:59:59 to UTC+23:59:59.","sig":null,"attributes":[{"value":"/ The time zone with fixed offset, from UTC-23:59:59 to UTC+23:59:59.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":85687,"byte_end":85758,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":85759,"byte_end":85762,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Using the [`TimeZone`](./trait.TimeZone.html) methods","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":85763,"byte_end":85820,"line_start":18,"line_end":18,"column_start":1,"column_end":58}},{"value":"/ on a `FixedOffset` struct is the preferred way to construct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":85821,"byte_end":85884,"line_start":19,"line_end":19,"column_start":1,"column_end":64}},{"value":"/ `DateTime<FixedOffset>` instances. See the [`east`](#method.east) and","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":85885,"byte_end":85958,"line_start":20,"line_end":20,"column_start":1,"column_end":74}},{"value":"/ [`west`](#method.west) methods for examples.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":85959,"byte_end":86007,"line_start":21,"line_end":21,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":86678,"byte_end":86682,"line_start":42,"line_end":42,"column_start":12,"column_end":16},"name":"east","qualname":"<FixedOffset>::east","value":"fn (secs: i32) -> FixedOffset","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `FixedOffset` for the Eastern Hemisphere with given timezone difference.\n The negative `secs` means the Western Hemisphere.","sig":null,"attributes":[{"value":"/ Makes a new `FixedOffset` for the Eastern Hemisphere with given timezone difference.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":86129,"byte_end":86217,"line_start":28,"line_end":28,"column_start":5,"column_end":93}},{"value":"/ The negative `secs` means the Western Hemisphere.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":86222,"byte_end":86275,"line_start":29,"line_end":29,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":86280,"byte_end":86283,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Panics on the out-of-bound `secs`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":86288,"byte_end":86326,"line_start":31,"line_end":31,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":86331,"byte_end":86334,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":86339,"byte_end":86352,"line_start":33,"line_end":33,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":86357,"byte_end":86360,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":86365,"byte_end":86373,"line_start":35,"line_end":35,"column_start":5,"column_end":13}},{"value":"/ use chrono::{FixedOffset, TimeZone};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":86378,"byte_end":86418,"line_start":36,"line_end":36,"column_start":5,"column_end":45}},{"value":"/ let hour = 3600;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":86423,"byte_end":86443,"line_start":37,"line_end":37,"column_start":5,"column_end":25}},{"value":"/ let datetime = FixedOffset::east(5 * hour).ymd(2016, 11, 08)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":86448,"byte_end":86512,"line_start":38,"line_end":38,"column_start":5,"column_end":69}},{"value":"/                                           .and_hms(0, 0, 0);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":86517,"byte_end":86581,"line_start":39,"line_end":39,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(&datetime.to_rfc3339(), \"2016-11-08T00:00:00+05:00\")","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":86586,"byte_end":86653,"line_start":40,"line_end":40,"column_start":5,"column_end":72}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":86658,"byte_end":86666,"line_start":41,"line_end":41,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":87017,"byte_end":87025,"line_start":50,"line_end":50,"column_start":12,"column_end":20},"name":"east_opt","qualname":"<FixedOffset>::east_opt","value":"fn (secs: i32) -> Option<FixedOffset>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `FixedOffset` for the Eastern Hemisphere with given timezone difference.\n The negative `secs` means the Western Hemisphere.","sig":null,"attributes":[{"value":"/ Makes a new `FixedOffset` for the Eastern Hemisphere with given timezone difference.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":86800,"byte_end":86888,"line_start":46,"line_end":46,"column_start":5,"column_end":93}},{"value":"/ The negative `secs` means the Western Hemisphere.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":86893,"byte_end":86946,"line_start":47,"line_end":47,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":86951,"byte_end":86954,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on the out-of-bound `secs`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":86959,"byte_end":87005,"line_start":49,"line_end":49,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":87767,"byte_end":87771,"line_start":72,"line_end":72,"column_start":12,"column_end":16},"name":"west","qualname":"<FixedOffset>::west","value":"fn (secs: i32) -> FixedOffset","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `FixedOffset` for the Western Hemisphere with given timezone difference.\n The negative `secs` means the Eastern Hemisphere.","sig":null,"attributes":[{"value":"/ Makes a new `FixedOffset` for the Western Hemisphere with given timezone difference.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":87218,"byte_end":87306,"line_start":58,"line_end":58,"column_start":5,"column_end":93}},{"value":"/ The negative `secs` means the Eastern Hemisphere.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":87311,"byte_end":87364,"line_start":59,"line_end":59,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":87369,"byte_end":87372,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Panics on the out-of-bound `secs`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":87377,"byte_end":87415,"line_start":61,"line_end":61,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":87420,"byte_end":87423,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":87428,"byte_end":87441,"line_start":63,"line_end":63,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":87446,"byte_end":87449,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":87454,"byte_end":87462,"line_start":65,"line_end":65,"column_start":5,"column_end":13}},{"value":"/ use chrono::{FixedOffset, TimeZone};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":87467,"byte_end":87507,"line_start":66,"line_end":66,"column_start":5,"column_end":45}},{"value":"/ let hour = 3600;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":87512,"byte_end":87532,"line_start":67,"line_end":67,"column_start":5,"column_end":25}},{"value":"/ let datetime = FixedOffset::west(5 * hour).ymd(2016, 11, 08)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":87537,"byte_end":87601,"line_start":68,"line_end":68,"column_start":5,"column_end":69}},{"value":"/                                           .and_hms(0, 0, 0);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":87606,"byte_end":87670,"line_start":69,"line_end":69,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(&datetime.to_rfc3339(), \"2016-11-08T00:00:00-05:00\")","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":87675,"byte_end":87742,"line_start":70,"line_end":70,"column_start":5,"column_end":72}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":87747,"byte_end":87755,"line_start":71,"line_end":71,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":88106,"byte_end":88114,"line_start":80,"line_end":80,"column_start":12,"column_end":20},"name":"west_opt","qualname":"<FixedOffset>::west_opt","value":"fn (secs: i32) -> Option<FixedOffset>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `FixedOffset` for the Western Hemisphere with given timezone difference.\n The negative `secs` means the Eastern Hemisphere.","sig":null,"attributes":[{"value":"/ Makes a new `FixedOffset` for the Western Hemisphere with given timezone difference.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":87889,"byte_end":87977,"line_start":76,"line_end":76,"column_start":5,"column_end":93}},{"value":"/ The negative `secs` means the Eastern Hemisphere.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":87982,"byte_end":88035,"line_start":77,"line_end":77,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":88040,"byte_end":88043,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on the out-of-bound `secs`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":88048,"byte_end":88094,"line_start":79,"line_end":79,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":186},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":88413,"byte_end":88428,"line_start":90,"line_end":90,"column_start":12,"column_end":27},"name":"local_minus_utc","qualname":"<FixedOffset>::local_minus_utc","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of seconds to add to convert from UTC to the local time.\n","sig":null,"attributes":[{"value":"/ Returns the number of seconds to add to convert from UTC to the local time.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":88308,"byte_end":88387,"line_start":88,"line_end":88,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":88392,"byte_end":88401,"line_start":89,"line_end":89,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":88590,"byte_end":88605,"line_start":96,"line_end":96,"column_start":12,"column_end":27},"name":"utc_minus_local","qualname":"<FixedOffset>::utc_minus_local","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of seconds to add to convert from the local time to UTC.\n","sig":null,"attributes":[{"value":"/ Returns the number of seconds to add to convert from the local time to UTC.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":88485,"byte_end":88564,"line_start":94,"line_end":94,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":88569,"byte_end":88578,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1564},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/local.rs","byte_start":96118,"byte_end":96123,"line_start":91,"line_end":91,"column_start":12,"column_end":17},"name":"Local","qualname":"::offset::local::Local","value":"","parent":null,"children":[],"decl_id":null,"docs":" The local timescale. This is implemented via the standard `time` crate.","sig":null,"attributes":[{"value":"/ The local timescale. This is implemented via the standard `time` crate.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/local.rs","byte_start":95662,"byte_end":95737,"line_start":76,"line_end":76,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/local.rs","byte_start":95738,"byte_end":95741,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ Using the [`TimeZone`](./trait.TimeZone.html) methods","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/local.rs","byte_start":95742,"byte_end":95799,"line_start":78,"line_end":78,"column_start":1,"column_end":58}},{"value":"/ on the Local struct is the preferred way to construct `DateTime<Local>`","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/local.rs","byte_start":95800,"byte_end":95875,"line_start":79,"line_end":79,"column_start":1,"column_end":76}},{"value":"/ instances.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/local.rs","byte_start":95876,"byte_end":95890,"line_start":80,"line_end":80,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/local.rs","byte_start":95891,"byte_end":95894,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/local.rs","byte_start":95895,"byte_end":95908,"line_start":82,"line_end":82,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/local.rs","byte_start":95909,"byte_end":95912,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/local.rs","byte_start":95913,"byte_end":95921,"line_start":84,"line_end":84,"column_start":1,"column_end":9}},{"value":"/ use chrono::{Local, DateTime, TimeZone};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/local.rs","byte_start":95922,"byte_end":95966,"line_start":85,"line_end":85,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/local.rs","byte_start":95967,"byte_end":95970,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ let dt: DateTime<Local> = Local::now();","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/local.rs","byte_start":95971,"byte_end":96014,"line_start":87,"line_end":87,"column_start":1,"column_end":44}},{"value":"/ let dt: DateTime<Local> = Local.timestamp(0, 0);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/local.rs","byte_start":96015,"byte_end":96067,"line_start":88,"line_end":88,"column_start":1,"column_end":53}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/local.rs","byte_start":96068,"byte_end":96076,"line_start":89,"line_end":89,"column_start":1,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/local.rs","byte_start":96214,"byte_end":96219,"line_start":95,"line_end":95,"column_start":12,"column_end":17},"name":"today","qualname":"<Local>::today","value":"fn () -> Date<Local>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Date` which corresponds to the current date.\n","sig":null,"attributes":[{"value":"/ Returns a `Date` which corresponds to the current date.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/local.rs","byte_start":96143,"byte_end":96202,"line_start":94,"line_end":94,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/local.rs","byte_start":96445,"byte_end":96448,"line_start":101,"line_end":101,"column_start":12,"column_end":15},"name":"now","qualname":"<Local>::now","value":"fn () -> DateTime<Local>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `DateTime` which corresponds to the current date.\n","sig":null,"attributes":[{"value":"/ Returns a `DateTime` which corresponds to the current date.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/local.rs","byte_start":96278,"byte_end":96341,"line_start":99,"line_end":99,"column_start":5,"column_end":68}},{"value":"cfg(not(all(target_arch = \"wasm32\", not(target_os = \"wasi\"), feature =\n              \"wasmbind\")))","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/local.rs","byte_start":96346,"byte_end":96433,"line_start":100,"line_end":100,"column_start":5,"column_end":92}}]},{"kind":"Struct","id":{"krate":0,"index":1571},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/utc.rs","byte_start":102375,"byte_end":102378,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"Utc","qualname":"::offset::utc::Utc","value":"","parent":null,"children":[],"decl_id":null,"docs":" The UTC time zone. This is the most efficient time zone when you don't need the local time.\n It is also used as an offset (which is also a dummy type).","sig":null,"attributes":[{"value":"/ The UTC time zone. This is the most efficient time zone when you don't need the local time.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/utc.rs","byte_start":101729,"byte_end":101824,"line_start":18,"line_end":18,"column_start":1,"column_end":96}},{"value":"/ It is also used as an offset (which is also a dummy type).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/utc.rs","byte_start":101825,"byte_end":101887,"line_start":19,"line_end":19,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/utc.rs","byte_start":101888,"byte_end":101891,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Using the [`TimeZone`](./trait.TimeZone.html) methods","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/utc.rs","byte_start":101892,"byte_end":101949,"line_start":21,"line_end":21,"column_start":1,"column_end":58}},{"value":"/ on the UTC struct is the preferred way to construct `DateTime<Utc>`","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/utc.rs","byte_start":101950,"byte_end":102021,"line_start":22,"line_end":22,"column_start":1,"column_end":72}},{"value":"/ instances.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/utc.rs","byte_start":102022,"byte_end":102036,"line_start":23,"line_end":23,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/utc.rs","byte_start":102037,"byte_end":102040,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/utc.rs","byte_start":102041,"byte_end":102054,"line_start":25,"line_end":25,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/utc.rs","byte_start":102055,"byte_end":102058,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/utc.rs","byte_start":102059,"byte_end":102067,"line_start":27,"line_end":27,"column_start":1,"column_end":9}},{"value":"/ use chrono::{DateTime, TimeZone, NaiveDateTime, Utc};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/utc.rs","byte_start":102068,"byte_end":102125,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/utc.rs","byte_start":102126,"byte_end":102129,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let dt = DateTime::<Utc>::from_utc(NaiveDateTime::from_timestamp(61, 0), Utc);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/utc.rs","byte_start":102130,"byte_end":102212,"line_start":30,"line_end":30,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/utc.rs","byte_start":102213,"byte_end":102216,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Utc.timestamp(61, 0), dt);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/utc.rs","byte_start":102217,"byte_end":102258,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(Utc.ymd(1970, 1, 1).and_hms(0, 1, 1), dt);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/utc.rs","byte_start":102259,"byte_end":102316,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/utc.rs","byte_start":102317,"byte_end":102325,"line_start":34,"line_end":34,"column_start":1,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/utc.rs","byte_start":102493,"byte_end":102498,"line_start":41,"line_end":41,"column_start":12,"column_end":17},"name":"today","qualname":"<Utc>::today","value":"fn () -> Date<Utc>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Date` which corresponds to the current date.\n","sig":null,"attributes":[{"value":"/ Returns a `Date` which corresponds to the current date.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/utc.rs","byte_start":102422,"byte_end":102481,"line_start":40,"line_end":40,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/utc.rs","byte_start":102720,"byte_end":102723,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"now","qualname":"<Utc>::now","value":"fn () -> DateTime<Utc>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `DateTime` which corresponds to the current date.\n","sig":null,"attributes":[{"value":"/ Returns a `DateTime` which corresponds to the current date.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/utc.rs","byte_start":102553,"byte_end":102616,"line_start":45,"line_end":45,"column_start":5,"column_end":68}},{"value":"cfg(not(all(target_arch = \"wasm32\", not(target_os = \"wasi\"), feature =\n              \"wasmbind\")))","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/utc.rs","byte_start":102621,"byte_end":102708,"line_start":46,"line_end":46,"column_start":5,"column_end":92}}]},{"kind":"Mod","id":{"krate":0,"index":296},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":23625,"byte_end":23630,"line_start":541,"line_end":541,"column_start":9,"column_end":14},"name":"naive","qualname":"::naive","value":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","parent":null,"children":[{"krate":0,"index":297},{"krate":0,"index":435},{"krate":0,"index":563},{"krate":0,"index":643},{"krate":0,"index":656},{"krate":0,"index":743},{"krate":0,"index":747},{"krate":0,"index":751},{"krate":0,"index":752}],"decl_id":null,"docs":" Date and time types unconcerned with timezones.","sig":null,"attributes":[{"value":"! Date and time types unconcerned with timezones.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":23637,"byte_end":23688,"line_start":542,"line_end":542,"column_start":5,"column_end":56}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":23693,"byte_end":23696,"line_start":543,"line_end":543,"column_start":5,"column_end":8}},{"value":"! They are primarily building blocks for other types","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":23701,"byte_end":23755,"line_start":544,"line_end":544,"column_start":5,"column_end":59}},{"value":"! (e.g. [`TimeZone`](../offset/trait.TimeZone.html)),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":23760,"byte_end":23815,"line_start":545,"line_end":545,"column_start":5,"column_end":60}},{"value":"! but can be also used for the simpler date and time handling.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":23820,"byte_end":23884,"line_start":546,"line_end":546,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":1582},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":108492,"byte_end":108501,"line_start":99,"line_end":99,"column_start":12,"column_end":21},"name":"NaiveDate","qualname":"::naive::date::NaiveDate","value":"NaiveDate {  }","parent":null,"children":[{"krate":0,"index":1583}],"decl_id":null,"docs":" ISO 8601 calendar date without timezone.\n Allows for every [proleptic Gregorian date](#calendar-date)\n from Jan 1, 262145 BCE to Dec 31, 262143 CE.\n Also supports the conversion from ISO 8601 ordinal and week date.","sig":null,"attributes":[{"value":"/ ISO 8601 calendar date without timezone.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":105914,"byte_end":105958,"line_start":50,"line_end":50,"column_start":1,"column_end":45}},{"value":"/ Allows for every [proleptic Gregorian date](#calendar-date)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":105959,"byte_end":106022,"line_start":51,"line_end":51,"column_start":1,"column_end":64}},{"value":"/ from Jan 1, 262145 BCE to Dec 31, 262143 CE.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":106023,"byte_end":106071,"line_start":52,"line_end":52,"column_start":1,"column_end":49}},{"value":"/ Also supports the conversion from ISO 8601 ordinal and week date.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":106072,"byte_end":106141,"line_start":53,"line_end":53,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":106142,"byte_end":106145,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # Calendar Date","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":106146,"byte_end":106165,"line_start":55,"line_end":55,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":106166,"byte_end":106169,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ The ISO 8601 **calendar date** follows the proleptic Gregorian calendar.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":106170,"byte_end":106246,"line_start":57,"line_end":57,"column_start":1,"column_end":77}},{"value":"/ It is like a normal civil calendar but note some slight differences:","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":106247,"byte_end":106319,"line_start":58,"line_end":58,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":106320,"byte_end":106323,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ * Dates before the Gregorian calendar's inception in 1582 are defined via the extrapolation.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":106324,"byte_end":106420,"line_start":60,"line_end":60,"column_start":1,"column_end":97}},{"value":"/   Be careful, as historical dates are often noted in the Julian calendar and others","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":106421,"byte_end":106508,"line_start":61,"line_end":61,"column_start":1,"column_end":88}},{"value":"/   and the transition to Gregorian may differ across countries (as late as early 20C).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":106509,"byte_end":106598,"line_start":62,"line_end":62,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":106599,"byte_end":106602,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/   (Some example: Both Shakespeare from Britain and Cervantes from Spain seemingly died","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":106603,"byte_end":106693,"line_start":64,"line_end":64,"column_start":1,"column_end":91}},{"value":"/   on the same calendar date---April 23, 1616---but in the different calendar.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":106694,"byte_end":106775,"line_start":65,"line_end":65,"column_start":1,"column_end":82}},{"value":"/   Britain used the Julian calendar at that time, so Shakespeare's death is later.)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":106776,"byte_end":106862,"line_start":66,"line_end":66,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":106863,"byte_end":106866,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ * ISO 8601 calendars has the year 0, which is 1 BCE (a year before 1 CE).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":106867,"byte_end":106944,"line_start":68,"line_end":68,"column_start":1,"column_end":78}},{"value":"/   If you need a typical BCE/BC and CE/AD notation for year numbers,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":106945,"byte_end":107016,"line_start":69,"line_end":69,"column_start":1,"column_end":72}},{"value":"/   use the [`Datelike::year_ce`](../trait.Datelike.html#method.year_ce) method.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":107017,"byte_end":107099,"line_start":70,"line_end":70,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":107100,"byte_end":107103,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ # Week Date","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":107104,"byte_end":107119,"line_start":72,"line_end":72,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":107120,"byte_end":107123,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ The ISO 8601 **week date** is a triple of year number, week number","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":107124,"byte_end":107194,"line_start":74,"line_end":74,"column_start":1,"column_end":71}},{"value":"/ and [day of the week](../enum.Weekday.html) with the following rules:","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":107195,"byte_end":107268,"line_start":75,"line_end":75,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":107269,"byte_end":107272,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ * A week consists of Monday through Sunday, and is always numbered within some year.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":107273,"byte_end":107361,"line_start":77,"line_end":77,"column_start":1,"column_end":89}},{"value":"/   The week number ranges from 1 to 52 or 53 depending on the year.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":107362,"byte_end":107432,"line_start":78,"line_end":78,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":107433,"byte_end":107436,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ * The week 1 of given year is defined as the first week containing January 4 of that year,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":107437,"byte_end":107531,"line_start":80,"line_end":80,"column_start":1,"column_end":95}},{"value":"/   or equivalently, the first week containing four or more days in that year.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":107532,"byte_end":107612,"line_start":81,"line_end":81,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":107613,"byte_end":107616,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ * The year number in the week date may *not* correspond to the actual Gregorian year.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":107617,"byte_end":107706,"line_start":83,"line_end":83,"column_start":1,"column_end":90}},{"value":"/   For example, January 3, 2016 (Sunday) was on the last (53rd) week of 2015.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":107707,"byte_end":107787,"line_start":84,"line_end":84,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":107788,"byte_end":107791,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ Chrono's date types default to the ISO 8601 [calendar date](#calendar-date),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":107792,"byte_end":107872,"line_start":86,"line_end":86,"column_start":1,"column_end":81}},{"value":"/ but [`Datelike::iso_week`](../trait.Datelike.html#tymethod.iso_week) and","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":107873,"byte_end":107949,"line_start":87,"line_end":87,"column_start":1,"column_end":77}},{"value":"/ [`Datelike::weekday`](../trait.Datelike.html#tymethod.weekday) methods","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":107950,"byte_end":108024,"line_start":88,"line_end":88,"column_start":1,"column_end":75}},{"value":"/ can be used to get the corresponding week date.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":108025,"byte_end":108076,"line_start":89,"line_end":89,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":108077,"byte_end":108080,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ # Ordinal Date","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":108081,"byte_end":108099,"line_start":91,"line_end":91,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":108100,"byte_end":108103,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ The ISO 8601 **ordinal date** is a pair of year number and day of the year (\"ordinal\").","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":108104,"byte_end":108195,"line_start":93,"line_end":93,"column_start":1,"column_end":92}},{"value":"/ The ordinal number ranges from 1 to 365 or 366 depending on the year.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":108196,"byte_end":108269,"line_start":94,"line_end":94,"column_start":1,"column_end":74}},{"value":"/ The year number is the same as that of the [calendar date](#calendar-date).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":108270,"byte_end":108349,"line_start":95,"line_end":95,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":108350,"byte_end":108353,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ This is currently the internal format of Chrono's date types.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":108354,"byte_end":108419,"line_start":97,"line_end":97,"column_start":1,"column_end":66}}]},{"kind":"Const","id":{"krate":0,"index":337},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":108620,"byte_end":108628,"line_start":104,"line_end":104,"column_start":11,"column_end":19},"name":"MIN_DATE","qualname":"::naive::date::MIN_DATE","value":"NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" The minimum possible `NaiveDate` (January 1, 262145 BCE).\n","sig":null,"attributes":[{"value":"/ The minimum possible `NaiveDate` (January 1, 262145 BCE).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":108548,"byte_end":108609,"line_start":103,"line_end":103,"column_start":1,"column_end":62}}]},{"kind":"Const","id":{"krate":0,"index":338},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":108778,"byte_end":108786,"line_start":106,"line_end":106,"column_start":11,"column_end":19},"name":"MAX_DATE","qualname":"::naive::date::MAX_DATE","value":"NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" The maximum possible `NaiveDate` (December 31, 262143 CE).\n","sig":null,"attributes":[{"value":"/ The maximum possible `NaiveDate` (December 31, 262143 CE).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":108705,"byte_end":108767,"line_start":105,"line_end":105,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":111150,"byte_end":111158,"line_start":172,"line_end":172,"column_start":12,"column_end":20},"name":"from_ymd","qualname":"<NaiveDate>::from_ymd","value":"fn (year: i32, month: u32, day: u32) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from the [calendar date](#calendar-date)\n (year, month and day).","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` from the [calendar date](#calendar-date)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":110420,"byte_end":110488,"line_start":152,"line_end":152,"column_start":5,"column_end":73}},{"value":"/ (year, month and day).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":110493,"byte_end":110519,"line_start":153,"line_end":153,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":110524,"byte_end":110527,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ Panics on the out-of-range date, invalid month and/or day.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":110532,"byte_end":110594,"line_start":155,"line_end":155,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":110599,"byte_end":110602,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":110607,"byte_end":110620,"line_start":157,"line_end":157,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":110625,"byte_end":110628,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":110633,"byte_end":110641,"line_start":159,"line_end":159,"column_start":5,"column_end":13}},{"value":"/ use chrono::{NaiveDate, Datelike, Weekday};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":110646,"byte_end":110693,"line_start":160,"line_end":160,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":110698,"byte_end":110701,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 3, 14);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":110706,"byte_end":110751,"line_start":162,"line_end":162,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(d.year(), 2015);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":110756,"byte_end":110787,"line_start":163,"line_end":163,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(d.month(), 3);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":110792,"byte_end":110821,"line_start":164,"line_end":164,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(d.day(), 14);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":110826,"byte_end":110854,"line_start":165,"line_end":165,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(d.ordinal(), 73); // day of year","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":110859,"byte_end":110906,"line_start":166,"line_end":166,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(d.iso_week().year(), 2015);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":110911,"byte_end":110953,"line_start":167,"line_end":167,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(d.iso_week().week(), 11);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":110958,"byte_end":110998,"line_start":168,"line_end":168,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(d.weekday(), Weekday::Sat);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":111003,"byte_end":111045,"line_start":169,"line_end":169,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(d.num_days_from_ce(), 735671); // days since January 1, 1 CE","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":111050,"byte_end":111125,"line_start":170,"line_end":170,"column_start":5,"column_end":80}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":111130,"byte_end":111138,"line_start":171,"line_end":171,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":112009,"byte_end":112021,"line_start":195,"line_end":195,"column_start":12,"column_end":24},"name":"from_ymd_opt","qualname":"<NaiveDate>::from_ymd_opt","value":"fn (year: i32, month: u32, day: u32) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from the [calendar date](#calendar-date)\n (year, month and day).","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` from the [calendar date](#calendar-date)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":111307,"byte_end":111375,"line_start":176,"line_end":176,"column_start":5,"column_end":73}},{"value":"/ (year, month and day).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":111380,"byte_end":111406,"line_start":177,"line_end":177,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":111411,"byte_end":111414,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on the out-of-range date, invalid month and/or day.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":111419,"byte_end":111489,"line_start":179,"line_end":179,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":111494,"byte_end":111497,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":111502,"byte_end":111515,"line_start":181,"line_end":181,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":111520,"byte_end":111523,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":111528,"byte_end":111536,"line_start":183,"line_end":183,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":111541,"byte_end":111567,"line_start":184,"line_end":184,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":111572,"byte_end":111575,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ let from_ymd_opt = NaiveDate::from_ymd_opt;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":111580,"byte_end":111627,"line_start":186,"line_end":186,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":111632,"byte_end":111635,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ assert!(from_ymd_opt(2015, 3, 14).is_some());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":111640,"byte_end":111689,"line_start":188,"line_end":188,"column_start":5,"column_end":54}},{"value":"/ assert!(from_ymd_opt(2015, 0, 14).is_none());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":111694,"byte_end":111743,"line_start":189,"line_end":189,"column_start":5,"column_end":54}},{"value":"/ assert!(from_ymd_opt(2015, 2, 29).is_none());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":111748,"byte_end":111797,"line_start":190,"line_end":190,"column_start":5,"column_end":54}},{"value":"/ assert!(from_ymd_opt(-4, 2, 29).is_some()); // 5 BCE is a leap year","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":111802,"byte_end":111873,"line_start":191,"line_end":191,"column_start":5,"column_end":76}},{"value":"/ assert!(from_ymd_opt(400000, 1, 1).is_none());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":111878,"byte_end":111928,"line_start":192,"line_end":192,"column_start":5,"column_end":55}},{"value":"/ assert!(from_ymd_opt(-400000, 1, 1).is_none());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":111933,"byte_end":111984,"line_start":193,"line_end":193,"column_start":5,"column_end":56}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":111989,"byte_end":111997,"line_start":194,"line_end":194,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":112915,"byte_end":112922,"line_start":220,"line_end":220,"column_start":12,"column_end":19},"name":"from_yo","qualname":"<NaiveDate>::from_yo","value":"fn (year: i32, ordinal: u32) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from the [ordinal date](#ordinal-date)\n (year and day of the year).","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` from the [ordinal date](#ordinal-date)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":112200,"byte_end":112266,"line_start":200,"line_end":200,"column_start":5,"column_end":71}},{"value":"/ (year and day of the year).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":112271,"byte_end":112302,"line_start":201,"line_end":201,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":112307,"byte_end":112310,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ Panics on the out-of-range date and/or invalid day of year.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":112315,"byte_end":112378,"line_start":203,"line_end":203,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":112383,"byte_end":112386,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":112391,"byte_end":112404,"line_start":205,"line_end":205,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":112409,"byte_end":112412,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":112417,"byte_end":112425,"line_start":207,"line_end":207,"column_start":5,"column_end":13}},{"value":"/ use chrono::{NaiveDate, Datelike, Weekday};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":112430,"byte_end":112477,"line_start":208,"line_end":208,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":112482,"byte_end":112485,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_yo(2015, 73);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":112490,"byte_end":112531,"line_start":210,"line_end":210,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(d.ordinal(), 73);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":112536,"byte_end":112568,"line_start":211,"line_end":211,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(d.year(), 2015);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":112573,"byte_end":112604,"line_start":212,"line_end":212,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(d.month(), 3);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":112609,"byte_end":112638,"line_start":213,"line_end":213,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(d.day(), 14);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":112643,"byte_end":112671,"line_start":214,"line_end":214,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(d.iso_week().year(), 2015);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":112676,"byte_end":112718,"line_start":215,"line_end":215,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(d.iso_week().week(), 11);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":112723,"byte_end":112763,"line_start":216,"line_end":216,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(d.weekday(), Weekday::Sat);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":112768,"byte_end":112810,"line_start":217,"line_end":217,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(d.num_days_from_ce(), 735671); // days since January 1, 1 CE","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":112815,"byte_end":112890,"line_start":218,"line_end":218,"column_start":5,"column_end":80}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":112895,"byte_end":112903,"line_start":219,"line_end":219,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":345},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":113792,"byte_end":113803,"line_start":244,"line_end":244,"column_start":12,"column_end":23},"name":"from_yo_opt","qualname":"<NaiveDate>::from_yo_opt","value":"fn (year: i32, ordinal: u32) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from the [ordinal date](#ordinal-date)\n (year and day of the year).","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` from the [ordinal date](#ordinal-date)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":113059,"byte_end":113125,"line_start":224,"line_end":224,"column_start":5,"column_end":71}},{"value":"/ (year and day of the year).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":113130,"byte_end":113161,"line_start":225,"line_end":225,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":113166,"byte_end":113169,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on the out-of-range date and/or invalid day of year.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":113174,"byte_end":113245,"line_start":227,"line_end":227,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":113250,"byte_end":113253,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":113258,"byte_end":113271,"line_start":229,"line_end":229,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":113276,"byte_end":113279,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":113284,"byte_end":113292,"line_start":231,"line_end":231,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":113297,"byte_end":113323,"line_start":232,"line_end":232,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":113328,"byte_end":113331,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ let from_yo_opt = NaiveDate::from_yo_opt;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":113336,"byte_end":113381,"line_start":234,"line_end":234,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":113386,"byte_end":113389,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ assert!(from_yo_opt(2015, 100).is_some());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":113394,"byte_end":113440,"line_start":236,"line_end":236,"column_start":5,"column_end":51}},{"value":"/ assert!(from_yo_opt(2015, 0).is_none());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":113445,"byte_end":113489,"line_start":237,"line_end":237,"column_start":5,"column_end":49}},{"value":"/ assert!(from_yo_opt(2015, 365).is_some());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":113494,"byte_end":113540,"line_start":238,"line_end":238,"column_start":5,"column_end":51}},{"value":"/ assert!(from_yo_opt(2015, 366).is_none());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":113545,"byte_end":113591,"line_start":239,"line_end":239,"column_start":5,"column_end":51}},{"value":"/ assert!(from_yo_opt(-4, 366).is_some()); // 5 BCE is a leap year","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":113596,"byte_end":113664,"line_start":240,"line_end":240,"column_start":5,"column_end":73}},{"value":"/ assert!(from_yo_opt(400000, 1).is_none());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":113669,"byte_end":113715,"line_start":241,"line_end":241,"column_start":5,"column_end":51}},{"value":"/ assert!(from_yo_opt(-400000, 1).is_none());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":113720,"byte_end":113767,"line_start":242,"line_end":242,"column_start":5,"column_end":52}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":113772,"byte_end":113780,"line_start":243,"line_end":243,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":114809,"byte_end":114820,"line_start":270,"line_end":270,"column_start":12,"column_end":23},"name":"from_isoywd","qualname":"<NaiveDate>::from_isoywd","value":"fn (year: i32, week: u32, weekday: Weekday) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from the [ISO week date](#week-date)\n (year, week number and day of the week).\n The resulting `NaiveDate` may have a different year from the input year.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` from the [ISO week date](#week-date)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":113969,"byte_end":114033,"line_start":249,"line_end":249,"column_start":5,"column_end":69}},{"value":"/ (year, week number and day of the week).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":114038,"byte_end":114082,"line_start":250,"line_end":250,"column_start":5,"column_end":49}},{"value":"/ The resulting `NaiveDate` may have a different year from the input year.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":114087,"byte_end":114163,"line_start":251,"line_end":251,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":114168,"byte_end":114171,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ Panics on the out-of-range date and/or invalid week number.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":114176,"byte_end":114239,"line_start":253,"line_end":253,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":114244,"byte_end":114247,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":114252,"byte_end":114265,"line_start":255,"line_end":255,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":114270,"byte_end":114273,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":114278,"byte_end":114286,"line_start":257,"line_end":257,"column_start":5,"column_end":13}},{"value":"/ use chrono::{NaiveDate, Datelike, Weekday};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":114291,"byte_end":114338,"line_start":258,"line_end":258,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":114343,"byte_end":114346,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_isoywd(2015, 11, Weekday::Sat);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":114351,"byte_end":114410,"line_start":260,"line_end":260,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(d.iso_week().year(), 2015);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":114415,"byte_end":114457,"line_start":261,"line_end":261,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(d.iso_week().week(), 11);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":114462,"byte_end":114502,"line_start":262,"line_end":262,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(d.weekday(), Weekday::Sat);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":114507,"byte_end":114549,"line_start":263,"line_end":263,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(d.year(), 2015);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":114554,"byte_end":114585,"line_start":264,"line_end":264,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(d.month(), 3);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":114590,"byte_end":114619,"line_start":265,"line_end":265,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(d.day(), 14);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":114624,"byte_end":114652,"line_start":266,"line_end":266,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(d.ordinal(), 73); // day of year","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":114657,"byte_end":114704,"line_start":267,"line_end":267,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(d.num_days_from_ce(), 735671); // days since January 1, 1 CE","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":114709,"byte_end":114784,"line_start":268,"line_end":268,"column_start":5,"column_end":80}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":114789,"byte_end":114797,"line_start":269,"line_end":269,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":117183,"byte_end":117198,"line_start":318,"line_end":318,"column_start":12,"column_end":27},"name":"from_isoywd_opt","qualname":"<NaiveDate>::from_isoywd_opt","value":"fn (year: i32, week: u32, weekday: Weekday) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from the [ISO week date](#week-date)\n (year, week number and day of the week).\n The resulting `NaiveDate` may have a different year from the input year.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` from the [ISO week date](#week-date)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":114982,"byte_end":115046,"line_start":274,"line_end":274,"column_start":5,"column_end":69}},{"value":"/ (year, week number and day of the week).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":115051,"byte_end":115095,"line_start":275,"line_end":275,"column_start":5,"column_end":49}},{"value":"/ The resulting `NaiveDate` may have a different year from the input year.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":115100,"byte_end":115176,"line_start":276,"line_end":276,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":115181,"byte_end":115184,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on the out-of-range date and/or invalid week number.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":115189,"byte_end":115260,"line_start":278,"line_end":278,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":115265,"byte_end":115268,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":115273,"byte_end":115286,"line_start":280,"line_end":280,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":115291,"byte_end":115294,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":115299,"byte_end":115307,"line_start":282,"line_end":282,"column_start":5,"column_end":13}},{"value":"/ use chrono::{NaiveDate, Weekday};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":115312,"byte_end":115349,"line_start":283,"line_end":283,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":115354,"byte_end":115357,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":115362,"byte_end":115401,"line_start":285,"line_end":285,"column_start":5,"column_end":44}},{"value":"/ let from_isoywd_opt = NaiveDate::from_isoywd_opt;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":115406,"byte_end":115459,"line_start":286,"line_end":286,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":115464,"byte_end":115467,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from_isoywd_opt(2015, 0, Weekday::Sun), None);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":115472,"byte_end":115533,"line_start":288,"line_end":288,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(from_isoywd_opt(2015, 10, Weekday::Sun), Some(from_ymd(2015, 3, 8)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":115538,"byte_end":115622,"line_start":289,"line_end":289,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(from_isoywd_opt(2015, 30, Weekday::Mon), Some(from_ymd(2015, 7, 20)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":115627,"byte_end":115712,"line_start":290,"line_end":290,"column_start":5,"column_end":90}},{"value":"/ assert_eq!(from_isoywd_opt(2015, 60, Weekday::Mon), None);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":115717,"byte_end":115779,"line_start":291,"line_end":291,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":115784,"byte_end":115787,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from_isoywd_opt(400000, 10, Weekday::Fri), None);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":115792,"byte_end":115856,"line_start":293,"line_end":293,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(from_isoywd_opt(-400000, 10, Weekday::Sat), None);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":115861,"byte_end":115926,"line_start":294,"line_end":294,"column_start":5,"column_end":70}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":115931,"byte_end":115939,"line_start":295,"line_end":295,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":115944,"byte_end":115947,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ The year number of ISO week date may differ from that of the calendar date.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":115952,"byte_end":116031,"line_start":297,"line_end":297,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":116036,"byte_end":116039,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":116044,"byte_end":116052,"line_start":299,"line_end":299,"column_start":5,"column_end":13}},{"value":"/ # use chrono::{NaiveDate, Weekday};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":116057,"byte_end":116096,"line_start":300,"line_end":300,"column_start":5,"column_end":44}},{"value":"/ # let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":116101,"byte_end":116142,"line_start":301,"line_end":301,"column_start":5,"column_end":46}},{"value":"/ # let from_isoywd_opt = NaiveDate::from_isoywd_opt;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":116147,"byte_end":116202,"line_start":302,"line_end":302,"column_start":5,"column_end":60}},{"value":"/ //           Mo Tu We Th Fr Sa Su","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":116207,"byte_end":116244,"line_start":303,"line_end":303,"column_start":5,"column_end":42}},{"value":"/ // 2014-W52  22 23 24 25 26 27 28    has 4+ days of new year,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":116249,"byte_end":116314,"line_start":304,"line_end":304,"column_start":5,"column_end":70}},{"value":"/ // 2015-W01  29 30 31  1  2  3  4 <- so this is the first week","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":116319,"byte_end":116385,"line_start":305,"line_end":305,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(from_isoywd_opt(2014, 52, Weekday::Sun), Some(from_ymd(2014, 12, 28)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":116390,"byte_end":116476,"line_start":306,"line_end":306,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(from_isoywd_opt(2014, 53, Weekday::Mon), None);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":116481,"byte_end":116543,"line_start":307,"line_end":307,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(from_isoywd_opt(2015, 1, Weekday::Mon), Some(from_ymd(2014, 12, 29)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":116548,"byte_end":116633,"line_start":308,"line_end":308,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":116638,"byte_end":116641,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ // 2015-W52  21 22 23 24 25 26 27    has 4+ days of old year,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":116646,"byte_end":116711,"line_start":310,"line_end":310,"column_start":5,"column_end":70}},{"value":"/ // 2015-W53  28 29 30 31  1  2  3 <- so this is the last week","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":116716,"byte_end":116781,"line_start":311,"line_end":311,"column_start":5,"column_end":70}},{"value":"/ // 2016-W01   4  5  6  7  8  9 10","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":116786,"byte_end":116823,"line_start":312,"line_end":312,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(from_isoywd_opt(2015, 52, Weekday::Sun), Some(from_ymd(2015, 12, 27)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":116828,"byte_end":116914,"line_start":313,"line_end":313,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(from_isoywd_opt(2015, 53, Weekday::Sun), Some(from_ymd(2016, 1, 3)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":116919,"byte_end":117003,"line_start":314,"line_end":314,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(from_isoywd_opt(2015, 54, Weekday::Mon), None);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":117008,"byte_end":117070,"line_start":315,"line_end":315,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(from_isoywd_opt(2016, 1, Weekday::Mon), Some(from_ymd(2016, 1, 4)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":117075,"byte_end":117158,"line_start":316,"line_end":316,"column_start":5,"column_end":88}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":117163,"byte_end":117171,"line_start":317,"line_end":317,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":120141,"byte_end":120162,"line_start":393,"line_end":393,"column_start":12,"column_end":33},"name":"from_num_days_from_ce","qualname":"<NaiveDate>::from_num_days_from_ce","value":"fn (days: i32) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from a day's number in the proleptic Gregorian calendar, with\n January 1, 1 being day 1.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` from a day's number in the proleptic Gregorian calendar, with","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":118410,"byte_end":118499,"line_start":349,"line_end":349,"column_start":5,"column_end":94}},{"value":"/ January 1, 1 being day 1.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":118504,"byte_end":118533,"line_start":350,"line_end":350,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":118538,"byte_end":118541,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ Panics if the date is out of range.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":118546,"byte_end":118585,"line_start":352,"line_end":352,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":118590,"byte_end":118593,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":118598,"byte_end":118611,"line_start":354,"line_end":354,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":118616,"byte_end":118619,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":118624,"byte_end":118632,"line_start":356,"line_end":356,"column_start":5,"column_end":13}},{"value":"/ use chrono::{NaiveDate, Datelike, Weekday};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":118637,"byte_end":118684,"line_start":357,"line_end":357,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":118689,"byte_end":118692,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_num_days_from_ce(735671);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":118697,"byte_end":118750,"line_start":359,"line_end":359,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(d.num_days_from_ce(), 735671); // days since January 1, 1 CE","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":118755,"byte_end":118830,"line_start":360,"line_end":360,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(d.year(), 2015);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":118835,"byte_end":118866,"line_start":361,"line_end":361,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(d.month(), 3);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":118871,"byte_end":118900,"line_start":362,"line_end":362,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(d.day(), 14);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":118905,"byte_end":118933,"line_start":363,"line_end":363,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(d.ordinal(), 73); // day of year","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":118938,"byte_end":118985,"line_start":364,"line_end":364,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(d.iso_week().year(), 2015);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":118990,"byte_end":119032,"line_start":365,"line_end":365,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(d.iso_week().week(), 11);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":119037,"byte_end":119077,"line_start":366,"line_end":366,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(d.weekday(), Weekday::Sat);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":119082,"byte_end":119124,"line_start":367,"line_end":367,"column_start":5,"column_end":47}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":119129,"byte_end":119137,"line_start":368,"line_end":368,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":119142,"byte_end":119145,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ While not directly supported by Chrono,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":119150,"byte_end":119193,"line_start":370,"line_end":370,"column_start":5,"column_end":48}},{"value":"/ it is easy to convert from the Julian day number","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":119198,"byte_end":119250,"line_start":371,"line_end":371,"column_start":5,"column_end":57}},{"value":"/ (January 1, 4713 BCE in the *Julian* calendar being Day 0)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":119255,"byte_end":119317,"line_start":372,"line_end":372,"column_start":5,"column_end":67}},{"value":"/ to Gregorian with this method.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":119322,"byte_end":119356,"line_start":373,"line_end":373,"column_start":5,"column_end":39}},{"value":"/ (Note that this panics when `jd` is out of range.)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":119361,"byte_end":119415,"line_start":374,"line_end":374,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":119420,"byte_end":119423,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":119428,"byte_end":119436,"line_start":376,"line_end":376,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":119441,"byte_end":119467,"line_start":377,"line_end":377,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":119472,"byte_end":119475,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ fn jd_to_date(jd: i32) -> NaiveDate {","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":119480,"byte_end":119521,"line_start":379,"line_end":379,"column_start":5,"column_end":46}},{"value":"/     // keep in mind that the Julian day number is 0-based","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":119526,"byte_end":119587,"line_start":380,"line_end":380,"column_start":5,"column_end":66}},{"value":"/     // while this method requires an 1-based number.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":119592,"byte_end":119648,"line_start":381,"line_end":381,"column_start":5,"column_end":61}},{"value":"/     NaiveDate::from_num_days_from_ce(jd - 1721425)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":119653,"byte_end":119707,"line_start":382,"line_end":382,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":119712,"byte_end":119717,"line_start":383,"line_end":383,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":119722,"byte_end":119725,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ // January 1, 4713 BCE in Julian = November 24, 4714 BCE in Gregorian","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":119730,"byte_end":119803,"line_start":385,"line_end":385,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(jd_to_date(0), NaiveDate::from_ymd(-4713, 11, 24));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":119808,"byte_end":119874,"line_start":386,"line_end":386,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":119879,"byte_end":119882,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(jd_to_date(1721426), NaiveDate::from_ymd(1, 1, 1));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":119887,"byte_end":119953,"line_start":388,"line_end":388,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(jd_to_date(2450000), NaiveDate::from_ymd(1995, 10, 9));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":119958,"byte_end":120028,"line_start":389,"line_end":389,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(jd_to_date(2451545), NaiveDate::from_ymd(2000, 1, 1));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":120033,"byte_end":120102,"line_start":390,"line_end":390,"column_start":5,"column_end":74}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":120107,"byte_end":120115,"line_start":391,"line_end":391,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":120120,"byte_end":120129,"line_start":392,"line_end":392,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":121111,"byte_end":121136,"line_start":417,"line_end":417,"column_start":12,"column_end":37},"name":"from_num_days_from_ce_opt","qualname":"<NaiveDate>::from_num_days_from_ce_opt","value":"fn (days: i32) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` from a day's number in the proleptic Gregorian calendar, with\n January 1, 1 being day 1.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` from a day's number in the proleptic Gregorian calendar, with","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":120279,"byte_end":120368,"line_start":397,"line_end":397,"column_start":5,"column_end":94}},{"value":"/ January 1, 1 being day 1.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":120373,"byte_end":120402,"line_start":398,"line_end":398,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":120407,"byte_end":120410,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the date is out of range.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":120415,"byte_end":120462,"line_start":400,"line_end":400,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":120467,"byte_end":120470,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":120475,"byte_end":120488,"line_start":402,"line_end":402,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":120493,"byte_end":120496,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":120501,"byte_end":120509,"line_start":404,"line_end":404,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":120514,"byte_end":120540,"line_start":405,"line_end":405,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":120545,"byte_end":120548,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ let from_ndays_opt = NaiveDate::from_num_days_from_ce_opt;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":120553,"byte_end":120615,"line_start":407,"line_end":407,"column_start":5,"column_end":67}},{"value":"/ let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":120620,"byte_end":120659,"line_start":408,"line_end":408,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":120664,"byte_end":120667,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from_ndays_opt(730_000),      Some(from_ymd(1999, 9, 3)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":120672,"byte_end":120745,"line_start":410,"line_end":410,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(from_ndays_opt(1),            Some(from_ymd(1, 1, 1)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":120750,"byte_end":120820,"line_start":411,"line_end":411,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(from_ndays_opt(0),            Some(from_ymd(0, 12, 31)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":120825,"byte_end":120897,"line_start":412,"line_end":412,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(from_ndays_opt(-1),           Some(from_ymd(0, 12, 30)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":120902,"byte_end":120974,"line_start":413,"line_end":413,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(from_ndays_opt(100_000_000),  None);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":120979,"byte_end":121030,"line_start":414,"line_end":414,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(from_ndays_opt(-100_000_000), None);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":121035,"byte_end":121086,"line_start":415,"line_end":415,"column_start":5,"column_end":56}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":121091,"byte_end":121099,"line_start":416,"line_end":416,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":350},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":122846,"byte_end":122867,"line_start":450,"line_end":450,"column_start":12,"column_end":33},"name":"from_weekday_of_month","qualname":"<NaiveDate>::from_weekday_of_month","value":"fn (year: i32, month: u32, weekday: Weekday, n: u8) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` by counting the number of occurrences of a particular day-of-week\n since the beginning of the given month.  For instance, if you want the 2nd Friday of March\n 2017, you would use `NaiveDate::from_weekday_of_month(2017, 3, Weekday::Fri, 2)`.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` by counting the number of occurrences of a particular day-of-week","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":121562,"byte_end":121655,"line_start":425,"line_end":425,"column_start":5,"column_end":98}},{"value":"/ since the beginning of the given month.  For instance, if you want the 2nd Friday of March","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":121660,"byte_end":121754,"line_start":426,"line_end":426,"column_start":5,"column_end":99}},{"value":"/ 2017, you would use `NaiveDate::from_weekday_of_month(2017, 3, Weekday::Fri, 2)`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":121759,"byte_end":121844,"line_start":427,"line_end":427,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":121849,"byte_end":121852,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":121857,"byte_end":121869,"line_start":429,"line_end":429,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":121874,"byte_end":121877,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ The resulting `NaiveDate` is guaranteed to be in `month`.  If `n` is larger than the number","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":121882,"byte_end":121977,"line_start":431,"line_end":431,"column_start":5,"column_end":100}},{"value":"/ of `weekday` in `month` (eg. the 6th Friday of March 2017) then this function will panic.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":121982,"byte_end":122075,"line_start":432,"line_end":432,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":122080,"byte_end":122083,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ `n` is 1-indexed.  Passing `n=0` will cause a panic.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":122088,"byte_end":122144,"line_start":434,"line_end":434,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":122149,"byte_end":122152,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":122157,"byte_end":122170,"line_start":436,"line_end":436,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":122175,"byte_end":122178,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":122183,"byte_end":122191,"line_start":438,"line_end":438,"column_start":5,"column_end":13}},{"value":"/ use chrono::{NaiveDate, Weekday};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":122196,"byte_end":122233,"line_start":439,"line_end":439,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":122238,"byte_end":122241,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ let from_weekday_of_month = NaiveDate::from_weekday_of_month;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":122246,"byte_end":122311,"line_start":441,"line_end":441,"column_start":5,"column_end":70}},{"value":"/ let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":122316,"byte_end":122355,"line_start":442,"line_end":442,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":122360,"byte_end":122363,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from_weekday_of_month(2018, 8, Weekday::Wed, 1), from_ymd(2018, 8, 1));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":122368,"byte_end":122454,"line_start":444,"line_end":444,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(from_weekday_of_month(2018, 8, Weekday::Fri, 1), from_ymd(2018, 8, 3));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":122459,"byte_end":122545,"line_start":445,"line_end":445,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(from_weekday_of_month(2018, 8, Weekday::Tue, 2), from_ymd(2018, 8, 14));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":122550,"byte_end":122637,"line_start":446,"line_end":446,"column_start":5,"column_end":92}},{"value":"/ assert_eq!(from_weekday_of_month(2018, 8, Weekday::Fri, 4), from_ymd(2018, 8, 24));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":122642,"byte_end":122729,"line_start":447,"line_end":447,"column_start":5,"column_end":92}},{"value":"/ assert_eq!(from_weekday_of_month(2018, 8, Weekday::Fri, 5), from_ymd(2018, 8, 31));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":122734,"byte_end":122821,"line_start":448,"line_end":448,"column_start":5,"column_end":92}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":122826,"byte_end":122834,"line_start":449,"line_end":449,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":123742,"byte_end":123767,"line_start":466,"line_end":466,"column_start":12,"column_end":37},"name":"from_weekday_of_month_opt","qualname":"<NaiveDate>::from_weekday_of_month_opt","value":"fn (year: i32, month: u32, weekday: Weekday, n: u8) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` by counting the number of occurrences of a particular day-of-week\n since the beginning of the given month.  For instance, if you want the 2nd Friday of March\n 2017, you would use `NaiveDate::from_weekday_of_month(2017, 3, Weekday::Fri, 2)`.  `n` is 1-indexed.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` by counting the number of occurrences of a particular day-of-week","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":123040,"byte_end":123133,"line_start":454,"line_end":454,"column_start":5,"column_end":98}},{"value":"/ since the beginning of the given month.  For instance, if you want the 2nd Friday of March","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":123138,"byte_end":123232,"line_start":455,"line_end":455,"column_start":5,"column_end":99}},{"value":"/ 2017, you would use `NaiveDate::from_weekday_of_month(2017, 3, Weekday::Fri, 2)`.  `n` is 1-indexed.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":123237,"byte_end":123341,"line_start":456,"line_end":456,"column_start":5,"column_end":109}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":123346,"byte_end":123349,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":123354,"byte_end":123362,"line_start":458,"line_end":458,"column_start":5,"column_end":13}},{"value":"/ use chrono::{NaiveDate, Weekday};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":123367,"byte_end":123404,"line_start":459,"line_end":459,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(NaiveDate::from_weekday_of_month_opt(2017, 3, Weekday::Fri, 2),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":123409,"byte_end":123487,"line_start":460,"line_end":460,"column_start":5,"column_end":83}},{"value":"/            NaiveDate::from_ymd_opt(2017, 3, 10))","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":123492,"byte_end":123544,"line_start":461,"line_end":461,"column_start":5,"column_end":57}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":123549,"byte_end":123557,"line_start":462,"line_end":462,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":123562,"byte_end":123565,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `n` out-of-range; ie. if `n` is larger than the number of `weekday` in","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":123570,"byte_end":123662,"line_start":464,"line_end":464,"column_start":5,"column_end":97}},{"value":"/ `month` (eg. the 6th Friday of March 2017), or if `n == 0`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":123667,"byte_end":123730,"line_start":465,"line_end":465,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":125787,"byte_end":125801,"line_start":523,"line_end":523,"column_start":12,"column_end":26},"name":"parse_from_str","qualname":"<NaiveDate>::parse_from_str","value":"fn (s: &str, fmt: &str) -> ParseResult<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Parses a string with the specified format string and returns a new `NaiveDate`.\n See the [`format::strftime` module](../format/strftime/index.html)\n on the supported escape sequences.","sig":null,"attributes":[{"value":"/ Parses a string with the specified format string and returns a new `NaiveDate`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":124218,"byte_end":124301,"line_start":481,"line_end":481,"column_start":5,"column_end":88}},{"value":"/ See the [`format::strftime` module](../format/strftime/index.html)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":124306,"byte_end":124376,"line_start":482,"line_end":482,"column_start":5,"column_end":75}},{"value":"/ on the supported escape sequences.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":124381,"byte_end":124419,"line_start":483,"line_end":483,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":124424,"byte_end":124427,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":124432,"byte_end":124445,"line_start":485,"line_end":485,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":124450,"byte_end":124453,"line_start":486,"line_end":486,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":124458,"byte_end":124466,"line_start":487,"line_end":487,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":124471,"byte_end":124497,"line_start":488,"line_end":488,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":124502,"byte_end":124505,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ let parse_from_str = NaiveDate::parse_from_str;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":124510,"byte_end":124561,"line_start":490,"line_end":490,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":124566,"byte_end":124569,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(parse_from_str(\"2015-09-05\", \"%Y-%m-%d\"),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":124574,"byte_end":124630,"line_start":492,"line_end":492,"column_start":5,"column_end":61}},{"value":"/            Ok(NaiveDate::from_ymd(2015, 9, 5)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":124635,"byte_end":124687,"line_start":493,"line_end":493,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(parse_from_str(\"5sep2015\", \"%d%b%Y\"),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":124692,"byte_end":124744,"line_start":494,"line_end":494,"column_start":5,"column_end":57}},{"value":"/            Ok(NaiveDate::from_ymd(2015, 9, 5)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":124749,"byte_end":124801,"line_start":495,"line_end":495,"column_start":5,"column_end":57}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":124806,"byte_end":124814,"line_start":496,"line_end":496,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":124819,"byte_end":124822,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ Time and offset is ignored for the purpose of parsing.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":124827,"byte_end":124885,"line_start":498,"line_end":498,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":124890,"byte_end":124893,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":124898,"byte_end":124906,"line_start":500,"line_end":500,"column_start":5,"column_end":13}},{"value":"/ # use chrono::NaiveDate;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":124911,"byte_end":124939,"line_start":501,"line_end":501,"column_start":5,"column_end":33}},{"value":"/ # let parse_from_str = NaiveDate::parse_from_str;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":124944,"byte_end":124997,"line_start":502,"line_end":502,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(parse_from_str(\"2014-5-17T12:34:56+09:30\", \"%Y-%m-%dT%H:%M:%S%z\"),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":125002,"byte_end":125083,"line_start":503,"line_end":503,"column_start":5,"column_end":86}},{"value":"/            Ok(NaiveDate::from_ymd(2014, 5, 17)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":125088,"byte_end":125141,"line_start":504,"line_end":504,"column_start":5,"column_end":58}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":125146,"byte_end":125154,"line_start":505,"line_end":505,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":125159,"byte_end":125162,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ Out-of-bound dates or insufficient fields are errors.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":125167,"byte_end":125224,"line_start":507,"line_end":507,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":125229,"byte_end":125232,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":125237,"byte_end":125245,"line_start":509,"line_end":509,"column_start":5,"column_end":13}},{"value":"/ # use chrono::NaiveDate;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":125250,"byte_end":125278,"line_start":510,"line_end":510,"column_start":5,"column_end":33}},{"value":"/ # let parse_from_str = NaiveDate::parse_from_str;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":125283,"byte_end":125336,"line_start":511,"line_end":511,"column_start":5,"column_end":58}},{"value":"/ assert!(parse_from_str(\"2015/9\", \"%Y/%m\").is_err());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":125341,"byte_end":125397,"line_start":512,"line_end":512,"column_start":5,"column_end":61}},{"value":"/ assert!(parse_from_str(\"2015/9/31\", \"%Y/%m/%d\").is_err());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":125402,"byte_end":125464,"line_start":513,"line_end":513,"column_start":5,"column_end":67}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":125469,"byte_end":125477,"line_start":514,"line_end":514,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":125482,"byte_end":125485,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ All parsed fields should be consistent to each other, otherwise it's an error.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":125490,"byte_end":125572,"line_start":516,"line_end":516,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":125577,"byte_end":125580,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":125585,"byte_end":125593,"line_start":518,"line_end":518,"column_start":5,"column_end":13}},{"value":"/ # use chrono::NaiveDate;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":125598,"byte_end":125626,"line_start":519,"line_end":519,"column_start":5,"column_end":33}},{"value":"/ # let parse_from_str = NaiveDate::parse_from_str;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":125631,"byte_end":125684,"line_start":520,"line_end":520,"column_start":5,"column_end":58}},{"value":"/ assert!(parse_from_str(\"Sat, 09 Aug 2013\", \"%a, %d %b %Y\").is_err());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":125689,"byte_end":125762,"line_start":521,"line_end":521,"column_start":5,"column_end":78}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":125767,"byte_end":125775,"line_start":522,"line_end":522,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":353},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":126450,"byte_end":126458,"line_start":544,"line_end":544,"column_start":12,"column_end":20},"name":"and_time","qualname":"<NaiveDate>::and_time","value":"fn (&self, time: NaiveTime) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date and given `NaiveTime`.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` from the current date and given `NaiveTime`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":125989,"byte_end":126065,"line_start":529,"line_end":529,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":126070,"byte_end":126073,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":126078,"byte_end":126091,"line_start":531,"line_end":531,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":126096,"byte_end":126099,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":126104,"byte_end":126112,"line_start":533,"line_end":533,"column_start":5,"column_end":13}},{"value":"/ use chrono::{NaiveDate, NaiveTime, NaiveDateTime};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":126117,"byte_end":126171,"line_start":534,"line_end":534,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":126176,"byte_end":126179,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 6, 3);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":126184,"byte_end":126228,"line_start":536,"line_end":536,"column_start":5,"column_end":49}},{"value":"/ let t = NaiveTime::from_hms_milli(12, 34, 56, 789);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":126233,"byte_end":126288,"line_start":537,"line_end":537,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":126293,"byte_end":126296,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = d.and_time(t);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":126301,"byte_end":126343,"line_start":539,"line_end":539,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(dt.date(), d);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":126348,"byte_end":126377,"line_start":540,"line_end":540,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(dt.time(), t);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":126382,"byte_end":126411,"line_start":541,"line_end":541,"column_start":5,"column_end":34}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":126416,"byte_end":126424,"line_start":542,"line_end":542,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":126429,"byte_end":126438,"line_start":543,"line_end":543,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":127274,"byte_end":127281,"line_start":568,"line_end":568,"column_start":12,"column_end":19},"name":"and_hms","qualname":"<NaiveDate>::and_hms","value":"fn (&self, hour: u32, min: u32, sec: u32) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute and second.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` from the current date, hour, minute and second.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":126553,"byte_end":126632,"line_start":548,"line_end":548,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":126637,"byte_end":126640,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ No [leap second](./struct.NaiveTime.html#leap-second-handling) is allowed here;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":126645,"byte_end":126728,"line_start":550,"line_end":550,"column_start":5,"column_end":88}},{"value":"/ use `NaiveDate::and_hms_*` methods with a subsecond parameter instead.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":126733,"byte_end":126807,"line_start":551,"line_end":551,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":126812,"byte_end":126815,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute and/or second.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":126820,"byte_end":126869,"line_start":553,"line_end":553,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":126874,"byte_end":126877,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":126882,"byte_end":126895,"line_start":555,"line_end":555,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":126900,"byte_end":126903,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":126908,"byte_end":126916,"line_start":557,"line_end":557,"column_start":5,"column_end":13}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike, Timelike, Weekday};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":126921,"byte_end":126993,"line_start":558,"line_end":558,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":126998,"byte_end":127001,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 6, 3);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":127006,"byte_end":127050,"line_start":560,"line_end":560,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":127055,"byte_end":127058,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = d.and_hms(12, 34, 56);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":127063,"byte_end":127113,"line_start":562,"line_end":562,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(dt.year(), 2015);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":127118,"byte_end":127150,"line_start":563,"line_end":563,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(dt.weekday(), Weekday::Wed);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":127155,"byte_end":127198,"line_start":564,"line_end":564,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(dt.second(), 56);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":127203,"byte_end":127235,"line_start":565,"line_end":565,"column_start":5,"column_end":37}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":127240,"byte_end":127248,"line_start":566,"line_end":566,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":127253,"byte_end":127262,"line_start":567,"line_end":567,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":355},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":128167,"byte_end":128178,"line_start":591,"line_end":591,"column_start":12,"column_end":23},"name":"and_hms_opt","qualname":"<NaiveDate>::and_hms_opt","value":"fn (&self, hour: u32, min: u32, sec: u32) -> Option<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute and second.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` from the current date, hour, minute and second.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":127414,"byte_end":127493,"line_start":572,"line_end":572,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":127498,"byte_end":127501,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ No [leap second](./struct.NaiveTime.html#leap-second-handling) is allowed here;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":127506,"byte_end":127589,"line_start":574,"line_end":574,"column_start":5,"column_end":88}},{"value":"/ use `NaiveDate::and_hms_*_opt` methods with a subsecond parameter instead.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":127594,"byte_end":127672,"line_start":575,"line_end":575,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":127677,"byte_end":127680,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute and/or second.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":127685,"byte_end":127742,"line_start":577,"line_end":577,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":127747,"byte_end":127750,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":127755,"byte_end":127768,"line_start":579,"line_end":579,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":127773,"byte_end":127776,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":127781,"byte_end":127789,"line_start":581,"line_end":581,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":127794,"byte_end":127820,"line_start":582,"line_end":582,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":127825,"byte_end":127828,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 6, 3);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":127833,"byte_end":127877,"line_start":584,"line_end":584,"column_start":5,"column_end":49}},{"value":"/ assert!(d.and_hms_opt(12, 34, 56).is_some());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":127882,"byte_end":127931,"line_start":585,"line_end":585,"column_start":5,"column_end":54}},{"value":"/ assert!(d.and_hms_opt(12, 34, 60).is_none()); // use `and_hms_milli_opt` instead","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":127936,"byte_end":128020,"line_start":586,"line_end":586,"column_start":5,"column_end":89}},{"value":"/ assert!(d.and_hms_opt(12, 60, 56).is_none());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":128025,"byte_end":128074,"line_start":587,"line_end":587,"column_start":5,"column_end":54}},{"value":"/ assert!(d.and_hms_opt(24, 34, 56).is_none());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":128079,"byte_end":128128,"line_start":588,"line_end":588,"column_start":5,"column_end":54}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":128133,"byte_end":128141,"line_start":589,"line_end":589,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":128146,"byte_end":128155,"line_start":590,"line_end":590,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":129117,"byte_end":129130,"line_start":616,"line_end":616,"column_start":12,"column_end":25},"name":"and_hms_milli","qualname":"<NaiveDate>::and_hms_milli","value":"fn (&self, hour: u32, min: u32, sec: u32, milli: u32) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute, second and millisecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` from the current date, hour, minute, second and millisecond.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":128335,"byte_end":128427,"line_start":595,"line_end":595,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":128432,"byte_end":128435,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ The millisecond part can exceed 1,000","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":128440,"byte_end":128481,"line_start":597,"line_end":597,"column_start":5,"column_end":46}},{"value":"/ in order to represent the [leap second](./struct.NaiveTime.html#leap-second-handling).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":128486,"byte_end":128576,"line_start":598,"line_end":598,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":128581,"byte_end":128584,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute, second and/or millisecond.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":128589,"byte_end":128651,"line_start":600,"line_end":600,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":128656,"byte_end":128659,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":128664,"byte_end":128677,"line_start":602,"line_end":602,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":128682,"byte_end":128685,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":128690,"byte_end":128698,"line_start":604,"line_end":604,"column_start":5,"column_end":13}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike, Timelike, Weekday};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":128703,"byte_end":128775,"line_start":605,"line_end":605,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":128780,"byte_end":128783,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 6, 3);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":128788,"byte_end":128832,"line_start":607,"line_end":607,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":128837,"byte_end":128840,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = d.and_hms_milli(12, 34, 56, 789);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":128845,"byte_end":128906,"line_start":609,"line_end":609,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(dt.year(), 2015);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":128911,"byte_end":128943,"line_start":610,"line_end":610,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(dt.weekday(), Weekday::Wed);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":128948,"byte_end":128991,"line_start":611,"line_end":611,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(dt.second(), 56);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":128996,"byte_end":129028,"line_start":612,"line_end":612,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(dt.nanosecond(), 789_000_000);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":129033,"byte_end":129078,"line_start":613,"line_end":613,"column_start":5,"column_end":50}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":129083,"byte_end":129091,"line_start":614,"line_end":614,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":129096,"byte_end":129105,"line_start":615,"line_end":615,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":130203,"byte_end":130220,"line_start":641,"line_end":641,"column_start":12,"column_end":29},"name":"and_hms_milli_opt","qualname":"<NaiveDate>::and_hms_milli_opt","value":"fn (&self, hour: u32, min: u32, sec: u32, milli: u32) -> Option<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute, second and millisecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` from the current date, hour, minute, second and millisecond.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":129288,"byte_end":129380,"line_start":620,"line_end":620,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":129385,"byte_end":129388,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ The millisecond part can exceed 1,000","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":129393,"byte_end":129434,"line_start":622,"line_end":622,"column_start":5,"column_end":46}},{"value":"/ in order to represent the [leap second](./struct.NaiveTime.html#leap-second-handling).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":129439,"byte_end":129529,"line_start":623,"line_end":623,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":129534,"byte_end":129537,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute, second and/or millisecond.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":129542,"byte_end":129612,"line_start":625,"line_end":625,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":129617,"byte_end":129620,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":129625,"byte_end":129638,"line_start":627,"line_end":627,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":129643,"byte_end":129646,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":129651,"byte_end":129659,"line_start":629,"line_end":629,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":129664,"byte_end":129690,"line_start":630,"line_end":630,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":129695,"byte_end":129698,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 6, 3);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":129703,"byte_end":129747,"line_start":632,"line_end":632,"column_start":5,"column_end":49}},{"value":"/ assert!(d.and_hms_milli_opt(12, 34, 56,   789).is_some());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":129752,"byte_end":129814,"line_start":633,"line_end":633,"column_start":5,"column_end":67}},{"value":"/ assert!(d.and_hms_milli_opt(12, 34, 59, 1_789).is_some()); // leap second","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":129819,"byte_end":129896,"line_start":634,"line_end":634,"column_start":5,"column_end":82}},{"value":"/ assert!(d.and_hms_milli_opt(12, 34, 59, 2_789).is_none());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":129901,"byte_end":129963,"line_start":635,"line_end":635,"column_start":5,"column_end":67}},{"value":"/ assert!(d.and_hms_milli_opt(12, 34, 60,   789).is_none());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":129968,"byte_end":130030,"line_start":636,"line_end":636,"column_start":5,"column_end":67}},{"value":"/ assert!(d.and_hms_milli_opt(12, 60, 56,   789).is_none());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":130035,"byte_end":130097,"line_start":637,"line_end":637,"column_start":5,"column_end":67}},{"value":"/ assert!(d.and_hms_milli_opt(24, 34, 56,   789).is_none());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":130102,"byte_end":130164,"line_start":638,"line_end":638,"column_start":5,"column_end":67}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":130169,"byte_end":130177,"line_start":639,"line_end":639,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":130182,"byte_end":130191,"line_start":640,"line_end":640,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":131239,"byte_end":131252,"line_start":672,"line_end":672,"column_start":12,"column_end":25},"name":"and_hms_micro","qualname":"<NaiveDate>::and_hms_micro","value":"fn (&self, hour: u32, min: u32, sec: u32, micro: u32) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute, second and microsecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` from the current date, hour, minute, second and microsecond.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":130449,"byte_end":130541,"line_start":651,"line_end":651,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":130546,"byte_end":130549,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ The microsecond part can exceed 1,000,000","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":130554,"byte_end":130599,"line_start":653,"line_end":653,"column_start":5,"column_end":50}},{"value":"/ in order to represent the [leap second](./struct.NaiveTime.html#leap-second-handling).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":130604,"byte_end":130694,"line_start":654,"line_end":654,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":130699,"byte_end":130702,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute, second and/or microsecond.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":130707,"byte_end":130769,"line_start":656,"line_end":656,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":130774,"byte_end":130777,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":130782,"byte_end":130795,"line_start":658,"line_end":658,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":130800,"byte_end":130803,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":130808,"byte_end":130816,"line_start":660,"line_end":660,"column_start":5,"column_end":13}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike, Timelike, Weekday};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":130821,"byte_end":130893,"line_start":661,"line_end":661,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":130898,"byte_end":130901,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 6, 3);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":130906,"byte_end":130950,"line_start":663,"line_end":663,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":130955,"byte_end":130958,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = d.and_hms_micro(12, 34, 56, 789_012);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":130963,"byte_end":131028,"line_start":665,"line_end":665,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(dt.year(), 2015);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":131033,"byte_end":131065,"line_start":666,"line_end":666,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(dt.weekday(), Weekday::Wed);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":131070,"byte_end":131113,"line_start":667,"line_end":667,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(dt.second(), 56);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":131118,"byte_end":131150,"line_start":668,"line_end":668,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(dt.nanosecond(), 789_012_000);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":131155,"byte_end":131200,"line_start":669,"line_end":669,"column_start":5,"column_end":50}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":131205,"byte_end":131213,"line_start":670,"line_end":670,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":131218,"byte_end":131227,"line_start":671,"line_end":671,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":361},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":132353,"byte_end":132370,"line_start":697,"line_end":697,"column_start":12,"column_end":29},"name":"and_hms_micro_opt","qualname":"<NaiveDate>::and_hms_micro_opt","value":"fn (&self, hour: u32, min: u32, sec: u32, micro: u32) -> Option<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute, second and microsecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` from the current date, hour, minute, second and microsecond.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":131410,"byte_end":131502,"line_start":676,"line_end":676,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":131507,"byte_end":131510,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ The microsecond part can exceed 1,000,000","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":131515,"byte_end":131560,"line_start":678,"line_end":678,"column_start":5,"column_end":50}},{"value":"/ in order to represent the [leap second](./struct.NaiveTime.html#leap-second-handling).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":131565,"byte_end":131655,"line_start":679,"line_end":679,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":131660,"byte_end":131663,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute, second and/or microsecond.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":131668,"byte_end":131738,"line_start":681,"line_end":681,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":131743,"byte_end":131746,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":131751,"byte_end":131764,"line_start":683,"line_end":683,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":131769,"byte_end":131772,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":131777,"byte_end":131785,"line_start":685,"line_end":685,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":131790,"byte_end":131816,"line_start":686,"line_end":686,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":131821,"byte_end":131824,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 6, 3);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":131829,"byte_end":131873,"line_start":688,"line_end":688,"column_start":5,"column_end":49}},{"value":"/ assert!(d.and_hms_micro_opt(12, 34, 56,   789_012).is_some());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":131878,"byte_end":131944,"line_start":689,"line_end":689,"column_start":5,"column_end":71}},{"value":"/ assert!(d.and_hms_micro_opt(12, 34, 59, 1_789_012).is_some()); // leap second","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":131949,"byte_end":132030,"line_start":690,"line_end":690,"column_start":5,"column_end":86}},{"value":"/ assert!(d.and_hms_micro_opt(12, 34, 59, 2_789_012).is_none());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":132035,"byte_end":132101,"line_start":691,"line_end":691,"column_start":5,"column_end":71}},{"value":"/ assert!(d.and_hms_micro_opt(12, 34, 60,   789_012).is_none());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":132106,"byte_end":132172,"line_start":692,"line_end":692,"column_start":5,"column_end":71}},{"value":"/ assert!(d.and_hms_micro_opt(12, 60, 56,   789_012).is_none());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":132177,"byte_end":132243,"line_start":693,"line_end":693,"column_start":5,"column_end":71}},{"value":"/ assert!(d.and_hms_micro_opt(24, 34, 56,   789_012).is_none());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":132248,"byte_end":132314,"line_start":694,"line_end":694,"column_start":5,"column_end":71}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":132319,"byte_end":132327,"line_start":695,"line_end":695,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":132332,"byte_end":132341,"line_start":696,"line_end":696,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":133393,"byte_end":133405,"line_start":728,"line_end":728,"column_start":12,"column_end":24},"name":"and_hms_nano","qualname":"<NaiveDate>::and_hms_nano","value":"fn (&self, hour: u32, min: u32, sec: u32, nano: u32) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute, second and nanosecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` from the current date, hour, minute, second and nanosecond.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":132599,"byte_end":132690,"line_start":707,"line_end":707,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":132695,"byte_end":132698,"line_start":708,"line_end":708,"column_start":5,"column_end":8}},{"value":"/ The nanosecond part can exceed 1,000,000,000","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":132703,"byte_end":132751,"line_start":709,"line_end":709,"column_start":5,"column_end":53}},{"value":"/ in order to represent the [leap second](./struct.NaiveTime.html#leap-second-handling).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":132756,"byte_end":132846,"line_start":710,"line_end":710,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":132851,"byte_end":132854,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute, second and/or nanosecond.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":132859,"byte_end":132920,"line_start":712,"line_end":712,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":132925,"byte_end":132928,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":132933,"byte_end":132946,"line_start":714,"line_end":714,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":132951,"byte_end":132954,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":132959,"byte_end":132967,"line_start":716,"line_end":716,"column_start":5,"column_end":13}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime, Datelike, Timelike, Weekday};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":132972,"byte_end":133044,"line_start":717,"line_end":717,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":133049,"byte_end":133052,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 6, 3);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":133057,"byte_end":133101,"line_start":719,"line_end":719,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":133106,"byte_end":133109,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ let dt: NaiveDateTime = d.and_hms_nano(12, 34, 56, 789_012_345);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":133114,"byte_end":133182,"line_start":721,"line_end":721,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(dt.year(), 2015);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":133187,"byte_end":133219,"line_start":722,"line_end":722,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(dt.weekday(), Weekday::Wed);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":133224,"byte_end":133267,"line_start":723,"line_end":723,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(dt.second(), 56);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":133272,"byte_end":133304,"line_start":724,"line_end":724,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(dt.nanosecond(), 789_012_345);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":133309,"byte_end":133354,"line_start":725,"line_end":725,"column_start":5,"column_end":50}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":133359,"byte_end":133367,"line_start":726,"line_end":726,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":133372,"byte_end":133381,"line_start":727,"line_end":727,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":134522,"byte_end":134538,"line_start":753,"line_end":753,"column_start":12,"column_end":28},"name":"and_hms_nano_opt","qualname":"<NaiveDate>::and_hms_nano_opt","value":"fn (&self, hour: u32, min: u32, sec: u32, nano: u32) -> Option<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from the current date, hour, minute, second and nanosecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` from the current date, hour, minute, second and nanosecond.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":133560,"byte_end":133651,"line_start":732,"line_end":732,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":133656,"byte_end":133659,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ The nanosecond part can exceed 1,000,000,000","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":133664,"byte_end":133712,"line_start":734,"line_end":734,"column_start":5,"column_end":53}},{"value":"/ in order to represent the [leap second](./struct.NaiveTime.html#leap-second-handling).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":133717,"byte_end":133807,"line_start":735,"line_end":735,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":133812,"byte_end":133815,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute, second and/or nanosecond.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":133820,"byte_end":133889,"line_start":737,"line_end":737,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":133894,"byte_end":133897,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":133902,"byte_end":133915,"line_start":739,"line_end":739,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":133920,"byte_end":133923,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":133928,"byte_end":133936,"line_start":741,"line_end":741,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":133941,"byte_end":133967,"line_start":742,"line_end":742,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":133972,"byte_end":133975,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 6, 3);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":133980,"byte_end":134024,"line_start":744,"line_end":744,"column_start":5,"column_end":49}},{"value":"/ assert!(d.and_hms_nano_opt(12, 34, 56,   789_012_345).is_some());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":134029,"byte_end":134098,"line_start":745,"line_end":745,"column_start":5,"column_end":74}},{"value":"/ assert!(d.and_hms_nano_opt(12, 34, 59, 1_789_012_345).is_some()); // leap second","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":134103,"byte_end":134187,"line_start":746,"line_end":746,"column_start":5,"column_end":89}},{"value":"/ assert!(d.and_hms_nano_opt(12, 34, 59, 2_789_012_345).is_none());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":134192,"byte_end":134261,"line_start":747,"line_end":747,"column_start":5,"column_end":74}},{"value":"/ assert!(d.and_hms_nano_opt(12, 34, 60,   789_012_345).is_none());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":134266,"byte_end":134335,"line_start":748,"line_end":748,"column_start":5,"column_end":74}},{"value":"/ assert!(d.and_hms_nano_opt(12, 60, 56,   789_012_345).is_none());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":134340,"byte_end":134409,"line_start":749,"line_end":749,"column_start":5,"column_end":74}},{"value":"/ assert!(d.and_hms_nano_opt(24, 34, 56,   789_012_345).is_none());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":134414,"byte_end":134483,"line_start":750,"line_end":750,"column_start":5,"column_end":74}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":134488,"byte_end":134496,"line_start":751,"line_end":751,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":134501,"byte_end":134510,"line_start":752,"line_end":752,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":136230,"byte_end":136234,"line_start":810,"line_end":810,"column_start":12,"column_end":16},"name":"succ","qualname":"<NaiveDate>::succ","value":"fn (&self) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` for the next calendar date.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` for the next calendar date.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":135698,"byte_end":135753,"line_start":796,"line_end":796,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":135758,"byte_end":135761,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ Panics when `self` is the last representable date.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":135766,"byte_end":135820,"line_start":798,"line_end":798,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":135825,"byte_end":135828,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":135833,"byte_end":135846,"line_start":800,"line_end":800,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":135851,"byte_end":135854,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":135859,"byte_end":135867,"line_start":802,"line_end":802,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":135872,"byte_end":135898,"line_start":803,"line_end":803,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":135903,"byte_end":135906,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015,  6,  3).succ(), NaiveDate::from_ymd(2015, 6, 4));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":135911,"byte_end":136001,"line_start":805,"line_end":805,"column_start":5,"column_end":95}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015,  6, 30).succ(), NaiveDate::from_ymd(2015, 7, 1));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":136006,"byte_end":136096,"line_start":806,"line_end":806,"column_start":5,"column_end":95}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 12, 31).succ(), NaiveDate::from_ymd(2016, 1, 1));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":136101,"byte_end":136191,"line_start":807,"line_end":807,"column_start":5,"column_end":95}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":136196,"byte_end":136204,"line_start":808,"line_end":808,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":136209,"byte_end":136218,"line_start":809,"line_end":809,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":136776,"byte_end":136784,"line_start":829,"line_end":829,"column_start":12,"column_end":20},"name":"succ_opt","qualname":"<NaiveDate>::succ_opt","value":"fn (&self) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` for the next calendar date.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` for the next calendar date.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":136315,"byte_end":136370,"line_start":814,"line_end":814,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":136375,"byte_end":136378,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when `self` is the last representable date.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":136383,"byte_end":136445,"line_start":816,"line_end":816,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":136450,"byte_end":136453,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":136458,"byte_end":136471,"line_start":818,"line_end":818,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":136476,"byte_end":136479,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":136484,"byte_end":136492,"line_start":820,"line_end":820,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":136497,"byte_end":136523,"line_start":821,"line_end":821,"column_start":5,"column_end":31}},{"value":"/ use chrono::naive::MAX_DATE;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":136528,"byte_end":136560,"line_start":822,"line_end":822,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":136565,"byte_end":136568,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 6, 3).succ_opt(),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":136573,"byte_end":136631,"line_start":824,"line_end":824,"column_start":5,"column_end":63}},{"value":"/            Some(NaiveDate::from_ymd(2015, 6, 4)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":136636,"byte_end":136690,"line_start":825,"line_end":825,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(MAX_DATE.succ_opt(), None);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":136695,"byte_end":136737,"line_start":826,"line_end":826,"column_start":5,"column_end":47}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":136742,"byte_end":136750,"line_start":827,"line_end":827,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":136755,"byte_end":136764,"line_start":828,"line_end":828,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":137461,"byte_end":137465,"line_start":847,"line_end":847,"column_start":12,"column_end":16},"name":"pred","qualname":"<NaiveDate>::pred","value":"fn (&self) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` for the previous calendar date.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` for the previous calendar date.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":136924,"byte_end":136983,"line_start":833,"line_end":833,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":136988,"byte_end":136991,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ Panics when `self` is the first representable date.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":136996,"byte_end":137051,"line_start":835,"line_end":835,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":137056,"byte_end":137059,"line_start":836,"line_end":836,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":137064,"byte_end":137077,"line_start":837,"line_end":837,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":137082,"byte_end":137085,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":137090,"byte_end":137098,"line_start":839,"line_end":839,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":137103,"byte_end":137129,"line_start":840,"line_end":840,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":137134,"byte_end":137137,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 6, 3).pred(), NaiveDate::from_ymd(2015,  6,  2));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":137142,"byte_end":137232,"line_start":842,"line_end":842,"column_start":5,"column_end":95}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 6, 1).pred(), NaiveDate::from_ymd(2015,  5, 31));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":137237,"byte_end":137327,"line_start":843,"line_end":843,"column_start":5,"column_end":95}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 1, 1).pred(), NaiveDate::from_ymd(2014, 12, 31));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":137332,"byte_end":137422,"line_start":844,"line_end":844,"column_start":5,"column_end":95}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":137427,"byte_end":137435,"line_start":845,"line_end":845,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":137440,"byte_end":137449,"line_start":846,"line_end":846,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":138012,"byte_end":138020,"line_start":866,"line_end":866,"column_start":12,"column_end":20},"name":"pred_opt","qualname":"<NaiveDate>::pred_opt","value":"fn (&self) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDate` for the previous calendar date.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDate` for the previous calendar date.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":137546,"byte_end":137605,"line_start":851,"line_end":851,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":137610,"byte_end":137613,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when `self` is the first representable date.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":137618,"byte_end":137681,"line_start":853,"line_end":853,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":137686,"byte_end":137689,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":137694,"byte_end":137707,"line_start":855,"line_end":855,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":137712,"byte_end":137715,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":137720,"byte_end":137728,"line_start":857,"line_end":857,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":137733,"byte_end":137759,"line_start":858,"line_end":858,"column_start":5,"column_end":31}},{"value":"/ use chrono::naive::MIN_DATE;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":137764,"byte_end":137796,"line_start":859,"line_end":859,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":137801,"byte_end":137804,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2015, 6, 3).pred_opt(),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":137809,"byte_end":137867,"line_start":861,"line_end":861,"column_start":5,"column_end":63}},{"value":"/            Some(NaiveDate::from_ymd(2015, 6, 2)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":137872,"byte_end":137926,"line_start":862,"line_end":862,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(MIN_DATE.pred_opt(), None);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":137931,"byte_end":137973,"line_start":863,"line_end":863,"column_start":5,"column_end":47}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":137978,"byte_end":137986,"line_start":864,"line_end":864,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":137991,"byte_end":138000,"line_start":865,"line_end":865,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":139032,"byte_end":139050,"line_start":891,"line_end":891,"column_start":12,"column_end":30},"name":"checked_add_signed","qualname":"<NaiveDate>::checked_add_signed","value":"fn (self, rhs: OldDuration) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Adds the `days` part of given `Duration` to the current date.","sig":null,"attributes":[{"value":"/ Adds the `days` part of given `Duration` to the current date.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":138162,"byte_end":138227,"line_start":870,"line_end":870,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":138232,"byte_end":138235,"line_start":871,"line_end":871,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when it will result in overflow.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":138240,"byte_end":138291,"line_start":872,"line_end":872,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":138296,"byte_end":138299,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":138304,"byte_end":138317,"line_start":874,"line_end":874,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":138322,"byte_end":138325,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":138330,"byte_end":138338,"line_start":876,"line_end":876,"column_start":5,"column_end":13}},{"value":"/ # extern crate chrono; fn main() {","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":138343,"byte_end":138381,"line_start":877,"line_end":877,"column_start":5,"column_end":43}},{"value":"/ use chrono::{Duration, NaiveDate};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":138386,"byte_end":138424,"line_start":878,"line_end":878,"column_start":5,"column_end":43}},{"value":"/ use chrono::naive::MAX_DATE;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":138429,"byte_end":138461,"line_start":879,"line_end":879,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":138466,"byte_end":138469,"line_start":880,"line_end":880,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 9, 5);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":138474,"byte_end":138518,"line_start":881,"line_end":881,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(d.checked_add_signed(Duration::days(40)),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":138523,"byte_end":138579,"line_start":882,"line_end":882,"column_start":5,"column_end":61}},{"value":"/            Some(NaiveDate::from_ymd(2015, 10, 15)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":138584,"byte_end":138640,"line_start":883,"line_end":883,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(d.checked_add_signed(Duration::days(-40)),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":138645,"byte_end":138702,"line_start":884,"line_end":884,"column_start":5,"column_end":62}},{"value":"/            Some(NaiveDate::from_ymd(2015, 7, 27)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":138707,"byte_end":138762,"line_start":885,"line_end":885,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(d.checked_add_signed(Duration::days(1_000_000_000)), None);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":138767,"byte_end":138841,"line_start":886,"line_end":886,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(d.checked_add_signed(Duration::days(-1_000_000_000)), None);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":138846,"byte_end":138921,"line_start":887,"line_end":887,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(MAX_DATE.checked_add_signed(Duration::days(1)), None);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":138926,"byte_end":138995,"line_start":888,"line_end":888,"column_start":5,"column_end":74}},{"value":"/ # }","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":139000,"byte_end":139007,"line_start":889,"line_end":889,"column_start":5,"column_end":12}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":139012,"byte_end":139020,"line_start":890,"line_end":890,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":140621,"byte_end":140639,"line_start":925,"line_end":925,"column_start":12,"column_end":30},"name":"checked_sub_signed","qualname":"<NaiveDate>::checked_sub_signed","value":"fn (self, rhs: OldDuration) -> Option<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Subtracts the `days` part of given `Duration` from the current date.","sig":null,"attributes":[{"value":"/ Subtracts the `days` part of given `Duration` from the current date.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":139744,"byte_end":139816,"line_start":904,"line_end":904,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":139821,"byte_end":139824,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when it will result in overflow.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":139829,"byte_end":139880,"line_start":906,"line_end":906,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":139885,"byte_end":139888,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":139893,"byte_end":139906,"line_start":908,"line_end":908,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":139911,"byte_end":139914,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":139919,"byte_end":139927,"line_start":910,"line_end":910,"column_start":5,"column_end":13}},{"value":"/ # extern crate chrono; fn main() {","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":139932,"byte_end":139970,"line_start":911,"line_end":911,"column_start":5,"column_end":43}},{"value":"/ use chrono::{Duration, NaiveDate};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":139975,"byte_end":140013,"line_start":912,"line_end":912,"column_start":5,"column_end":43}},{"value":"/ use chrono::naive::MIN_DATE;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":140018,"byte_end":140050,"line_start":913,"line_end":913,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":140055,"byte_end":140058,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 9, 5);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":140063,"byte_end":140107,"line_start":915,"line_end":915,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(d.checked_sub_signed(Duration::days(40)),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":140112,"byte_end":140168,"line_start":916,"line_end":916,"column_start":5,"column_end":61}},{"value":"/            Some(NaiveDate::from_ymd(2015, 7, 27)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":140173,"byte_end":140228,"line_start":917,"line_end":917,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(d.checked_sub_signed(Duration::days(-40)),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":140233,"byte_end":140290,"line_start":918,"line_end":918,"column_start":5,"column_end":62}},{"value":"/            Some(NaiveDate::from_ymd(2015, 10, 15)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":140295,"byte_end":140351,"line_start":919,"line_end":919,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(d.checked_sub_signed(Duration::days(1_000_000_000)), None);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":140356,"byte_end":140430,"line_start":920,"line_end":920,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(d.checked_sub_signed(Duration::days(-1_000_000_000)), None);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":140435,"byte_end":140510,"line_start":921,"line_end":921,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(MIN_DATE.checked_sub_signed(Duration::days(1)), None);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":140515,"byte_end":140584,"line_start":922,"line_end":922,"column_start":5,"column_end":74}},{"value":"/ # }","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":140589,"byte_end":140596,"line_start":923,"line_end":923,"column_start":5,"column_end":12}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":140601,"byte_end":140609,"line_start":924,"line_end":924,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":378},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":142503,"byte_end":142524,"line_start":962,"line_end":962,"column_start":12,"column_end":33},"name":"signed_duration_since","qualname":"<NaiveDate>::signed_duration_since","value":"fn (self, rhs: NaiveDate) -> OldDuration","parent":null,"children":[],"decl_id":null,"docs":" Subtracts another `NaiveDate` from the current date.\n Returns a `Duration` of integral numbers.","sig":null,"attributes":[{"value":"/ Subtracts another `NaiveDate` from the current date.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":141333,"byte_end":141389,"line_start":938,"line_end":938,"column_start":5,"column_end":61}},{"value":"/ Returns a `Duration` of integral numbers.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":141394,"byte_end":141439,"line_start":939,"line_end":939,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":141444,"byte_end":141447,"line_start":940,"line_end":940,"column_start":5,"column_end":8}},{"value":"/ This does not overflow or underflow at all,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":141452,"byte_end":141499,"line_start":941,"line_end":941,"column_start":5,"column_end":52}},{"value":"/ as all possible output fits in the range of `Duration`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":141504,"byte_end":141563,"line_start":942,"line_end":942,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":141568,"byte_end":141571,"line_start":943,"line_end":943,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":141576,"byte_end":141589,"line_start":944,"line_end":944,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":141594,"byte_end":141597,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":141602,"byte_end":141610,"line_start":946,"line_end":946,"column_start":5,"column_end":13}},{"value":"/ # extern crate chrono; fn main() {","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":141615,"byte_end":141653,"line_start":947,"line_end":947,"column_start":5,"column_end":43}},{"value":"/ use chrono::{Duration, NaiveDate};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":141658,"byte_end":141696,"line_start":948,"line_end":948,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":141701,"byte_end":141704,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":141709,"byte_end":141748,"line_start":950,"line_end":950,"column_start":5,"column_end":44}},{"value":"/ let since = NaiveDate::signed_duration_since;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":141753,"byte_end":141802,"line_start":951,"line_end":951,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":141807,"byte_end":141810,"line_start":952,"line_end":952,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2014, 1, 1)), Duration::zero());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":141815,"byte_end":141899,"line_start":953,"line_end":953,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2013, 12, 31)), Duration::days(1));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":141904,"byte_end":141991,"line_start":954,"line_end":954,"column_start":5,"column_end":92}},{"value":"/ assert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2014, 1, 2)), Duration::days(-1));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":141996,"byte_end":142082,"line_start":955,"line_end":955,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2013, 9, 23)), Duration::days(100));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":142087,"byte_end":142175,"line_start":956,"line_end":956,"column_start":5,"column_end":93}},{"value":"/ assert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2013, 1, 1)), Duration::days(365));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":142180,"byte_end":142267,"line_start":957,"line_end":957,"column_start":5,"column_end":92}},{"value":"/ assert_eq!(since(from_ymd(2014, 1, 1), from_ymd(2010, 1, 1)), Duration::days(365*4 + 1));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":142272,"byte_end":142365,"line_start":958,"line_end":958,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(since(from_ymd(2014, 1, 1), from_ymd(1614, 1, 1)), Duration::days(365*400 + 97));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":142370,"byte_end":142466,"line_start":959,"line_end":959,"column_start":5,"column_end":101}},{"value":"/ # }","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":142471,"byte_end":142478,"line_start":960,"line_end":960,"column_start":5,"column_end":12}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":142483,"byte_end":142491,"line_start":961,"line_end":961,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":144284,"byte_end":144301,"line_start":1003,"line_end":1003,"column_start":12,"column_end":29},"name":"format_with_items","qualname":"<NaiveDate>::format_with_items","value":"fn <'a, I, B> (&self, items: I) -> DelayedFormat<I>","parent":null,"children":[],"decl_id":null,"docs":" Formats the date with the specified formatting items.\n Otherwise it is the same as the ordinary `format` method.","sig":null,"attributes":[{"value":"/ Formats the date with the specified formatting items.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":143115,"byte_end":143172,"line_start":974,"line_end":974,"column_start":5,"column_end":62}},{"value":"/ Otherwise it is the same as the ordinary `format` method.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":143177,"byte_end":143238,"line_start":975,"line_end":975,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":143243,"byte_end":143246,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ The `Iterator` of items should be `Clone`able,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":143251,"byte_end":143301,"line_start":977,"line_end":977,"column_start":5,"column_end":55}},{"value":"/ since the resulting `DelayedFormat` value may be formatted multiple times.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":143306,"byte_end":143384,"line_start":978,"line_end":978,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":143389,"byte_end":143392,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":143397,"byte_end":143410,"line_start":980,"line_end":980,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":143415,"byte_end":143418,"line_start":981,"line_end":981,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":143423,"byte_end":143431,"line_start":982,"line_end":982,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":143436,"byte_end":143462,"line_start":983,"line_end":983,"column_start":5,"column_end":31}},{"value":"/ use chrono::format::strftime::StrftimeItems;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":143467,"byte_end":143515,"line_start":984,"line_end":984,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":143520,"byte_end":143523,"line_start":985,"line_end":985,"column_start":5,"column_end":8}},{"value":"/ let fmt = StrftimeItems::new(\"%Y-%m-%d\");","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":143528,"byte_end":143573,"line_start":986,"line_end":986,"column_start":5,"column_end":50}},{"value":"/ let d = NaiveDate::from_ymd(2015, 9, 5);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":143578,"byte_end":143622,"line_start":987,"line_end":987,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(d.format_with_items(fmt.clone()).to_string(), \"2015-09-05\");","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":143627,"byte_end":143702,"line_start":988,"line_end":988,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(d.format(\"%Y-%m-%d\").to_string(),             \"2015-09-05\");","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":143707,"byte_end":143782,"line_start":989,"line_end":989,"column_start":5,"column_end":80}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":143787,"byte_end":143795,"line_start":990,"line_end":990,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":143800,"byte_end":143803,"line_start":991,"line_end":991,"column_start":5,"column_end":8}},{"value":"/ The resulting `DelayedFormat` can be formatted directly via the `Display` trait.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":143808,"byte_end":143892,"line_start":992,"line_end":992,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":143897,"byte_end":143900,"line_start":993,"line_end":993,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":143905,"byte_end":143913,"line_start":994,"line_end":994,"column_start":5,"column_end":13}},{"value":"/ # use chrono::NaiveDate;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":143918,"byte_end":143946,"line_start":995,"line_end":995,"column_start":5,"column_end":33}},{"value":"/ # use chrono::format::strftime::StrftimeItems;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":143951,"byte_end":144001,"line_start":996,"line_end":996,"column_start":5,"column_end":55}},{"value":"/ # let fmt = StrftimeItems::new(\"%Y-%m-%d\").clone();","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":144006,"byte_end":144061,"line_start":997,"line_end":997,"column_start":5,"column_end":60}},{"value":"/ # let d = NaiveDate::from_ymd(2015, 9, 5);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":144066,"byte_end":144112,"line_start":998,"line_end":998,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(format!(\"{}\", d.format_with_items(fmt)), \"2015-09-05\");","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":144117,"byte_end":144187,"line_start":999,"line_end":999,"column_start":5,"column_end":75}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":144192,"byte_end":144200,"line_start":1000,"line_end":1000,"column_start":5,"column_end":13}},{"value":"cfg(any(feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":144205,"byte_end":144258,"line_start":1001,"line_end":1001,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":144263,"byte_end":144272,"line_start":1002,"line_end":1002,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":145989,"byte_end":145995,"line_start":1045,"line_end":1045,"column_start":12,"column_end":18},"name":"format","qualname":"<NaiveDate>::format","value":"fn <'a> (&self, fmt: &'a str) -> DelayedFormat<StrftimeItems<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Formats the date with the specified format string.\n See the [`format::strftime` module](../format/strftime/index.html)\n on the supported escape sequences.","sig":null,"attributes":[{"value":"/ Formats the date with the specified format string.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":144497,"byte_end":144551,"line_start":1011,"line_end":1011,"column_start":5,"column_end":59}},{"value":"/ See the [`format::strftime` module](../format/strftime/index.html)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":144556,"byte_end":144626,"line_start":1012,"line_end":1012,"column_start":5,"column_end":75}},{"value":"/ on the supported escape sequences.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":144631,"byte_end":144669,"line_start":1013,"line_end":1013,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":144674,"byte_end":144677,"line_start":1014,"line_end":1014,"column_start":5,"column_end":8}},{"value":"/ This returns a `DelayedFormat`,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":144682,"byte_end":144717,"line_start":1015,"line_end":1015,"column_start":5,"column_end":40}},{"value":"/ which gets converted to a string only when actual formatting happens.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":144722,"byte_end":144795,"line_start":1016,"line_end":1016,"column_start":5,"column_end":78}},{"value":"/ You may use the `to_string` method to get a `String`,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":144800,"byte_end":144857,"line_start":1017,"line_end":1017,"column_start":5,"column_end":62}},{"value":"/ or just feed it into `print!` and other formatting macros.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":144862,"byte_end":144924,"line_start":1018,"line_end":1018,"column_start":5,"column_end":67}},{"value":"/ (In this way it avoids the redundant memory allocation.)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":144929,"byte_end":144989,"line_start":1019,"line_end":1019,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":144994,"byte_end":144997,"line_start":1020,"line_end":1020,"column_start":5,"column_end":8}},{"value":"/ A wrong format string does *not* issue an error immediately.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":145002,"byte_end":145066,"line_start":1021,"line_end":1021,"column_start":5,"column_end":69}},{"value":"/ Rather, converting or formatting the `DelayedFormat` fails.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":145071,"byte_end":145134,"line_start":1022,"line_end":1022,"column_start":5,"column_end":68}},{"value":"/ You are recommended to immediately use `DelayedFormat` for this reason.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":145139,"byte_end":145214,"line_start":1023,"line_end":1023,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":145219,"byte_end":145222,"line_start":1024,"line_end":1024,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":145227,"byte_end":145240,"line_start":1025,"line_end":1025,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":145245,"byte_end":145248,"line_start":1026,"line_end":1026,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":145253,"byte_end":145261,"line_start":1027,"line_end":1027,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":145266,"byte_end":145292,"line_start":1028,"line_end":1028,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":145297,"byte_end":145300,"line_start":1029,"line_end":1029,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 9, 5);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":145305,"byte_end":145349,"line_start":1030,"line_end":1030,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(d.format(\"%Y-%m-%d\").to_string(), \"2015-09-05\");","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":145354,"byte_end":145417,"line_start":1031,"line_end":1031,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(d.format(\"%A, %-d %B, %C%y\").to_string(), \"Saturday, 5 September, 2015\");","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":145422,"byte_end":145510,"line_start":1032,"line_end":1032,"column_start":5,"column_end":93}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":145515,"byte_end":145523,"line_start":1033,"line_end":1033,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":145528,"byte_end":145531,"line_start":1034,"line_end":1034,"column_start":5,"column_end":8}},{"value":"/ The resulting `DelayedFormat` can be formatted directly via the `Display` trait.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":145536,"byte_end":145620,"line_start":1035,"line_end":1035,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":145625,"byte_end":145628,"line_start":1036,"line_end":1036,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":145633,"byte_end":145641,"line_start":1037,"line_end":1037,"column_start":5,"column_end":13}},{"value":"/ # use chrono::NaiveDate;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":145646,"byte_end":145674,"line_start":1038,"line_end":1038,"column_start":5,"column_end":33}},{"value":"/ # let d = NaiveDate::from_ymd(2015, 9, 5);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":145679,"byte_end":145725,"line_start":1039,"line_end":1039,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(format!(\"{}\", d.format(\"%Y-%m-%d\")), \"2015-09-05\");","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":145730,"byte_end":145796,"line_start":1040,"line_end":1040,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(format!(\"{}\", d.format(\"%A, %-d %B, %C%y\")), \"Saturday, 5 September, 2015\");","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":145801,"byte_end":145892,"line_start":1041,"line_end":1041,"column_start":5,"column_end":96}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":145897,"byte_end":145905,"line_start":1042,"line_end":1042,"column_start":5,"column_end":13}},{"value":"cfg(any(feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":145910,"byte_end":145963,"line_start":1043,"line_end":1043,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":145968,"byte_end":145977,"line_start":1044,"line_end":1044,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":146777,"byte_end":146786,"line_start":1071,"line_end":1071,"column_start":12,"column_end":21},"name":"iter_days","qualname":"<NaiveDate>::iter_days","value":"fn (&self) -> NaiveDateDaysIterator","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that steps by days until the last representable date.","sig":null,"attributes":[{"value":"/ Returns an iterator that steps by days until the last representable date.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":146126,"byte_end":146203,"line_start":1049,"line_end":1049,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":146208,"byte_end":146211,"line_start":1050,"line_end":1050,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":146216,"byte_end":146229,"line_start":1051,"line_end":1051,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":146234,"byte_end":146237,"line_start":1052,"line_end":1052,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":146242,"byte_end":146249,"line_start":1053,"line_end":1053,"column_start":5,"column_end":12}},{"value":"/ # use chrono::NaiveDate;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":146254,"byte_end":146282,"line_start":1054,"line_end":1054,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":146287,"byte_end":146290,"line_start":1055,"line_end":1055,"column_start":5,"column_end":8}},{"value":"/ let expected = [","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":146295,"byte_end":146315,"line_start":1056,"line_end":1056,"column_start":5,"column_end":25}},{"value":"/     NaiveDate::from_ymd(2016, 2, 27),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":146320,"byte_end":146361,"line_start":1057,"line_end":1057,"column_start":5,"column_end":46}},{"value":"/     NaiveDate::from_ymd(2016, 2, 28),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":146366,"byte_end":146407,"line_start":1058,"line_end":1058,"column_start":5,"column_end":46}},{"value":"/     NaiveDate::from_ymd(2016, 2, 29),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":146412,"byte_end":146453,"line_start":1059,"line_end":1059,"column_start":5,"column_end":46}},{"value":"/     NaiveDate::from_ymd(2016, 3, 1),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":146458,"byte_end":146498,"line_start":1060,"line_end":1060,"column_start":5,"column_end":45}},{"value":"/ ];","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":146503,"byte_end":146509,"line_start":1061,"line_end":1061,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":146514,"byte_end":146517,"line_start":1062,"line_end":1062,"column_start":5,"column_end":8}},{"value":"/ let mut count = 0;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":146522,"byte_end":146544,"line_start":1063,"line_end":1063,"column_start":5,"column_end":27}},{"value":"/ for (idx, d) in NaiveDate::from_ymd(2016, 2, 27).iter_days().take(4).enumerate() {","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":146549,"byte_end":146635,"line_start":1064,"line_end":1064,"column_start":5,"column_end":91}},{"value":"/    assert_eq!(d, expected[idx]);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":146640,"byte_end":146676,"line_start":1065,"line_end":1065,"column_start":5,"column_end":41}},{"value":"/    count += 1;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":146681,"byte_end":146699,"line_start":1066,"line_end":1066,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":146704,"byte_end":146709,"line_start":1067,"line_end":1067,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(count, 4);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":146714,"byte_end":146739,"line_start":1068,"line_end":1068,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":146744,"byte_end":146751,"line_start":1069,"line_end":1069,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":146756,"byte_end":146765,"line_start":1070,"line_end":1070,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":147532,"byte_end":147542,"line_start":1097,"line_end":1097,"column_start":12,"column_end":22},"name":"iter_weeks","qualname":"<NaiveDate>::iter_weeks","value":"fn (&self) -> NaiveDateWeeksIterator","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that steps by weeks until the last representable date.","sig":null,"attributes":[{"value":"/ Returns an iterator that steps by weeks until the last representable date.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":146879,"byte_end":146957,"line_start":1075,"line_end":1075,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":146962,"byte_end":146965,"line_start":1076,"line_end":1076,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":146970,"byte_end":146983,"line_start":1077,"line_end":1077,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":146988,"byte_end":146991,"line_start":1078,"line_end":1078,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":146996,"byte_end":147003,"line_start":1079,"line_end":1079,"column_start":5,"column_end":12}},{"value":"/ # use chrono::NaiveDate;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":147008,"byte_end":147036,"line_start":1080,"line_end":1080,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":147041,"byte_end":147044,"line_start":1081,"line_end":1081,"column_start":5,"column_end":8}},{"value":"/ let expected = [","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":147049,"byte_end":147069,"line_start":1082,"line_end":1082,"column_start":5,"column_end":25}},{"value":"/     NaiveDate::from_ymd(2016, 2, 27),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":147074,"byte_end":147115,"line_start":1083,"line_end":1083,"column_start":5,"column_end":46}},{"value":"/     NaiveDate::from_ymd(2016, 3, 5),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":147120,"byte_end":147160,"line_start":1084,"line_end":1084,"column_start":5,"column_end":45}},{"value":"/     NaiveDate::from_ymd(2016, 3, 12),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":147165,"byte_end":147206,"line_start":1085,"line_end":1085,"column_start":5,"column_end":46}},{"value":"/     NaiveDate::from_ymd(2016, 3, 19),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":147211,"byte_end":147252,"line_start":1086,"line_end":1086,"column_start":5,"column_end":46}},{"value":"/ ];","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":147257,"byte_end":147263,"line_start":1087,"line_end":1087,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":147268,"byte_end":147271,"line_start":1088,"line_end":1088,"column_start":5,"column_end":8}},{"value":"/ let mut count = 0;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":147276,"byte_end":147298,"line_start":1089,"line_end":1089,"column_start":5,"column_end":27}},{"value":"/ for (idx, d) in NaiveDate::from_ymd(2016, 2, 27).iter_weeks().take(4).enumerate() {","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":147303,"byte_end":147390,"line_start":1090,"line_end":1090,"column_start":5,"column_end":92}},{"value":"/    assert_eq!(d, expected[idx]);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":147395,"byte_end":147431,"line_start":1091,"line_end":1091,"column_start":5,"column_end":41}},{"value":"/    count += 1;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":147436,"byte_end":147454,"line_start":1092,"line_end":1092,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":147459,"byte_end":147464,"line_start":1093,"line_end":1093,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(count, 4);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":147469,"byte_end":147494,"line_start":1094,"line_end":1094,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":147499,"byte_end":147506,"line_start":1095,"line_end":1095,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":147511,"byte_end":147520,"line_start":1096,"line_end":1096,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1605},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":163341,"byte_end":163362,"line_start":1562,"line_end":1562,"column_start":12,"column_end":33},"name":"NaiveDateDaysIterator","qualname":"::naive::date::NaiveDateDaysIterator","value":"NaiveDateDaysIterator {  }","parent":null,"children":[{"krate":0,"index":1606}],"decl_id":null,"docs":" Iterator over `NaiveDate` with a step size of one day.\n","sig":null,"attributes":[{"value":"/ Iterator over `NaiveDate` with a step size of one day.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":163203,"byte_end":163261,"line_start":1560,"line_end":1560,"column_start":1,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":1630},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":164111,"byte_end":164133,"line_start":1589,"line_end":1589,"column_start":12,"column_end":34},"name":"NaiveDateWeeksIterator","qualname":"::naive::date::NaiveDateWeeksIterator","value":"NaiveDateWeeksIterator {  }","parent":null,"children":[{"krate":0,"index":1631}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":476},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":197841,"byte_end":197853,"line_start":32,"line_end":32,"column_start":11,"column_end":23},"name":"MIN_DATETIME","qualname":"::naive::datetime::MIN_DATETIME","value":"NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" The minimum possible `NaiveDateTime`.\n","sig":null,"attributes":[{"value":"/ The minimum possible `NaiveDateTime`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":197789,"byte_end":197830,"line_start":31,"line_end":31,"column_start":1,"column_end":42}}]},{"kind":"Const","id":{"krate":0,"index":477},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":197973,"byte_end":197985,"line_start":34,"line_end":34,"column_start":11,"column_end":23},"name":"MAX_DATETIME","qualname":"::naive::datetime::MAX_DATETIME","value":"NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" The maximum possible `NaiveDateTime`.\n","sig":null,"attributes":[{"value":"/ The maximum possible `NaiveDateTime`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":197921,"byte_end":197962,"line_start":33,"line_end":33,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":1655},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":198918,"byte_end":198931,"line_start":62,"line_end":62,"column_start":12,"column_end":25},"name":"NaiveDateTime","qualname":"::naive::datetime::NaiveDateTime","value":"NaiveDateTime {  }","parent":null,"children":[{"krate":0,"index":1656},{"krate":0,"index":1657}],"decl_id":null,"docs":" ISO 8601 combined date and time without timezone.","sig":null,"attributes":[{"value":"/ ISO 8601 combined date and time without timezone.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":198054,"byte_end":198107,"line_start":36,"line_end":36,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":198108,"byte_end":198111,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":198112,"byte_end":198125,"line_start":38,"line_end":38,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":198126,"byte_end":198129,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ `NaiveDateTime` is commonly created from [`NaiveDate`](./struct.NaiveDate.html).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":198130,"byte_end":198214,"line_start":40,"line_end":40,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":198215,"byte_end":198218,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":198219,"byte_end":198227,"line_start":42,"line_end":42,"column_start":1,"column_end":9}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":198228,"byte_end":198271,"line_start":43,"line_end":43,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":198272,"byte_end":198275,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ let dt: NaiveDateTime = NaiveDate::from_ymd(2016, 7, 8).and_hms(9, 10, 11);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":198276,"byte_end":198355,"line_start":45,"line_end":45,"column_start":1,"column_end":80}},{"value":"/ # let _ = dt;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":198356,"byte_end":198373,"line_start":46,"line_end":46,"column_start":1,"column_end":18}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":198374,"byte_end":198382,"line_start":47,"line_end":47,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":198383,"byte_end":198386,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ You can use typical [date-like](../trait.Datelike.html) and","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":198387,"byte_end":198450,"line_start":49,"line_end":49,"column_start":1,"column_end":64}},{"value":"/ [time-like](../trait.Timelike.html) methods,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":198451,"byte_end":198499,"line_start":50,"line_end":50,"column_start":1,"column_end":49}},{"value":"/ provided that relevant traits are in the scope.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":198500,"byte_end":198551,"line_start":51,"line_end":51,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":198552,"byte_end":198555,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":198556,"byte_end":198564,"line_start":53,"line_end":53,"column_start":1,"column_end":9}},{"value":"/ # use chrono::{NaiveDate, NaiveDateTime};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":198565,"byte_end":198610,"line_start":54,"line_end":54,"column_start":1,"column_end":46}},{"value":"/ # let dt: NaiveDateTime = NaiveDate::from_ymd(2016, 7, 8).and_hms(9, 10, 11);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":198611,"byte_end":198692,"line_start":55,"line_end":55,"column_start":1,"column_end":82}},{"value":"/ use chrono::{Datelike, Timelike, Weekday};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":198693,"byte_end":198739,"line_start":56,"line_end":56,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":198740,"byte_end":198743,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(dt.weekday(), Weekday::Fri);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":198744,"byte_end":198787,"line_start":58,"line_end":58,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(dt.num_seconds_from_midnight(), 33011);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":198788,"byte_end":198842,"line_start":59,"line_end":59,"column_start":1,"column_end":55}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":198843,"byte_end":198851,"line_start":60,"line_end":60,"column_start":1,"column_end":9}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":199593,"byte_end":199596,"line_start":85,"line_end":85,"column_start":12,"column_end":15},"name":"new","qualname":"<NaiveDateTime>::new","value":"fn (date: NaiveDate, time: NaiveTime) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` from date and time components.\n Equivalent to [`date.and_time(time)`](./struct.NaiveDate.html#method.and_time)\n and many other helper constructors on `NaiveDate`.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` from date and time components.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":199004,"byte_end":199066,"line_start":68,"line_end":68,"column_start":5,"column_end":67}},{"value":"/ Equivalent to [`date.and_time(time)`](./struct.NaiveDate.html#method.and_time)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":199071,"byte_end":199153,"line_start":69,"line_end":69,"column_start":5,"column_end":87}},{"value":"/ and many other helper constructors on `NaiveDate`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":199158,"byte_end":199212,"line_start":70,"line_end":70,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":199217,"byte_end":199220,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":199225,"byte_end":199238,"line_start":72,"line_end":72,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":199243,"byte_end":199246,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":199251,"byte_end":199259,"line_start":74,"line_end":74,"column_start":5,"column_end":13}},{"value":"/ use chrono::{NaiveDate, NaiveTime, NaiveDateTime};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":199264,"byte_end":199318,"line_start":75,"line_end":75,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":199323,"byte_end":199326,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_ymd(2015, 6, 3);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":199331,"byte_end":199375,"line_start":77,"line_end":77,"column_start":5,"column_end":49}},{"value":"/ let t = NaiveTime::from_hms_milli(12, 34, 56, 789);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":199380,"byte_end":199435,"line_start":78,"line_end":78,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":199440,"byte_end":199443,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDateTime::new(d, t);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":199448,"byte_end":199486,"line_start":80,"line_end":80,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(dt.date(), d);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":199491,"byte_end":199520,"line_start":81,"line_end":81,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(dt.time(), t);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":199525,"byte_end":199554,"line_start":82,"line_end":82,"column_start":5,"column_end":34}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":199559,"byte_end":199567,"line_start":83,"line_end":83,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":199572,"byte_end":199581,"line_start":84,"line_end":84,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":480},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":200879,"byte_end":200893,"line_start":115,"line_end":115,"column_start":12,"column_end":26},"name":"from_timestamp","qualname":"<NaiveDateTime>::from_timestamp","value":"fn (secs: i64, nsecs: u32) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` corresponding to a UTC date and time,\n from the number of non-leap seconds\n since the midnight UTC on January 1, 1970 (aka \"UNIX timestamp\")\n and the number of nanoseconds since the last whole non-leap second.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` corresponding to a UTC date and time,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":199710,"byte_end":199779,"line_start":89,"line_end":89,"column_start":5,"column_end":74}},{"value":"/ from the number of non-leap seconds","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":199784,"byte_end":199823,"line_start":90,"line_end":90,"column_start":5,"column_end":44}},{"value":"/ since the midnight UTC on January 1, 1970 (aka \"UNIX timestamp\")","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":199828,"byte_end":199896,"line_start":91,"line_end":91,"column_start":5,"column_end":73}},{"value":"/ and the number of nanoseconds since the last whole non-leap second.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":199901,"byte_end":199972,"line_start":92,"line_end":92,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":199977,"byte_end":199980,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ For a non-naive version of this function see","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":199985,"byte_end":200033,"line_start":94,"line_end":94,"column_start":5,"column_end":53}},{"value":"/ [`TimeZone::timestamp`](../offset/trait.TimeZone.html#method.timestamp).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":200038,"byte_end":200114,"line_start":95,"line_end":95,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":200119,"byte_end":200122,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ The nanosecond part can exceed 1,000,000,000 in order to represent the","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":200127,"byte_end":200201,"line_start":97,"line_end":97,"column_start":5,"column_end":79}},{"value":"/ [leap second](./struct.NaiveTime.html#leap-second-handling). (The true \"UNIX","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":200206,"byte_end":200286,"line_start":98,"line_end":98,"column_start":5,"column_end":85}},{"value":"/ timestamp\" cannot represent a leap second unambiguously.)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":200291,"byte_end":200352,"line_start":99,"line_end":99,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":200357,"byte_end":200360,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ Panics on the out-of-range number of seconds and/or invalid nanosecond.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":200365,"byte_end":200440,"line_start":101,"line_end":101,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":200445,"byte_end":200448,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":200453,"byte_end":200466,"line_start":103,"line_end":103,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":200471,"byte_end":200474,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":200479,"byte_end":200487,"line_start":105,"line_end":105,"column_start":5,"column_end":13}},{"value":"/ use chrono::{NaiveDateTime, NaiveDate};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":200492,"byte_end":200535,"line_start":106,"line_end":106,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":200540,"byte_end":200543,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDateTime::from_timestamp(0, 42_000_000);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":200548,"byte_end":200606,"line_start":108,"line_end":108,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(dt, NaiveDate::from_ymd(1970, 1, 1).and_hms_milli(0, 0, 0, 42));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":200611,"byte_end":200690,"line_start":109,"line_end":109,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":200695,"byte_end":200698,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDateTime::from_timestamp(1_000_000_000, 0);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":200703,"byte_end":200764,"line_start":111,"line_end":111,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(dt, NaiveDate::from_ymd(2001, 9, 9).and_hms(1, 46, 40));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":200769,"byte_end":200840,"line_start":112,"line_end":112,"column_start":5,"column_end":76}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":200845,"byte_end":200853,"line_start":113,"line_end":113,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":200858,"byte_end":200867,"line_start":114,"line_end":114,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":202235,"byte_end":202253,"line_start":146,"line_end":146,"column_start":12,"column_end":30},"name":"from_timestamp_opt","qualname":"<NaiveDateTime>::from_timestamp_opt","value":"fn (secs: i64, nsecs: u32) -> Option<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveDateTime` corresponding to a UTC date and time,\n from the number of non-leap seconds\n since the midnight UTC on January 1, 1970 (aka \"UNIX timestamp\")\n and the number of nanoseconds since the last whole non-leap second.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveDateTime` corresponding to a UTC date and time,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":201078,"byte_end":201147,"line_start":120,"line_end":120,"column_start":5,"column_end":74}},{"value":"/ from the number of non-leap seconds","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":201152,"byte_end":201191,"line_start":121,"line_end":121,"column_start":5,"column_end":44}},{"value":"/ since the midnight UTC on January 1, 1970 (aka \"UNIX timestamp\")","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":201196,"byte_end":201264,"line_start":122,"line_end":122,"column_start":5,"column_end":73}},{"value":"/ and the number of nanoseconds since the last whole non-leap second.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":201269,"byte_end":201340,"line_start":123,"line_end":123,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":201345,"byte_end":201348,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ The nanosecond part can exceed 1,000,000,000","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":201353,"byte_end":201401,"line_start":125,"line_end":125,"column_start":5,"column_end":53}},{"value":"/ in order to represent the [leap second](./struct.NaiveTime.html#leap-second-handling).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":201406,"byte_end":201496,"line_start":126,"line_end":126,"column_start":5,"column_end":95}},{"value":"/ (The true \"UNIX timestamp\" cannot represent a leap second unambiguously.)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":201501,"byte_end":201578,"line_start":127,"line_end":127,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":201583,"byte_end":201586,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on the out-of-range number of seconds and/or invalid nanosecond.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":201591,"byte_end":201674,"line_start":129,"line_end":129,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":201679,"byte_end":201682,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":201687,"byte_end":201700,"line_start":131,"line_end":131,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":201705,"byte_end":201708,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":201713,"byte_end":201721,"line_start":133,"line_end":133,"column_start":5,"column_end":13}},{"value":"/ use chrono::{NaiveDateTime, NaiveDate};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":201726,"byte_end":201769,"line_start":134,"line_end":134,"column_start":5,"column_end":48}},{"value":"/ use std::i64;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":201774,"byte_end":201791,"line_start":135,"line_end":135,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":201796,"byte_end":201799,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ let from_timestamp_opt = NaiveDateTime::from_timestamp_opt;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":201804,"byte_end":201867,"line_start":137,"line_end":137,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":201872,"byte_end":201875,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ assert!(from_timestamp_opt(0, 0).is_some());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":201880,"byte_end":201928,"line_start":139,"line_end":139,"column_start":5,"column_end":53}},{"value":"/ assert!(from_timestamp_opt(0, 999_999_999).is_some());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":201933,"byte_end":201991,"line_start":140,"line_end":140,"column_start":5,"column_end":63}},{"value":"/ assert!(from_timestamp_opt(0, 1_500_000_000).is_some()); // leap second","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":201996,"byte_end":202071,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ assert!(from_timestamp_opt(0, 2_000_000_000).is_none());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":202076,"byte_end":202136,"line_start":142,"line_end":142,"column_start":5,"column_end":65}},{"value":"/ assert!(from_timestamp_opt(i64::MAX, 0).is_none());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":202141,"byte_end":202196,"line_start":143,"line_end":143,"column_start":5,"column_end":60}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":202201,"byte_end":202209,"line_start":144,"line_end":144,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":202214,"byte_end":202223,"line_start":145,"line_end":145,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":483},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":205638,"byte_end":205652,"line_start":220,"line_end":220,"column_start":12,"column_end":26},"name":"parse_from_str","qualname":"<NaiveDateTime>::parse_from_str","value":"fn (s: &str, fmt: &str) -> ParseResult<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Parses a string with the specified format string and returns a new `NaiveDateTime`.\n See the [`format::strftime` module](../format/strftime/index.html)\n on the supported escape sequences.","sig":null,"attributes":[{"value":"/ Parses a string with the specified format string and returns a new `NaiveDateTime`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":202775,"byte_end":202862,"line_start":159,"line_end":159,"column_start":5,"column_end":92}},{"value":"/ See the [`format::strftime` module](../format/strftime/index.html)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":202867,"byte_end":202937,"line_start":160,"line_end":160,"column_start":5,"column_end":75}},{"value":"/ on the supported escape sequences.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":202942,"byte_end":202980,"line_start":161,"line_end":161,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":202985,"byte_end":202988,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":202993,"byte_end":203006,"line_start":163,"line_end":163,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":203011,"byte_end":203014,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":203019,"byte_end":203027,"line_start":165,"line_end":165,"column_start":5,"column_end":13}},{"value":"/ use chrono::{NaiveDateTime, NaiveDate};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":203032,"byte_end":203075,"line_start":166,"line_end":166,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":203080,"byte_end":203083,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ let parse_from_str = NaiveDateTime::parse_from_str;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":203088,"byte_end":203143,"line_start":168,"line_end":168,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":203148,"byte_end":203151,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(parse_from_str(\"2015-09-05 23:56:04\", \"%Y-%m-%d %H:%M:%S\"),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":203156,"byte_end":203230,"line_start":170,"line_end":170,"column_start":5,"column_end":79}},{"value":"/            Ok(NaiveDate::from_ymd(2015, 9, 5).and_hms(23, 56, 4)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":203235,"byte_end":203306,"line_start":171,"line_end":171,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(parse_from_str(\"5sep2015pm012345.6789\", \"%d%b%Y%p%I%M%S%.f\"),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":203311,"byte_end":203387,"line_start":172,"line_end":172,"column_start":5,"column_end":81}},{"value":"/            Ok(NaiveDate::from_ymd(2015, 9, 5).and_hms_micro(13, 23, 45, 678_900)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":203392,"byte_end":203479,"line_start":173,"line_end":173,"column_start":5,"column_end":92}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":203484,"byte_end":203492,"line_start":174,"line_end":174,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":203497,"byte_end":203500,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ Offset is ignored for the purpose of parsing.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":203505,"byte_end":203554,"line_start":176,"line_end":176,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":203559,"byte_end":203562,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":203567,"byte_end":203575,"line_start":178,"line_end":178,"column_start":5,"column_end":13}},{"value":"/ # use chrono::{NaiveDateTime, NaiveDate};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":203580,"byte_end":203625,"line_start":179,"line_end":179,"column_start":5,"column_end":50}},{"value":"/ # let parse_from_str = NaiveDateTime::parse_from_str;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":203630,"byte_end":203687,"line_start":180,"line_end":180,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(parse_from_str(\"2014-5-17T12:34:56+09:30\", \"%Y-%m-%dT%H:%M:%S%z\"),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":203692,"byte_end":203773,"line_start":181,"line_end":181,"column_start":5,"column_end":86}},{"value":"/            Ok(NaiveDate::from_ymd(2014, 5, 17).and_hms(12, 34, 56)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":203778,"byte_end":203851,"line_start":182,"line_end":182,"column_start":5,"column_end":78}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":203856,"byte_end":203864,"line_start":183,"line_end":183,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":203869,"byte_end":203872,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ [Leap seconds](./struct.NaiveTime.html#leap-second-handling) are correctly handled by","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":203877,"byte_end":203966,"line_start":185,"line_end":185,"column_start":5,"column_end":94}},{"value":"/ treating any time of the form `hh:mm:60` as a leap second.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":203971,"byte_end":204033,"line_start":186,"line_end":186,"column_start":5,"column_end":67}},{"value":"/ (This equally applies to the formatting, so the round trip is possible.)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":204038,"byte_end":204114,"line_start":187,"line_end":187,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":204119,"byte_end":204122,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":204127,"byte_end":204135,"line_start":189,"line_end":189,"column_start":5,"column_end":13}},{"value":"/ # use chrono::{NaiveDateTime, NaiveDate};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":204140,"byte_end":204185,"line_start":190,"line_end":190,"column_start":5,"column_end":50}},{"value":"/ # let parse_from_str = NaiveDateTime::parse_from_str;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":204190,"byte_end":204247,"line_start":191,"line_end":191,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(parse_from_str(\"2015-07-01 08:59:60.123\", \"%Y-%m-%d %H:%M:%S%.f\"),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":204252,"byte_end":204333,"line_start":192,"line_end":192,"column_start":5,"column_end":86}},{"value":"/            Ok(NaiveDate::from_ymd(2015, 7, 1).and_hms_milli(8, 59, 59, 1_123)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":204338,"byte_end":204422,"line_start":193,"line_end":193,"column_start":5,"column_end":89}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":204427,"byte_end":204435,"line_start":194,"line_end":194,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":204440,"byte_end":204443,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ Missing seconds are assumed to be zero,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":204448,"byte_end":204491,"line_start":196,"line_end":196,"column_start":5,"column_end":48}},{"value":"/ but out-of-bound times or insufficient fields are errors otherwise.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":204496,"byte_end":204567,"line_start":197,"line_end":197,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":204572,"byte_end":204575,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":204580,"byte_end":204588,"line_start":199,"line_end":199,"column_start":5,"column_end":13}},{"value":"/ # use chrono::{NaiveDateTime, NaiveDate};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":204593,"byte_end":204638,"line_start":200,"line_end":200,"column_start":5,"column_end":50}},{"value":"/ # let parse_from_str = NaiveDateTime::parse_from_str;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":204643,"byte_end":204700,"line_start":201,"line_end":201,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(parse_from_str(\"94/9/4 7:15\", \"%y/%m/%d %H:%M\"),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":204705,"byte_end":204768,"line_start":202,"line_end":202,"column_start":5,"column_end":68}},{"value":"/            Ok(NaiveDate::from_ymd(1994, 9, 4).and_hms(7, 15, 0)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":204773,"byte_end":204843,"line_start":203,"line_end":203,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":204848,"byte_end":204851,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ assert!(parse_from_str(\"04m33s\", \"%Mm%Ss\").is_err());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":204856,"byte_end":204913,"line_start":205,"line_end":205,"column_start":5,"column_end":62}},{"value":"/ assert!(parse_from_str(\"94/9/4 12\", \"%y/%m/%d %H\").is_err());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":204918,"byte_end":204983,"line_start":206,"line_end":206,"column_start":5,"column_end":70}},{"value":"/ assert!(parse_from_str(\"94/9/4 17:60\", \"%y/%m/%d %H:%M\").is_err());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":204988,"byte_end":205059,"line_start":207,"line_end":207,"column_start":5,"column_end":76}},{"value":"/ assert!(parse_from_str(\"94/9/4 24:00:00\", \"%y/%m/%d %H:%M:%S\").is_err());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":205064,"byte_end":205141,"line_start":208,"line_end":208,"column_start":5,"column_end":82}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":205146,"byte_end":205154,"line_start":209,"line_end":209,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":205159,"byte_end":205162,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ All parsed fields should be consistent to each other, otherwise it's an error.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":205167,"byte_end":205249,"line_start":211,"line_end":211,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":205254,"byte_end":205257,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":205262,"byte_end":205270,"line_start":213,"line_end":213,"column_start":5,"column_end":13}},{"value":"/ # use chrono::NaiveDateTime;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":205275,"byte_end":205307,"line_start":214,"line_end":214,"column_start":5,"column_end":37}},{"value":"/ # let parse_from_str = NaiveDateTime::parse_from_str;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":205312,"byte_end":205369,"line_start":215,"line_end":215,"column_start":5,"column_end":62}},{"value":"/ let fmt = \"%Y-%m-%d %H:%M:%S = UNIX timestamp %s\";","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":205374,"byte_end":205428,"line_start":216,"line_end":216,"column_start":5,"column_end":59}},{"value":"/ assert!(parse_from_str(\"2001-09-09 01:46:39 = UNIX timestamp 999999999\", fmt).is_ok());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":205433,"byte_end":205524,"line_start":217,"line_end":217,"column_start":5,"column_end":96}},{"value":"/ assert!(parse_from_str(\"1970-01-01 00:00:00 = UNIX timestamp 1\", fmt).is_err());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":205529,"byte_end":205613,"line_start":218,"line_end":218,"column_start":5,"column_end":89}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":205618,"byte_end":205626,"line_start":219,"line_end":219,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":206174,"byte_end":206178,"line_start":237,"line_end":237,"column_start":12,"column_end":16},"name":"date","qualname":"<NaiveDateTime>::date","value":"fn (&self) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Retrieves a date component.","sig":null,"attributes":[{"value":"/ Retrieves a date component.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":205885,"byte_end":205916,"line_start":226,"line_end":226,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":205921,"byte_end":205924,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":205929,"byte_end":205942,"line_start":228,"line_end":228,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":205947,"byte_end":205950,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":205955,"byte_end":205963,"line_start":230,"line_end":230,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":205968,"byte_end":205994,"line_start":231,"line_end":231,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":205999,"byte_end":206002,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2016, 7, 8).and_hms(9, 10, 11);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":206007,"byte_end":206071,"line_start":233,"line_end":233,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(dt.date(), NaiveDate::from_ymd(2016, 7, 8));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":206076,"byte_end":206135,"line_start":234,"line_end":234,"column_start":5,"column_end":64}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":206140,"byte_end":206148,"line_start":235,"line_end":235,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":206153,"byte_end":206162,"line_start":236,"line_end":236,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":206531,"byte_end":206535,"line_start":252,"line_end":252,"column_start":12,"column_end":16},"name":"time","qualname":"<NaiveDateTime>::time","value":"fn (&self) -> NaiveTime","parent":null,"children":[],"decl_id":null,"docs":" Retrieves a time component.","sig":null,"attributes":[{"value":"/ Retrieves a time component.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":206230,"byte_end":206261,"line_start":241,"line_end":241,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":206266,"byte_end":206269,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":206274,"byte_end":206287,"line_start":243,"line_end":243,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":206292,"byte_end":206295,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":206300,"byte_end":206308,"line_start":245,"line_end":245,"column_start":5,"column_end":13}},{"value":"/ use chrono::{NaiveDate, NaiveTime};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":206313,"byte_end":206352,"line_start":246,"line_end":246,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":206357,"byte_end":206360,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2016, 7, 8).and_hms(9, 10, 11);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":206365,"byte_end":206429,"line_start":248,"line_end":248,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(dt.time(), NaiveTime::from_hms(9, 10, 11));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":206434,"byte_end":206492,"line_start":249,"line_end":249,"column_start":5,"column_end":63}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":206497,"byte_end":206505,"line_start":250,"line_end":250,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":206510,"byte_end":206519,"line_start":251,"line_end":251,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":207442,"byte_end":207451,"line_start":279,"line_end":279,"column_start":12,"column_end":21},"name":"timestamp","qualname":"<NaiveDateTime>::timestamp","value":"fn (&self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of non-leap seconds since the midnight on January 1, 1970.","sig":null,"attributes":[{"value":"/ Returns the number of non-leap seconds since the midnight on January 1, 1970.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":206587,"byte_end":206668,"line_start":256,"line_end":256,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":206673,"byte_end":206676,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ Note that this does *not* account for the timezone!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":206681,"byte_end":206736,"line_start":258,"line_end":258,"column_start":5,"column_end":60}},{"value":"/ The true \"UNIX timestamp\" would count seconds since the midnight *UTC* on the epoch.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":206741,"byte_end":206829,"line_start":259,"line_end":259,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":206834,"byte_end":206837,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":206842,"byte_end":206855,"line_start":261,"line_end":261,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":206860,"byte_end":206863,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":206868,"byte_end":206876,"line_start":263,"line_end":263,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":206881,"byte_end":206907,"line_start":264,"line_end":264,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":206912,"byte_end":206915,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(1970, 1, 1).and_hms_milli(0, 0, 1, 980);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":206920,"byte_end":206993,"line_start":266,"line_end":266,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(dt.timestamp(), 1);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":206998,"byte_end":207032,"line_start":267,"line_end":267,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":207037,"byte_end":207040,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2001, 9, 9).and_hms(1, 46, 40);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":207045,"byte_end":207109,"line_start":269,"line_end":269,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(dt.timestamp(), 1_000_000_000);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":207114,"byte_end":207160,"line_start":270,"line_end":270,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":207165,"byte_end":207168,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(1969, 12, 31).and_hms(23, 59, 59);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":207173,"byte_end":207240,"line_start":272,"line_end":272,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(dt.timestamp(), -1);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":207245,"byte_end":207280,"line_start":273,"line_end":273,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":207285,"byte_end":207288,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(-1, 1, 1).and_hms(0, 0, 0);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":207293,"byte_end":207353,"line_start":275,"line_end":275,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(dt.timestamp(), -62198755200);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":207358,"byte_end":207403,"line_start":276,"line_end":276,"column_start":5,"column_end":50}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":207408,"byte_end":207416,"line_start":277,"line_end":277,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":207421,"byte_end":207430,"line_start":278,"line_end":278,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":208829,"byte_end":208845,"line_start":311,"line_end":311,"column_start":12,"column_end":28},"name":"timestamp_millis","qualname":"<NaiveDateTime>::timestamp_millis","value":"fn (&self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of non-leap *milliseconds* since midnight on January 1, 1970.","sig":null,"attributes":[{"value":"/ Returns the number of non-leap *milliseconds* since midnight on January 1, 1970.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":207753,"byte_end":207837,"line_start":286,"line_end":286,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":207842,"byte_end":207845,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ Note that this does *not* account for the timezone!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":207850,"byte_end":207905,"line_start":288,"line_end":288,"column_start":5,"column_end":60}},{"value":"/ The true \"UNIX timestamp\" would count seconds since the midnight *UTC* on the epoch.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":207910,"byte_end":207998,"line_start":289,"line_end":289,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":208003,"byte_end":208006,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ Note also that this does reduce the number of years that can be","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":208011,"byte_end":208078,"line_start":291,"line_end":291,"column_start":5,"column_end":72}},{"value":"/ represented from ~584 Billion to ~584 Million. (If this is a problem,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":208083,"byte_end":208156,"line_start":292,"line_end":292,"column_start":5,"column_end":78}},{"value":"/ please file an issue to let me know what domain needs millisecond","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":208161,"byte_end":208230,"line_start":293,"line_end":293,"column_start":5,"column_end":74}},{"value":"/ precision over billions of years, I'm curious.)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":208235,"byte_end":208286,"line_start":294,"line_end":294,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":208291,"byte_end":208294,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":208299,"byte_end":208312,"line_start":296,"line_end":296,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":208317,"byte_end":208320,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":208325,"byte_end":208333,"line_start":298,"line_end":298,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":208338,"byte_end":208364,"line_start":299,"line_end":299,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":208369,"byte_end":208372,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(1970, 1, 1).and_hms_milli(0, 0, 1, 444);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":208377,"byte_end":208450,"line_start":301,"line_end":301,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(dt.timestamp_millis(), 1_444);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":208455,"byte_end":208500,"line_start":302,"line_end":302,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":208505,"byte_end":208508,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2001, 9, 9).and_hms_milli(1, 46, 40, 555);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":208513,"byte_end":208588,"line_start":304,"line_end":304,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(dt.timestamp_millis(), 1_000_000_000_555);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":208593,"byte_end":208650,"line_start":305,"line_end":305,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":208655,"byte_end":208658,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(1969, 12, 31).and_hms_milli(23, 59, 59, 100);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":208663,"byte_end":208741,"line_start":307,"line_end":307,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(dt.timestamp_millis(), -900);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":208746,"byte_end":208790,"line_start":308,"line_end":308,"column_start":5,"column_end":49}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":208795,"byte_end":208803,"line_start":309,"line_end":309,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":208808,"byte_end":208817,"line_start":310,"line_end":310,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":210313,"byte_end":210328,"line_start":350,"line_end":350,"column_start":12,"column_end":27},"name":"timestamp_nanos","qualname":"<NaiveDateTime>::timestamp_nanos","value":"fn (&self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of non-leap *nanoseconds* since midnight on January 1, 1970.","sig":null,"attributes":[{"value":"/ Returns the number of non-leap *nanoseconds* since midnight on January 1, 1970.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":208976,"byte_end":209059,"line_start":316,"line_end":316,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":209064,"byte_end":209067,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ Note that this does *not* account for the timezone!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":209072,"byte_end":209127,"line_start":318,"line_end":318,"column_start":5,"column_end":60}},{"value":"/ The true \"UNIX timestamp\" would count seconds since the midnight *UTC* on the epoch.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":209132,"byte_end":209220,"line_start":319,"line_end":319,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":209225,"byte_end":209228,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":209233,"byte_end":209245,"line_start":321,"line_end":321,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":209250,"byte_end":209253,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ Note also that this does reduce the number of years that can be","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":209258,"byte_end":209325,"line_start":323,"line_end":323,"column_start":5,"column_end":72}},{"value":"/ represented from ~584 Billion to ~584 years. The dates that can be","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":209330,"byte_end":209400,"line_start":324,"line_end":324,"column_start":5,"column_end":75}},{"value":"/ represented as nanoseconds are between 1677-09-21T00:12:44.0 and","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":209405,"byte_end":209473,"line_start":325,"line_end":325,"column_start":5,"column_end":73}},{"value":"/ 2262-04-11T23:47:16.854775804.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":209478,"byte_end":209512,"line_start":326,"line_end":326,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":209517,"byte_end":209520,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ (If this is a problem, please file an issue to let me know what domain","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":209525,"byte_end":209599,"line_start":328,"line_end":328,"column_start":5,"column_end":79}},{"value":"/ needs nanosecond precision over millennia, I'm curious.)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":209604,"byte_end":209664,"line_start":329,"line_end":329,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":209669,"byte_end":209672,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":209677,"byte_end":209690,"line_start":331,"line_end":331,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":209695,"byte_end":209698,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":209703,"byte_end":209711,"line_start":333,"line_end":333,"column_start":5,"column_end":13}},{"value":"/ use chrono::{NaiveDate, NaiveDateTime};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":209716,"byte_end":209759,"line_start":334,"line_end":334,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":209764,"byte_end":209767,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(1970, 1, 1).and_hms_nano(0, 0, 1, 444);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":209772,"byte_end":209844,"line_start":336,"line_end":336,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(dt.timestamp_nanos(), 1_000_000_444);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":209849,"byte_end":209901,"line_start":337,"line_end":337,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":209906,"byte_end":209909,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2001, 9, 9).and_hms_nano(1, 46, 40, 555);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":209914,"byte_end":209988,"line_start":339,"line_end":339,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":209993,"byte_end":209996,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ const A_BILLION: i64 = 1_000_000_000;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":210001,"byte_end":210042,"line_start":341,"line_end":341,"column_start":5,"column_end":46}},{"value":"/ let nanos = dt.timestamp_nanos();","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":210047,"byte_end":210084,"line_start":342,"line_end":342,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(nanos, 1_000_000_000_000_000_555);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":210089,"byte_end":210138,"line_start":343,"line_end":343,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":210143,"byte_end":210158,"line_start":344,"line_end":344,"column_start":5,"column_end":20}},{"value":"/     dt,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":210163,"byte_end":210174,"line_start":345,"line_end":345,"column_start":5,"column_end":16}},{"value":"/     NaiveDateTime::from_timestamp(nanos / A_BILLION, (nanos % A_BILLION) as u32)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":210179,"byte_end":210263,"line_start":346,"line_end":346,"column_start":5,"column_end":89}},{"value":"/ );","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":210268,"byte_end":210274,"line_start":347,"line_end":347,"column_start":5,"column_end":11}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":210279,"byte_end":210287,"line_start":348,"line_end":348,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":210292,"byte_end":210301,"line_start":349,"line_end":349,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":211106,"byte_end":211129,"line_start":372,"line_end":372,"column_start":12,"column_end":35},"name":"timestamp_subsec_millis","qualname":"<NaiveDateTime>::timestamp_subsec_millis","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of milliseconds since the last whole non-leap second.","sig":null,"attributes":[{"value":"/ Returns the number of milliseconds since the last whole non-leap second.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":210467,"byte_end":210543,"line_start":355,"line_end":355,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":210548,"byte_end":210551,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 0 to 999,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":210556,"byte_end":210598,"line_start":357,"line_end":357,"column_start":5,"column_end":47}},{"value":"/ or for [leap seconds](./struct.NaiveTime.html#leap-second-handling), to 1,999.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":210603,"byte_end":210685,"line_start":358,"line_end":358,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":210690,"byte_end":210693,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":210698,"byte_end":210711,"line_start":360,"line_end":360,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":210716,"byte_end":210719,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":210724,"byte_end":210732,"line_start":362,"line_end":362,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":210737,"byte_end":210763,"line_start":363,"line_end":363,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":210768,"byte_end":210771,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2016, 7, 8).and_hms_nano(9, 10, 11, 123_456_789);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":210776,"byte_end":210858,"line_start":365,"line_end":365,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(dt.timestamp_subsec_millis(), 123);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":210863,"byte_end":210913,"line_start":366,"line_end":366,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":210918,"byte_end":210921,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2015, 7, 1).and_hms_nano(8, 59, 59, 1_234_567_890);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":210926,"byte_end":211010,"line_start":368,"line_end":368,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(dt.timestamp_subsec_millis(), 1_234);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":211015,"byte_end":211067,"line_start":369,"line_end":369,"column_start":5,"column_end":57}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":211072,"byte_end":211080,"line_start":370,"line_end":370,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":211085,"byte_end":211094,"line_start":371,"line_end":371,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":211862,"byte_end":211885,"line_start":393,"line_end":393,"column_start":12,"column_end":35},"name":"timestamp_subsec_micros","qualname":"<NaiveDateTime>::timestamp_subsec_micros","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of microseconds since the last whole non-leap second.","sig":null,"attributes":[{"value":"/ Returns the number of microseconds since the last whole non-leap second.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":211207,"byte_end":211283,"line_start":376,"line_end":376,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":211288,"byte_end":211291,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 0 to 999,999,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":211296,"byte_end":211342,"line_start":378,"line_end":378,"column_start":5,"column_end":51}},{"value":"/ or for [leap seconds](./struct.NaiveTime.html#leap-second-handling), to 1,999,999.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":211347,"byte_end":211433,"line_start":379,"line_end":379,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":211438,"byte_end":211441,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":211446,"byte_end":211459,"line_start":381,"line_end":381,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":211464,"byte_end":211467,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":211472,"byte_end":211480,"line_start":383,"line_end":383,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":211485,"byte_end":211511,"line_start":384,"line_end":384,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":211516,"byte_end":211519,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2016, 7, 8).and_hms_nano(9, 10, 11, 123_456_789);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":211524,"byte_end":211606,"line_start":386,"line_end":386,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(dt.timestamp_subsec_micros(), 123_456);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":211611,"byte_end":211665,"line_start":387,"line_end":387,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":211670,"byte_end":211673,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2015, 7, 1).and_hms_nano(8, 59, 59, 1_234_567_890);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":211678,"byte_end":211762,"line_start":389,"line_end":389,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(dt.timestamp_subsec_micros(), 1_234_567);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":211767,"byte_end":211823,"line_start":390,"line_end":390,"column_start":5,"column_end":61}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":211828,"byte_end":211836,"line_start":391,"line_end":391,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":211841,"byte_end":211850,"line_start":392,"line_end":392,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":212627,"byte_end":212649,"line_start":414,"line_end":414,"column_start":12,"column_end":34},"name":"timestamp_subsec_nanos","qualname":"<NaiveDateTime>::timestamp_subsec_nanos","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of nanoseconds since the last whole non-leap second.","sig":null,"attributes":[{"value":"/ Returns the number of nanoseconds since the last whole non-leap second.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":211959,"byte_end":212034,"line_start":397,"line_end":397,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":212039,"byte_end":212042,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 0 to 999,999,999,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":212047,"byte_end":212097,"line_start":399,"line_end":399,"column_start":5,"column_end":55}},{"value":"/ or for [leap seconds](./struct.NaiveTime.html#leap-second-handling), to 1,999,999,999.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":212102,"byte_end":212192,"line_start":400,"line_end":400,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":212197,"byte_end":212200,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":212205,"byte_end":212218,"line_start":402,"line_end":402,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":212223,"byte_end":212226,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":212231,"byte_end":212239,"line_start":404,"line_end":404,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":212244,"byte_end":212270,"line_start":405,"line_end":405,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":212275,"byte_end":212278,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2016, 7, 8).and_hms_nano(9, 10, 11, 123_456_789);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":212283,"byte_end":212365,"line_start":407,"line_end":407,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(dt.timestamp_subsec_nanos(), 123_456_789);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":212370,"byte_end":212427,"line_start":408,"line_end":408,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":212432,"byte_end":212435,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2015, 7, 1).and_hms_nano(8, 59, 59, 1_234_567_890);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":212440,"byte_end":212524,"line_start":410,"line_end":410,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(dt.timestamp_subsec_nanos(), 1_234_567_890);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":212529,"byte_end":212588,"line_start":411,"line_end":411,"column_start":5,"column_end":64}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":212593,"byte_end":212601,"line_start":412,"line_end":412,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":212606,"byte_end":212615,"line_start":413,"line_end":413,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":215919,"byte_end":215937,"line_start":489,"line_end":489,"column_start":12,"column_end":30},"name":"checked_add_signed","qualname":"<NaiveDateTime>::checked_add_signed","value":"fn (self, rhs: OldDuration) -> Option<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Adds given `Duration` to the current date and time.","sig":null,"attributes":[{"value":"/ Adds given `Duration` to the current date and time.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":212708,"byte_end":212763,"line_start":418,"line_end":418,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":212768,"byte_end":212771,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ As a part of Chrono's [leap second handling](./struct.NaiveTime.html#leap-second-handling),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":212776,"byte_end":212871,"line_start":420,"line_end":420,"column_start":5,"column_end":100}},{"value":"/ the addition assumes that **there is no leap second ever**,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":212876,"byte_end":212939,"line_start":421,"line_end":421,"column_start":5,"column_end":68}},{"value":"/ except when the `NaiveDateTime` itself represents a leap second","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":212944,"byte_end":213011,"line_start":422,"line_end":422,"column_start":5,"column_end":72}},{"value":"/ in which case the assumption becomes that **there is exactly a single leap second ever**.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":213016,"byte_end":213109,"line_start":423,"line_end":423,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":213114,"byte_end":213117,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when it will result in overflow.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":213122,"byte_end":213173,"line_start":425,"line_end":425,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":213178,"byte_end":213181,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":213186,"byte_end":213199,"line_start":427,"line_end":427,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":213204,"byte_end":213207,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":213212,"byte_end":213220,"line_start":429,"line_end":429,"column_start":5,"column_end":13}},{"value":"/ # extern crate chrono; fn main() {","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":213225,"byte_end":213263,"line_start":430,"line_end":430,"column_start":5,"column_end":43}},{"value":"/ use chrono::{Duration, NaiveDate};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":213268,"byte_end":213306,"line_start":431,"line_end":431,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":213311,"byte_end":213314,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":213319,"byte_end":213358,"line_start":433,"line_end":433,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":213363,"byte_end":213366,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ let d = from_ymd(2016, 7, 8);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":213371,"byte_end":213404,"line_start":435,"line_end":435,"column_start":5,"column_end":38}},{"value":"/ let hms = |h, m, s| d.and_hms(h, m, s);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":213409,"byte_end":213452,"line_start":436,"line_end":436,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_add_signed(Duration::zero()),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":213457,"byte_end":213522,"line_start":437,"line_end":437,"column_start":5,"column_end":70}},{"value":"/            Some(hms(3, 5, 7)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":213527,"byte_end":213562,"line_start":438,"line_end":438,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_add_signed(Duration::seconds(1)),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":213567,"byte_end":213636,"line_start":439,"line_end":439,"column_start":5,"column_end":74}},{"value":"/            Some(hms(3, 5, 8)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":213641,"byte_end":213676,"line_start":440,"line_end":440,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_add_signed(Duration::seconds(-1)),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":213681,"byte_end":213751,"line_start":441,"line_end":441,"column_start":5,"column_end":75}},{"value":"/            Some(hms(3, 5, 6)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":213756,"byte_end":213791,"line_start":442,"line_end":442,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_add_signed(Duration::seconds(3600 + 60)),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":213796,"byte_end":213873,"line_start":443,"line_end":443,"column_start":5,"column_end":82}},{"value":"/            Some(hms(4, 6, 7)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":213878,"byte_end":213913,"line_start":444,"line_end":444,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_add_signed(Duration::seconds(86_400)),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":213918,"byte_end":213992,"line_start":445,"line_end":445,"column_start":5,"column_end":79}},{"value":"/            Some(from_ymd(2016, 7, 9).and_hms(3, 5, 7)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":213997,"byte_end":214057,"line_start":446,"line_end":446,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":214062,"byte_end":214065,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ let hmsm = |h, m, s, milli| d.and_hms_milli(h, m, s, milli);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":214070,"byte_end":214134,"line_start":448,"line_end":448,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(hmsm(3, 5, 7, 980).checked_add_signed(Duration::milliseconds(450)),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":214139,"byte_end":214221,"line_start":449,"line_end":449,"column_start":5,"column_end":87}},{"value":"/            Some(hmsm(3, 5, 8, 430)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":214226,"byte_end":214267,"line_start":450,"line_end":450,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":214272,"byte_end":214279,"line_start":451,"line_end":451,"column_start":5,"column_end":12}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":214284,"byte_end":214292,"line_start":452,"line_end":452,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":214297,"byte_end":214300,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ Overflow returns `None`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":214305,"byte_end":214333,"line_start":454,"line_end":454,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":214338,"byte_end":214341,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":214346,"byte_end":214354,"line_start":456,"line_end":456,"column_start":5,"column_end":13}},{"value":"/ # extern crate chrono; fn main() {","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":214359,"byte_end":214397,"line_start":457,"line_end":457,"column_start":5,"column_end":43}},{"value":"/ # use chrono::{Duration, NaiveDate};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":214402,"byte_end":214442,"line_start":458,"line_end":458,"column_start":5,"column_end":45}},{"value":"/ # let hms = |h, m, s| NaiveDate::from_ymd(2016, 7, 8).and_hms(h, m, s);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":214447,"byte_end":214522,"line_start":459,"line_end":459,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_add_signed(Duration::days(1_000_000_000)), None);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":214527,"byte_end":214612,"line_start":460,"line_end":460,"column_start":5,"column_end":90}},{"value":"/ # }","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":214617,"byte_end":214624,"line_start":461,"line_end":461,"column_start":5,"column_end":12}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":214629,"byte_end":214637,"line_start":462,"line_end":462,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":214642,"byte_end":214645,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ Leap seconds are handled,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":214650,"byte_end":214679,"line_start":464,"line_end":464,"column_start":5,"column_end":34}},{"value":"/ but the addition assumes that it is the only leap second happened.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":214684,"byte_end":214754,"line_start":465,"line_end":465,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":214759,"byte_end":214762,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":214767,"byte_end":214775,"line_start":467,"line_end":467,"column_start":5,"column_end":13}},{"value":"/ # extern crate chrono; fn main() {","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":214780,"byte_end":214818,"line_start":468,"line_end":468,"column_start":5,"column_end":43}},{"value":"/ # use chrono::{Duration, NaiveDate};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":214823,"byte_end":214863,"line_start":469,"line_end":469,"column_start":5,"column_end":45}},{"value":"/ # let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":214868,"byte_end":214909,"line_start":470,"line_end":470,"column_start":5,"column_end":46}},{"value":"/ # let hmsm = |h, m, s, milli| from_ymd(2016, 7, 8).and_hms_milli(h, m, s, milli);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":214914,"byte_end":214999,"line_start":471,"line_end":471,"column_start":5,"column_end":90}},{"value":"/ let leap = hmsm(3, 5, 59, 1_300);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":215004,"byte_end":215041,"line_start":472,"line_end":472,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(leap.checked_add_signed(Duration::zero()),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":215046,"byte_end":215103,"line_start":473,"line_end":473,"column_start":5,"column_end":62}},{"value":"/            Some(hmsm(3, 5, 59, 1_300)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":215108,"byte_end":215152,"line_start":474,"line_end":474,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(leap.checked_add_signed(Duration::milliseconds(-500)),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":215157,"byte_end":215226,"line_start":475,"line_end":475,"column_start":5,"column_end":74}},{"value":"/            Some(hmsm(3, 5, 59, 800)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":215231,"byte_end":215273,"line_start":476,"line_end":476,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(leap.checked_add_signed(Duration::milliseconds(500)),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":215278,"byte_end":215346,"line_start":477,"line_end":477,"column_start":5,"column_end":73}},{"value":"/            Some(hmsm(3, 5, 59, 1_800)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":215351,"byte_end":215395,"line_start":478,"line_end":478,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(leap.checked_add_signed(Duration::milliseconds(800)),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":215400,"byte_end":215468,"line_start":479,"line_end":479,"column_start":5,"column_end":73}},{"value":"/            Some(hmsm(3, 6, 0, 100)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":215473,"byte_end":215514,"line_start":480,"line_end":480,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(leap.checked_add_signed(Duration::seconds(10)),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":215519,"byte_end":215581,"line_start":481,"line_end":481,"column_start":5,"column_end":67}},{"value":"/            Some(hmsm(3, 6, 9, 300)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":215586,"byte_end":215627,"line_start":482,"line_end":482,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(leap.checked_add_signed(Duration::seconds(-10)),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":215632,"byte_end":215695,"line_start":483,"line_end":483,"column_start":5,"column_end":68}},{"value":"/            Some(hmsm(3, 5, 50, 300)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":215700,"byte_end":215742,"line_start":484,"line_end":484,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(leap.checked_add_signed(Duration::days(1)),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":215747,"byte_end":215805,"line_start":485,"line_end":485,"column_start":5,"column_end":63}},{"value":"/            Some(from_ymd(2016, 7, 9).and_hms_milli(3, 5, 59, 300)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":215810,"byte_end":215882,"line_start":486,"line_end":486,"column_start":5,"column_end":77}},{"value":"/ # }","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":215887,"byte_end":215894,"line_start":487,"line_end":487,"column_start":5,"column_end":12}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":215899,"byte_end":215907,"line_start":488,"line_end":488,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":494},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":219372,"byte_end":219390,"line_start":568,"line_end":568,"column_start":12,"column_end":30},"name":"checked_sub_signed","qualname":"<NaiveDateTime>::checked_sub_signed","value":"fn (self, rhs: OldDuration) -> Option<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Subtracts given `Duration` from the current date and time.","sig":null,"attributes":[{"value":"/ Subtracts given `Duration` from the current date and time.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":216384,"byte_end":216446,"line_start":501,"line_end":501,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":216451,"byte_end":216454,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ As a part of Chrono's [leap second handling](./struct.NaiveTime.html#leap-second-handling),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":216459,"byte_end":216554,"line_start":503,"line_end":503,"column_start":5,"column_end":100}},{"value":"/ the subtraction assumes that **there is no leap second ever**,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":216559,"byte_end":216625,"line_start":504,"line_end":504,"column_start":5,"column_end":71}},{"value":"/ except when the `NaiveDateTime` itself represents a leap second","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":216630,"byte_end":216697,"line_start":505,"line_end":505,"column_start":5,"column_end":72}},{"value":"/ in which case the assumption becomes that **there is exactly a single leap second ever**.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":216702,"byte_end":216795,"line_start":506,"line_end":506,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":216800,"byte_end":216803,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when it will result in overflow.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":216808,"byte_end":216859,"line_start":508,"line_end":508,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":216864,"byte_end":216867,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":216872,"byte_end":216885,"line_start":510,"line_end":510,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":216890,"byte_end":216893,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":216898,"byte_end":216906,"line_start":512,"line_end":512,"column_start":5,"column_end":13}},{"value":"/ # extern crate chrono; fn main() {","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":216911,"byte_end":216949,"line_start":513,"line_end":513,"column_start":5,"column_end":43}},{"value":"/ use chrono::{Duration, NaiveDate};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":216954,"byte_end":216992,"line_start":514,"line_end":514,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":216997,"byte_end":217000,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":217005,"byte_end":217044,"line_start":516,"line_end":516,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":217049,"byte_end":217052,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ let d = from_ymd(2016, 7, 8);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":217057,"byte_end":217090,"line_start":518,"line_end":518,"column_start":5,"column_end":38}},{"value":"/ let hms = |h, m, s| d.and_hms(h, m, s);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":217095,"byte_end":217138,"line_start":519,"line_end":519,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_sub_signed(Duration::zero()),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":217143,"byte_end":217208,"line_start":520,"line_end":520,"column_start":5,"column_end":70}},{"value":"/            Some(hms(3, 5, 7)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":217213,"byte_end":217248,"line_start":521,"line_end":521,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_sub_signed(Duration::seconds(1)),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":217253,"byte_end":217322,"line_start":522,"line_end":522,"column_start":5,"column_end":74}},{"value":"/            Some(hms(3, 5, 6)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":217327,"byte_end":217362,"line_start":523,"line_end":523,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_sub_signed(Duration::seconds(-1)),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":217367,"byte_end":217437,"line_start":524,"line_end":524,"column_start":5,"column_end":75}},{"value":"/            Some(hms(3, 5, 8)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":217442,"byte_end":217477,"line_start":525,"line_end":525,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_sub_signed(Duration::seconds(3600 + 60)),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":217482,"byte_end":217559,"line_start":526,"line_end":526,"column_start":5,"column_end":82}},{"value":"/            Some(hms(2, 4, 7)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":217564,"byte_end":217599,"line_start":527,"line_end":527,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_sub_signed(Duration::seconds(86_400)),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":217604,"byte_end":217678,"line_start":528,"line_end":528,"column_start":5,"column_end":79}},{"value":"/            Some(from_ymd(2016, 7, 7).and_hms(3, 5, 7)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":217683,"byte_end":217743,"line_start":529,"line_end":529,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":217748,"byte_end":217751,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ let hmsm = |h, m, s, milli| d.and_hms_milli(h, m, s, milli);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":217756,"byte_end":217820,"line_start":531,"line_end":531,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(hmsm(3, 5, 7, 450).checked_sub_signed(Duration::milliseconds(670)),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":217825,"byte_end":217907,"line_start":532,"line_end":532,"column_start":5,"column_end":87}},{"value":"/            Some(hmsm(3, 5, 6, 780)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":217912,"byte_end":217953,"line_start":533,"line_end":533,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":217958,"byte_end":217965,"line_start":534,"line_end":534,"column_start":5,"column_end":12}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":217970,"byte_end":217978,"line_start":535,"line_end":535,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":217983,"byte_end":217986,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ Overflow returns `None`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":217991,"byte_end":218019,"line_start":537,"line_end":537,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":218024,"byte_end":218027,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":218032,"byte_end":218040,"line_start":539,"line_end":539,"column_start":5,"column_end":13}},{"value":"/ # extern crate chrono; fn main() {","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":218045,"byte_end":218083,"line_start":540,"line_end":540,"column_start":5,"column_end":43}},{"value":"/ # use chrono::{Duration, NaiveDate};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":218088,"byte_end":218128,"line_start":541,"line_end":541,"column_start":5,"column_end":45}},{"value":"/ # let hms = |h, m, s| NaiveDate::from_ymd(2016, 7, 8).and_hms(h, m, s);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":218133,"byte_end":218208,"line_start":542,"line_end":542,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(hms(3, 5, 7).checked_sub_signed(Duration::days(1_000_000_000)), None);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":218213,"byte_end":218298,"line_start":543,"line_end":543,"column_start":5,"column_end":90}},{"value":"/ # }","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":218303,"byte_end":218310,"line_start":544,"line_end":544,"column_start":5,"column_end":12}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":218315,"byte_end":218323,"line_start":545,"line_end":545,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":218328,"byte_end":218331,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ Leap seconds are handled,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":218336,"byte_end":218365,"line_start":547,"line_end":547,"column_start":5,"column_end":34}},{"value":"/ but the subtraction assumes that it is the only leap second happened.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":218370,"byte_end":218443,"line_start":548,"line_end":548,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":218448,"byte_end":218451,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":218456,"byte_end":218464,"line_start":550,"line_end":550,"column_start":5,"column_end":13}},{"value":"/ # extern crate chrono; fn main() {","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":218469,"byte_end":218507,"line_start":551,"line_end":551,"column_start":5,"column_end":43}},{"value":"/ # use chrono::{Duration, NaiveDate};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":218512,"byte_end":218552,"line_start":552,"line_end":552,"column_start":5,"column_end":45}},{"value":"/ # let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":218557,"byte_end":218598,"line_start":553,"line_end":553,"column_start":5,"column_end":46}},{"value":"/ # let hmsm = |h, m, s, milli| from_ymd(2016, 7, 8).and_hms_milli(h, m, s, milli);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":218603,"byte_end":218688,"line_start":554,"line_end":554,"column_start":5,"column_end":90}},{"value":"/ let leap = hmsm(3, 5, 59, 1_300);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":218693,"byte_end":218730,"line_start":555,"line_end":555,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(leap.checked_sub_signed(Duration::zero()),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":218735,"byte_end":218792,"line_start":556,"line_end":556,"column_start":5,"column_end":62}},{"value":"/            Some(hmsm(3, 5, 59, 1_300)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":218797,"byte_end":218841,"line_start":557,"line_end":557,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(leap.checked_sub_signed(Duration::milliseconds(200)),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":218846,"byte_end":218914,"line_start":558,"line_end":558,"column_start":5,"column_end":73}},{"value":"/            Some(hmsm(3, 5, 59, 1_100)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":218919,"byte_end":218963,"line_start":559,"line_end":559,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(leap.checked_sub_signed(Duration::milliseconds(500)),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":218968,"byte_end":219036,"line_start":560,"line_end":560,"column_start":5,"column_end":73}},{"value":"/            Some(hmsm(3, 5, 59, 800)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":219041,"byte_end":219083,"line_start":561,"line_end":561,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(leap.checked_sub_signed(Duration::seconds(60)),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":219088,"byte_end":219150,"line_start":562,"line_end":562,"column_start":5,"column_end":67}},{"value":"/            Some(hmsm(3, 5, 0, 300)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":219155,"byte_end":219196,"line_start":563,"line_end":563,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(leap.checked_sub_signed(Duration::days(1)),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":219201,"byte_end":219259,"line_start":564,"line_end":564,"column_start":5,"column_end":63}},{"value":"/            Some(from_ymd(2016, 7, 7).and_hms_milli(3, 6, 0, 300)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":219264,"byte_end":219335,"line_start":565,"line_end":565,"column_start":5,"column_end":76}},{"value":"/ # }","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":219340,"byte_end":219347,"line_start":566,"line_end":566,"column_start":5,"column_end":12}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":219352,"byte_end":219360,"line_start":567,"line_end":567,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":495},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":221727,"byte_end":221748,"line_start":622,"line_end":622,"column_start":12,"column_end":33},"name":"signed_duration_since","qualname":"<NaiveDateTime>::signed_duration_since","value":"fn (self, rhs: NaiveDateTime) -> OldDuration","parent":null,"children":[],"decl_id":null,"docs":" Subtracts another `NaiveDateTime` from the current date and time.\n This does not overflow or underflow at all.","sig":null,"attributes":[{"value":"/ Subtracts another `NaiveDateTime` from the current date and time.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":219837,"byte_end":219906,"line_start":580,"line_end":580,"column_start":5,"column_end":74}},{"value":"/ This does not overflow or underflow at all.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":219911,"byte_end":219958,"line_start":581,"line_end":581,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":219963,"byte_end":219966,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ As a part of Chrono's [leap second handling](./struct.NaiveTime.html#leap-second-handling),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":219971,"byte_end":220066,"line_start":583,"line_end":583,"column_start":5,"column_end":100}},{"value":"/ the subtraction assumes that **there is no leap second ever**,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":220071,"byte_end":220137,"line_start":584,"line_end":584,"column_start":5,"column_end":71}},{"value":"/ except when any of the `NaiveDateTime`s themselves represents a leap second","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":220142,"byte_end":220221,"line_start":585,"line_end":585,"column_start":5,"column_end":84}},{"value":"/ in which case the assumption becomes that","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":220226,"byte_end":220271,"line_start":586,"line_end":586,"column_start":5,"column_end":50}},{"value":"/ **there are exactly one (or two) leap second(s) ever**.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":220276,"byte_end":220335,"line_start":587,"line_end":587,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":220340,"byte_end":220343,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":220348,"byte_end":220361,"line_start":589,"line_end":589,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":220366,"byte_end":220369,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":220374,"byte_end":220382,"line_start":591,"line_end":591,"column_start":5,"column_end":13}},{"value":"/ # extern crate chrono; fn main() {","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":220387,"byte_end":220425,"line_start":592,"line_end":592,"column_start":5,"column_end":43}},{"value":"/ use chrono::{Duration, NaiveDate};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":220430,"byte_end":220468,"line_start":593,"line_end":593,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":220473,"byte_end":220476,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":220481,"byte_end":220520,"line_start":595,"line_end":595,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":220525,"byte_end":220528,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ let d = from_ymd(2016, 7, 8);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":220533,"byte_end":220566,"line_start":597,"line_end":597,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(d.and_hms(3, 5, 7).signed_duration_since(d.and_hms(2, 4, 6)),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":220571,"byte_end":220647,"line_start":598,"line_end":598,"column_start":5,"column_end":81}},{"value":"/            Duration::seconds(3600 + 60 + 1));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":220652,"byte_end":220701,"line_start":599,"line_end":599,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":220706,"byte_end":220709,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ // July 8 is 190th day in the year 2016","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":220714,"byte_end":220757,"line_start":601,"line_end":601,"column_start":5,"column_end":48}},{"value":"/ let d0 = from_ymd(2016, 1, 1);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":220762,"byte_end":220796,"line_start":602,"line_end":602,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(d.and_hms_milli(0, 7, 6, 500).signed_duration_since(d0.and_hms(0, 0, 0)),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":220801,"byte_end":220889,"line_start":603,"line_end":603,"column_start":5,"column_end":93}},{"value":"/            Duration::seconds(189 * 86_400 + 7 * 60 + 6) + Duration::milliseconds(500));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":220894,"byte_end":220985,"line_start":604,"line_end":604,"column_start":5,"column_end":96}},{"value":"/ # }","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":220990,"byte_end":220997,"line_start":605,"line_end":605,"column_start":5,"column_end":12}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":221002,"byte_end":221010,"line_start":606,"line_end":606,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":221015,"byte_end":221018,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ Leap seconds are handled, but the subtraction assumes that","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":221023,"byte_end":221085,"line_start":608,"line_end":608,"column_start":5,"column_end":67}},{"value":"/ there were no other leap seconds happened.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":221090,"byte_end":221136,"line_start":609,"line_end":609,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":221141,"byte_end":221144,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":221149,"byte_end":221157,"line_start":611,"line_end":611,"column_start":5,"column_end":13}},{"value":"/ # extern crate chrono; fn main() {","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":221162,"byte_end":221200,"line_start":612,"line_end":612,"column_start":5,"column_end":43}},{"value":"/ # use chrono::{Duration, NaiveDate};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":221205,"byte_end":221245,"line_start":613,"line_end":613,"column_start":5,"column_end":45}},{"value":"/ # let from_ymd = NaiveDate::from_ymd;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":221250,"byte_end":221291,"line_start":614,"line_end":614,"column_start":5,"column_end":46}},{"value":"/ let leap = from_ymd(2015, 6, 30).and_hms_milli(23, 59, 59, 1_500);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":221296,"byte_end":221366,"line_start":615,"line_end":615,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(leap.signed_duration_since(from_ymd(2015, 6, 30).and_hms(23, 0, 0)),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":221371,"byte_end":221454,"line_start":616,"line_end":616,"column_start":5,"column_end":88}},{"value":"/            Duration::seconds(3600) + Duration::milliseconds(500));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":221459,"byte_end":221529,"line_start":617,"line_end":617,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(from_ymd(2015, 7, 1).and_hms(1, 0, 0).signed_duration_since(leap),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":221534,"byte_end":221615,"line_start":618,"line_end":618,"column_start":5,"column_end":86}},{"value":"/            Duration::seconds(3600) - Duration::milliseconds(500));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":221620,"byte_end":221690,"line_start":619,"line_end":619,"column_start":5,"column_end":75}},{"value":"/ # }","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":221695,"byte_end":221702,"line_start":620,"line_end":620,"column_start":5,"column_end":12}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":221707,"byte_end":221715,"line_start":621,"line_end":621,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":223190,"byte_end":223207,"line_start":655,"line_end":655,"column_start":12,"column_end":29},"name":"format_with_items","qualname":"<NaiveDateTime>::format_with_items","value":"fn <'a, I, B> (&self, items: I) -> DelayedFormat<I>","parent":null,"children":[],"decl_id":null,"docs":" Formats the combined date and time with the specified formatting items.\n Otherwise it is the same as the ordinary [`format`](#method.format) method.","sig":null,"attributes":[{"value":"/ Formats the combined date and time with the specified formatting items.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":221897,"byte_end":221972,"line_start":626,"line_end":626,"column_start":5,"column_end":80}},{"value":"/ Otherwise it is the same as the ordinary [`format`](#method.format) method.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":221977,"byte_end":222056,"line_start":627,"line_end":627,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":222061,"byte_end":222064,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ The `Iterator` of items should be `Clone`able,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":222069,"byte_end":222119,"line_start":629,"line_end":629,"column_start":5,"column_end":55}},{"value":"/ since the resulting `DelayedFormat` value may be formatted multiple times.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":222124,"byte_end":222202,"line_start":630,"line_end":630,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":222207,"byte_end":222210,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":222215,"byte_end":222228,"line_start":632,"line_end":632,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":222233,"byte_end":222236,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":222241,"byte_end":222249,"line_start":634,"line_end":634,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":222254,"byte_end":222280,"line_start":635,"line_end":635,"column_start":5,"column_end":31}},{"value":"/ use chrono::format::strftime::StrftimeItems;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":222285,"byte_end":222333,"line_start":636,"line_end":636,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":222338,"byte_end":222341,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ let fmt = StrftimeItems::new(\"%Y-%m-%d %H:%M:%S\");","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":222346,"byte_end":222400,"line_start":638,"line_end":638,"column_start":5,"column_end":59}},{"value":"/ let dt = NaiveDate::from_ymd(2015, 9, 5).and_hms(23, 56, 4);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":222405,"byte_end":222469,"line_start":639,"line_end":639,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(dt.format_with_items(fmt.clone()).to_string(), \"2015-09-05 23:56:04\");","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":222474,"byte_end":222559,"line_start":640,"line_end":640,"column_start":5,"column_end":90}},{"value":"/ assert_eq!(dt.format(\"%Y-%m-%d %H:%M:%S\").to_string(),    \"2015-09-05 23:56:04\");","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":222564,"byte_end":222649,"line_start":641,"line_end":641,"column_start":5,"column_end":90}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":222654,"byte_end":222662,"line_start":642,"line_end":642,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":222667,"byte_end":222670,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ The resulting `DelayedFormat` can be formatted directly via the `Display` trait.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":222675,"byte_end":222759,"line_start":644,"line_end":644,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":222764,"byte_end":222767,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":222772,"byte_end":222780,"line_start":646,"line_end":646,"column_start":5,"column_end":13}},{"value":"/ # use chrono::NaiveDate;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":222785,"byte_end":222813,"line_start":647,"line_end":647,"column_start":5,"column_end":33}},{"value":"/ # use chrono::format::strftime::StrftimeItems;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":222818,"byte_end":222868,"line_start":648,"line_end":648,"column_start":5,"column_end":55}},{"value":"/ # let fmt = StrftimeItems::new(\"%Y-%m-%d %H:%M:%S\").clone();","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":222873,"byte_end":222937,"line_start":649,"line_end":649,"column_start":5,"column_end":69}},{"value":"/ # let dt = NaiveDate::from_ymd(2015, 9, 5).and_hms(23, 56, 4);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":222942,"byte_end":223008,"line_start":650,"line_end":650,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(format!(\"{}\", dt.format_with_items(fmt)), \"2015-09-05 23:56:04\");","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":223013,"byte_end":223093,"line_start":651,"line_end":651,"column_start":5,"column_end":85}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":223098,"byte_end":223106,"line_start":652,"line_end":652,"column_start":5,"column_end":13}},{"value":"cfg(any(feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":223111,"byte_end":223164,"line_start":653,"line_end":653,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":223169,"byte_end":223178,"line_start":654,"line_end":654,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":225008,"byte_end":225014,"line_start":697,"line_end":697,"column_start":12,"column_end":18},"name":"format","qualname":"<NaiveDateTime>::format","value":"fn <'a> (&self, fmt: &'a str) -> DelayedFormat<StrftimeItems<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Formats the combined date and time with the specified format string.\n See the [`format::strftime` module](../format/strftime/index.html)\n on the supported escape sequences.","sig":null,"attributes":[{"value":"/ Formats the combined date and time with the specified format string.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":223418,"byte_end":223490,"line_start":663,"line_end":663,"column_start":5,"column_end":77}},{"value":"/ See the [`format::strftime` module](../format/strftime/index.html)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":223495,"byte_end":223565,"line_start":664,"line_end":664,"column_start":5,"column_end":75}},{"value":"/ on the supported escape sequences.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":223570,"byte_end":223608,"line_start":665,"line_end":665,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":223613,"byte_end":223616,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ This returns a `DelayedFormat`,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":223621,"byte_end":223656,"line_start":667,"line_end":667,"column_start":5,"column_end":40}},{"value":"/ which gets converted to a string only when actual formatting happens.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":223661,"byte_end":223734,"line_start":668,"line_end":668,"column_start":5,"column_end":78}},{"value":"/ You may use the `to_string` method to get a `String`,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":223739,"byte_end":223796,"line_start":669,"line_end":669,"column_start":5,"column_end":62}},{"value":"/ or just feed it into `print!` and other formatting macros.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":223801,"byte_end":223863,"line_start":670,"line_end":670,"column_start":5,"column_end":67}},{"value":"/ (In this way it avoids the redundant memory allocation.)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":223868,"byte_end":223928,"line_start":671,"line_end":671,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":223933,"byte_end":223936,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ A wrong format string does *not* issue an error immediately.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":223941,"byte_end":224005,"line_start":673,"line_end":673,"column_start":5,"column_end":69}},{"value":"/ Rather, converting or formatting the `DelayedFormat` fails.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":224010,"byte_end":224073,"line_start":674,"line_end":674,"column_start":5,"column_end":68}},{"value":"/ You are recommended to immediately use `DelayedFormat` for this reason.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":224078,"byte_end":224153,"line_start":675,"line_end":675,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":224158,"byte_end":224161,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":224166,"byte_end":224179,"line_start":677,"line_end":677,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":224184,"byte_end":224187,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":224192,"byte_end":224200,"line_start":679,"line_end":679,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveDate;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":224205,"byte_end":224231,"line_start":680,"line_end":680,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":224236,"byte_end":224239,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ let dt = NaiveDate::from_ymd(2015, 9, 5).and_hms(23, 56, 4);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":224244,"byte_end":224308,"line_start":682,"line_end":682,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(dt.format(\"%Y-%m-%d %H:%M:%S\").to_string(), \"2015-09-05 23:56:04\");","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":224313,"byte_end":224395,"line_start":683,"line_end":683,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(dt.format(\"around %l %p on %b %-d\").to_string(), \"around 11 PM on Sep 5\");","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":224400,"byte_end":224489,"line_start":684,"line_end":684,"column_start":5,"column_end":94}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":224494,"byte_end":224502,"line_start":685,"line_end":685,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":224507,"byte_end":224510,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ The resulting `DelayedFormat` can be formatted directly via the `Display` trait.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":224515,"byte_end":224599,"line_start":687,"line_end":687,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":224604,"byte_end":224607,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":224612,"byte_end":224620,"line_start":689,"line_end":689,"column_start":5,"column_end":13}},{"value":"/ # use chrono::NaiveDate;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":224625,"byte_end":224653,"line_start":690,"line_end":690,"column_start":5,"column_end":33}},{"value":"/ # let dt = NaiveDate::from_ymd(2015, 9, 5).and_hms(23, 56, 4);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":224658,"byte_end":224724,"line_start":691,"line_end":691,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(format!(\"{}\", dt.format(\"%Y-%m-%d %H:%M:%S\")), \"2015-09-05 23:56:04\");","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":224729,"byte_end":224814,"line_start":692,"line_end":692,"column_start":5,"column_end":90}},{"value":"/ assert_eq!(format!(\"{}\", dt.format(\"around %l %p on %b %-d\")), \"around 11 PM on Sep 5\");","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":224819,"byte_end":224911,"line_start":693,"line_end":693,"column_start":5,"column_end":97}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":224916,"byte_end":224924,"line_start":694,"line_end":694,"column_start":5,"column_end":13}},{"value":"cfg(any(feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":224929,"byte_end":224982,"line_start":695,"line_end":695,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":224987,"byte_end":224996,"line_start":696,"line_end":696,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1725},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":323676,"byte_end":323683,"line_start":17,"line_end":17,"column_start":12,"column_end":19},"name":"IsoWeek","qualname":"::naive::isoweek::IsoWeek","value":"IsoWeek {  }","parent":null,"children":[{"krate":0,"index":1726}],"decl_id":null,"docs":" ISO 8601 week.","sig":null,"attributes":[{"value":"/ ISO 8601 week.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":323270,"byte_end":323288,"line_start":10,"line_end":10,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":323289,"byte_end":323292,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type, combined with [`Weekday`](../enum.Weekday.html),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":323293,"byte_end":323356,"line_start":12,"line_end":12,"column_start":1,"column_end":64}},{"value":"/ constitues the ISO 8601 [week date](./struct.NaiveDate.html#week-date).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":323357,"byte_end":323432,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/ One can retrieve this type from the existing [`Datelike`](../trait.Datelike.html) types","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":323433,"byte_end":323524,"line_start":14,"line_end":14,"column_start":1,"column_end":92}},{"value":"/ via the [`Datelike::iso_week`](../trait.Datelike.html#tymethod.iso_week) method.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":323525,"byte_end":323609,"line_start":15,"line_end":15,"column_start":1,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":651},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":325641,"byte_end":325645,"line_start":70,"line_end":70,"column_start":12,"column_end":16},"name":"year","qualname":"<IsoWeek>::year","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Returns the year number for this ISO week.","sig":null,"attributes":[{"value":"/ Returns the year number for this ISO week.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":324983,"byte_end":325029,"line_start":49,"line_end":49,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":325034,"byte_end":325037,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":325042,"byte_end":325055,"line_start":51,"line_end":51,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":325060,"byte_end":325063,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":325068,"byte_end":325076,"line_start":53,"line_end":53,"column_start":5,"column_end":13}},{"value":"/ use chrono::{NaiveDate, Datelike, Weekday};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":325081,"byte_end":325128,"line_start":54,"line_end":54,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":325133,"byte_end":325136,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_isoywd(2015, 1, Weekday::Mon);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":325141,"byte_end":325199,"line_start":56,"line_end":56,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(d.iso_week().year(), 2015);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":325204,"byte_end":325246,"line_start":57,"line_end":57,"column_start":5,"column_end":47}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":325251,"byte_end":325259,"line_start":58,"line_end":58,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":325264,"byte_end":325267,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ This year number might not match the calendar year number.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":325272,"byte_end":325334,"line_start":60,"line_end":60,"column_start":5,"column_end":67}},{"value":"/ Continuing the example...","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":325339,"byte_end":325368,"line_start":61,"line_end":61,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":325373,"byte_end":325376,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":325381,"byte_end":325389,"line_start":63,"line_end":63,"column_start":5,"column_end":13}},{"value":"/ # use chrono::{NaiveDate, Datelike, Weekday};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":325394,"byte_end":325443,"line_start":64,"line_end":64,"column_start":5,"column_end":54}},{"value":"/ # let d = NaiveDate::from_isoywd(2015, 1, Weekday::Mon);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":325448,"byte_end":325508,"line_start":65,"line_end":65,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(d.year(), 2014);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":325513,"byte_end":325544,"line_start":66,"line_end":66,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(d, NaiveDate::from_ymd(2014, 12, 29));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":325549,"byte_end":325602,"line_start":67,"line_end":67,"column_start":5,"column_end":58}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":325607,"byte_end":325615,"line_start":68,"line_end":68,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":325620,"byte_end":325629,"line_start":69,"line_end":69,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":652},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":326095,"byte_end":326099,"line_start":87,"line_end":87,"column_start":12,"column_end":16},"name":"week","qualname":"<IsoWeek>::week","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the ISO week number starting from 1.","sig":null,"attributes":[{"value":"/ Returns the ISO week number starting from 1.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":325696,"byte_end":325744,"line_start":74,"line_end":74,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":325749,"byte_end":325752,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 1 to 53. (The last week of year differs by years.)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":325757,"byte_end":325840,"line_start":76,"line_end":76,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":325845,"byte_end":325848,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":325853,"byte_end":325866,"line_start":78,"line_end":78,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":325871,"byte_end":325874,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":325879,"byte_end":325887,"line_start":80,"line_end":80,"column_start":5,"column_end":13}},{"value":"/ use chrono::{NaiveDate, Datelike, Weekday};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":325892,"byte_end":325939,"line_start":81,"line_end":81,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":325944,"byte_end":325947,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_isoywd(2015, 15, Weekday::Mon);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":325952,"byte_end":326011,"line_start":83,"line_end":83,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(d.iso_week().week(), 15);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":326016,"byte_end":326056,"line_start":84,"line_end":84,"column_start":5,"column_end":45}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":326061,"byte_end":326069,"line_start":85,"line_end":85,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":326074,"byte_end":326083,"line_start":86,"line_end":86,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":653},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":326567,"byte_end":326572,"line_start":104,"line_end":104,"column_start":12,"column_end":17},"name":"week0","qualname":"<IsoWeek>::week0","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the ISO week number starting from 0.","sig":null,"attributes":[{"value":"/ Returns the ISO week number starting from 0.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":326167,"byte_end":326215,"line_start":91,"line_end":91,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":326220,"byte_end":326223,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 0 to 52. (The last week of year differs by years.)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":326228,"byte_end":326311,"line_start":93,"line_end":93,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":326316,"byte_end":326319,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":326324,"byte_end":326337,"line_start":95,"line_end":95,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":326342,"byte_end":326345,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":326350,"byte_end":326358,"line_start":97,"line_end":97,"column_start":5,"column_end":13}},{"value":"/ use chrono::{NaiveDate, Datelike, Weekday};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":326363,"byte_end":326410,"line_start":98,"line_end":98,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":326415,"byte_end":326418,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ let d = NaiveDate::from_isoywd(2015, 15, Weekday::Mon);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":326423,"byte_end":326482,"line_start":100,"line_end":100,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(d.iso_week().week0(), 14);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":326487,"byte_end":326528,"line_start":101,"line_end":101,"column_start":5,"column_end":46}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":326533,"byte_end":326541,"line_start":102,"line_end":102,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":326546,"byte_end":326555,"line_start":103,"line_end":103,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1745},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":336498,"byte_end":336507,"line_start":182,"line_end":182,"column_start":12,"column_end":21},"name":"NaiveTime","qualname":"::naive::time::NaiveTime","value":"NaiveTime {  }","parent":null,"children":[{"krate":0,"index":1746},{"krate":0,"index":1747}],"decl_id":null,"docs":" ISO 8601 time without timezone.\n Allows for the nanosecond precision and optional leap second representation.","sig":null,"attributes":[{"value":"/ ISO 8601 time without timezone.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":329287,"byte_end":329322,"line_start":22,"line_end":22,"column_start":1,"column_end":36}},{"value":"/ Allows for the nanosecond precision and optional leap second representation.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":329323,"byte_end":329403,"line_start":23,"line_end":23,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":329404,"byte_end":329407,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Leap Second Handling","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":329408,"byte_end":329434,"line_start":25,"line_end":25,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":329435,"byte_end":329438,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Since 1960s, the manmade atomic clock has been so accurate that","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":329439,"byte_end":329506,"line_start":27,"line_end":27,"column_start":1,"column_end":68}},{"value":"/ it is much more accurate than Earth's own motion.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":329507,"byte_end":329560,"line_start":28,"line_end":28,"column_start":1,"column_end":54}},{"value":"/ It became desirable to define the civil time in terms of the atomic clock,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":329561,"byte_end":329639,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/ but that risks the desynchronization of the civil time from Earth.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":329640,"byte_end":329710,"line_start":30,"line_end":30,"column_start":1,"column_end":71}},{"value":"/ To account for this, the designers of the Coordinated Universal Time (UTC)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":329711,"byte_end":329789,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/ made that the UTC should be kept within 0.9 seconds of the observed Earth-bound time.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":329790,"byte_end":329879,"line_start":32,"line_end":32,"column_start":1,"column_end":90}},{"value":"/ When the mean solar day is longer than the ideal (86,400 seconds),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":329880,"byte_end":329950,"line_start":33,"line_end":33,"column_start":1,"column_end":71}},{"value":"/ the error slowly accumulates and it is necessary to add a **leap second**","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":329951,"byte_end":330028,"line_start":34,"line_end":34,"column_start":1,"column_end":78}},{"value":"/ to slow the UTC down a bit.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":330029,"byte_end":330060,"line_start":35,"line_end":35,"column_start":1,"column_end":32}},{"value":"/ (We may also remove a second to speed the UTC up a bit, but it never happened.)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":330061,"byte_end":330144,"line_start":36,"line_end":36,"column_start":1,"column_end":84}},{"value":"/ The leap second, if any, follows 23:59:59 of June 30 or December 31 in the UTC.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":330145,"byte_end":330228,"line_start":37,"line_end":37,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":330229,"byte_end":330232,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Fast forward to the 21st century,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":330233,"byte_end":330270,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/ we have seen 26 leap seconds from January 1972 to December 2015.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":330271,"byte_end":330339,"line_start":40,"line_end":40,"column_start":1,"column_end":69}},{"value":"/ Yes, 26 seconds. Probably you can read this paragraph within 26 seconds.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":330340,"byte_end":330416,"line_start":41,"line_end":41,"column_start":1,"column_end":77}},{"value":"/ But those 26 seconds, and possibly more in the future, are never predictable,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":330417,"byte_end":330498,"line_start":42,"line_end":42,"column_start":1,"column_end":82}},{"value":"/ and whether to add a leap second or not is known only before 6 months.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":330499,"byte_end":330573,"line_start":43,"line_end":43,"column_start":1,"column_end":75}},{"value":"/ Internet-based clocks (via NTP) do account for known leap seconds,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":330574,"byte_end":330644,"line_start":44,"line_end":44,"column_start":1,"column_end":71}},{"value":"/ but the system API normally doesn't (and often can't, with no network connection)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":330645,"byte_end":330730,"line_start":45,"line_end":45,"column_start":1,"column_end":86}},{"value":"/ and there is no reliable way to retrieve leap second information.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":330731,"byte_end":330800,"line_start":46,"line_end":46,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":330801,"byte_end":330804,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Chrono does not try to accurately implement leap seconds; it is impossible.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":330805,"byte_end":330884,"line_start":48,"line_end":48,"column_start":1,"column_end":80}},{"value":"/ Rather, **it allows for leap seconds but behaves as if there are *no other* leap seconds.**","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":330885,"byte_end":330980,"line_start":49,"line_end":49,"column_start":1,"column_end":96}},{"value":"/ Various operations will ignore any possible leap second(s)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":330981,"byte_end":331043,"line_start":50,"line_end":50,"column_start":1,"column_end":63}},{"value":"/ except when any of the operands were actually leap seconds.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":331044,"byte_end":331107,"line_start":51,"line_end":51,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":331108,"byte_end":331111,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ If you cannot tolerate this behavior,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":331112,"byte_end":331153,"line_start":53,"line_end":53,"column_start":1,"column_end":42}},{"value":"/ you must use a separate `TimeZone` for the International Atomic Time (TAI).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":331154,"byte_end":331233,"line_start":54,"line_end":54,"column_start":1,"column_end":80}},{"value":"/ TAI is like UTC but has no leap seconds, and thus slightly differs from UTC.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":331234,"byte_end":331314,"line_start":55,"line_end":55,"column_start":1,"column_end":81}},{"value":"/ Chrono does not yet provide such implementation, but it is planned.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":331315,"byte_end":331386,"line_start":56,"line_end":56,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":331387,"byte_end":331390,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ## Representing Leap Seconds","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":331391,"byte_end":331423,"line_start":58,"line_end":58,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":331424,"byte_end":331427,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The leap second is indicated via fractional seconds more than 1 second.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":331428,"byte_end":331503,"line_start":60,"line_end":60,"column_start":1,"column_end":76}},{"value":"/ This makes possible to treat a leap second as the prior non-leap second","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":331504,"byte_end":331579,"line_start":61,"line_end":61,"column_start":1,"column_end":76}},{"value":"/ if you don't care about sub-second accuracy.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":331580,"byte_end":331628,"line_start":62,"line_end":62,"column_start":1,"column_end":49}},{"value":"/ You should use the proper formatting to get the raw leap second.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":331629,"byte_end":331697,"line_start":63,"line_end":63,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":331698,"byte_end":331701,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ All methods accepting fractional seconds will accept such values.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":331702,"byte_end":331771,"line_start":65,"line_end":65,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":331772,"byte_end":331775,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":331776,"byte_end":331784,"line_start":67,"line_end":67,"column_start":1,"column_end":9}},{"value":"/ use chrono::{NaiveDate, NaiveTime, Utc, TimeZone};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":331785,"byte_end":331839,"line_start":68,"line_end":68,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":331840,"byte_end":331843,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ let t = NaiveTime::from_hms_milli(8, 59, 59, 1_000);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":331844,"byte_end":331900,"line_start":70,"line_end":70,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":331901,"byte_end":331904,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ let dt1 = NaiveDate::from_ymd(2015, 7, 1).and_hms_micro(8, 59, 59, 1_000_000);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":331905,"byte_end":331987,"line_start":72,"line_end":72,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":331988,"byte_end":331991,"line_start":73,"line_end":73,"column_start":1,"column_end":4}},{"value":"/ let dt2 = Utc.ymd(2015, 6, 30).and_hms_nano(23, 59, 59, 1_000_000_000);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":331992,"byte_end":332067,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ # let _ = (t, dt1, dt2);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":332068,"byte_end":332096,"line_start":75,"line_end":75,"column_start":1,"column_end":29}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":332097,"byte_end":332105,"line_start":76,"line_end":76,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":332106,"byte_end":332109,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ Note that the leap second can happen anytime given an appropriate time zone;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":332110,"byte_end":332190,"line_start":78,"line_end":78,"column_start":1,"column_end":81}},{"value":"/ 2015-07-01 01:23:60 would be a proper leap second if UTC+01:24 had existed.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":332191,"byte_end":332270,"line_start":79,"line_end":79,"column_start":1,"column_end":80}},{"value":"/ Practically speaking, though, by the time of the first leap second on 1972-06-30,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":332271,"byte_end":332356,"line_start":80,"line_end":80,"column_start":1,"column_end":86}},{"value":"/ every time zone offset around the world has standardized to the 5-minute alignment.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":332357,"byte_end":332444,"line_start":81,"line_end":81,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":332445,"byte_end":332448,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ ## Date And Time Arithmetics","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":332449,"byte_end":332481,"line_start":83,"line_end":83,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":332482,"byte_end":332485,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ As a concrete example, let's assume that `03:00:60` and `04:00:60` are leap seconds.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":332486,"byte_end":332574,"line_start":85,"line_end":85,"column_start":1,"column_end":89}},{"value":"/ In reality, of course, leap seconds are separated by at least 6 months.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":332575,"byte_end":332650,"line_start":86,"line_end":86,"column_start":1,"column_end":76}},{"value":"/ We will also use some intuitive concise notations for the explanation.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":332651,"byte_end":332725,"line_start":87,"line_end":87,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":332726,"byte_end":332729,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ `Time + Duration`","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":332730,"byte_end":332751,"line_start":89,"line_end":89,"column_start":1,"column_end":22}},{"value":"/ (short for [`NaiveTime::overflowing_add_signed`](#method.overflowing_add_signed)):","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":332752,"byte_end":332838,"line_start":90,"line_end":90,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":332839,"byte_end":332842,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ - `03:00:00 + 1s = 03:00:01`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":332843,"byte_end":332876,"line_start":92,"line_end":92,"column_start":1,"column_end":34}},{"value":"/ - `03:00:59 + 60s = 03:02:00`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":332877,"byte_end":332911,"line_start":93,"line_end":93,"column_start":1,"column_end":35}},{"value":"/ - `03:00:59 + 1s = 03:01:00`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":332912,"byte_end":332945,"line_start":94,"line_end":94,"column_start":1,"column_end":34}},{"value":"/ - `03:00:60 + 1s = 03:01:00`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":332946,"byte_end":332979,"line_start":95,"line_end":95,"column_start":1,"column_end":34}},{"value":"/   Note that the sum is identical to the previous.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":332980,"byte_end":333033,"line_start":96,"line_end":96,"column_start":1,"column_end":54}},{"value":"/ - `03:00:60 + 60s = 03:01:59`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":333034,"byte_end":333068,"line_start":97,"line_end":97,"column_start":1,"column_end":35}},{"value":"/ - `03:00:60 + 61s = 03:02:00`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":333069,"byte_end":333103,"line_start":98,"line_end":98,"column_start":1,"column_end":35}},{"value":"/ - `03:00:60.1 + 0.8s = 03:00:60.9`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":333104,"byte_end":333143,"line_start":99,"line_end":99,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":333144,"byte_end":333147,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ `Time - Duration`","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":333148,"byte_end":333169,"line_start":101,"line_end":101,"column_start":1,"column_end":22}},{"value":"/ (short for [`NaiveTime::overflowing_sub_signed`](#method.overflowing_sub_signed)):","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":333170,"byte_end":333256,"line_start":102,"line_end":102,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":333257,"byte_end":333260,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ - `03:00:00 - 1s = 02:59:59`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":333261,"byte_end":333294,"line_start":104,"line_end":104,"column_start":1,"column_end":34}},{"value":"/ - `03:01:00 - 1s = 03:00:59`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":333295,"byte_end":333328,"line_start":105,"line_end":105,"column_start":1,"column_end":34}},{"value":"/ - `03:01:00 - 60s = 03:00:00`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":333329,"byte_end":333363,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/ - `03:00:60 - 60s = 03:00:00`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":333364,"byte_end":333398,"line_start":107,"line_end":107,"column_start":1,"column_end":35}},{"value":"/   Note that the result is identical to the previous.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":333399,"byte_end":333455,"line_start":108,"line_end":108,"column_start":1,"column_end":57}},{"value":"/ - `03:00:60.7 - 0.4s = 03:00:60.3`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":333456,"byte_end":333495,"line_start":109,"line_end":109,"column_start":1,"column_end":40}},{"value":"/ - `03:00:60.7 - 0.9s = 03:00:59.8`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":333496,"byte_end":333535,"line_start":110,"line_end":110,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":333536,"byte_end":333539,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ `Time - Time`","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":333540,"byte_end":333557,"line_start":112,"line_end":112,"column_start":1,"column_end":18}},{"value":"/ (short for [`NaiveTime::signed_duration_since`](#method.signed_duration_since)):","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":333558,"byte_end":333642,"line_start":113,"line_end":113,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":333643,"byte_end":333646,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ - `04:00:00 - 03:00:00 = 3600s`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":333647,"byte_end":333683,"line_start":115,"line_end":115,"column_start":1,"column_end":37}},{"value":"/ - `03:01:00 - 03:00:00 = 60s`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":333684,"byte_end":333718,"line_start":116,"line_end":116,"column_start":1,"column_end":35}},{"value":"/ - `03:00:60 - 03:00:00 = 60s`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":333719,"byte_end":333753,"line_start":117,"line_end":117,"column_start":1,"column_end":35}},{"value":"/   Note that the difference is identical to the previous.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":333754,"byte_end":333814,"line_start":118,"line_end":118,"column_start":1,"column_end":61}},{"value":"/ - `03:00:60.6 - 03:00:59.4 = 1.2s`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":333815,"byte_end":333854,"line_start":119,"line_end":119,"column_start":1,"column_end":40}},{"value":"/ - `03:01:00 - 03:00:59.8 = 0.2s`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":333855,"byte_end":333892,"line_start":120,"line_end":120,"column_start":1,"column_end":38}},{"value":"/ - `03:01:00 - 03:00:60.5 = 0.5s`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":333893,"byte_end":333930,"line_start":121,"line_end":121,"column_start":1,"column_end":38}},{"value":"/   Note that the difference is larger than the previous,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":333931,"byte_end":333990,"line_start":122,"line_end":122,"column_start":1,"column_end":60}},{"value":"/   even though the leap second clearly follows the previous whole second.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":333991,"byte_end":334067,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/ - `04:00:60.9 - 03:00:60.1 =","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":334068,"byte_end":334100,"line_start":124,"line_end":124,"column_start":1,"column_end":33}},{"value":"/   (04:00:60.9 - 04:00:00) + (04:00:00 - 03:01:00) + (03:01:00 - 03:00:60.1) =","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":334101,"byte_end":334182,"line_start":125,"line_end":125,"column_start":1,"column_end":82}},{"value":"/   60.9s + 3540s + 0.9s = 3601.8s`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":334183,"byte_end":334221,"line_start":126,"line_end":126,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":334222,"byte_end":334225,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ In general,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":334226,"byte_end":334241,"line_start":128,"line_end":128,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":334242,"byte_end":334245,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ - `Time + Duration` unconditionally equals to `Duration + Time`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":334246,"byte_end":334314,"line_start":130,"line_end":130,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":334315,"byte_end":334318,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ - `Time - Duration` unconditionally equals to `Time + (-Duration)`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":334319,"byte_end":334390,"line_start":132,"line_end":132,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":334391,"byte_end":334394,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ - `Time1 - Time2` unconditionally equals to `-(Time2 - Time1)`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":334395,"byte_end":334462,"line_start":134,"line_end":134,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":334463,"byte_end":334466,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ - Associativity does not generally hold, because","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":334467,"byte_end":334519,"line_start":136,"line_end":136,"column_start":1,"column_end":53}},{"value":"/   `(Time + Duration1) - Duration2` no longer equals to `Time + (Duration1 - Duration2)`","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":334520,"byte_end":334611,"line_start":137,"line_end":137,"column_start":1,"column_end":92}},{"value":"/   for two positive durations.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":334612,"byte_end":334645,"line_start":138,"line_end":138,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":334646,"byte_end":334649,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/     - As a special case, `(Time + Duration) - Duration` also does not equal to `Time`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":334650,"byte_end":334740,"line_start":140,"line_end":140,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":334741,"byte_end":334744,"line_start":141,"line_end":141,"column_start":1,"column_end":4}},{"value":"/     - If you can assume that all durations have the same sign, however,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":334745,"byte_end":334820,"line_start":142,"line_end":142,"column_start":1,"column_end":76}},{"value":"/       then the associativity holds:","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":334821,"byte_end":334860,"line_start":143,"line_end":143,"column_start":1,"column_end":40}},{"value":"/       `(Time + Duration1) + Duration2` equals to `Time + (Duration1 + Duration2)`","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":334861,"byte_end":334946,"line_start":144,"line_end":144,"column_start":1,"column_end":86}},{"value":"/       for two positive durations.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":334947,"byte_end":334984,"line_start":145,"line_end":145,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":334985,"byte_end":334988,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ## Reading And Writing Leap Seconds","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":334989,"byte_end":335028,"line_start":147,"line_end":147,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":335029,"byte_end":335032,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ The \"typical\" leap seconds on the minute boundary are","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":335033,"byte_end":335090,"line_start":149,"line_end":149,"column_start":1,"column_end":58}},{"value":"/ correctly handled both in the formatting and parsing.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":335091,"byte_end":335148,"line_start":150,"line_end":150,"column_start":1,"column_end":58}},{"value":"/ The leap second in the human-readable representation","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":335149,"byte_end":335205,"line_start":151,"line_end":151,"column_start":1,"column_end":57}},{"value":"/ will be represented as the second part being 60, as required by ISO 8601.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":335206,"byte_end":335283,"line_start":152,"line_end":152,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":335284,"byte_end":335287,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":335288,"byte_end":335296,"line_start":154,"line_end":154,"column_start":1,"column_end":9}},{"value":"/ use chrono::{Utc, TimeZone};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":335297,"byte_end":335329,"line_start":155,"line_end":155,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":335330,"byte_end":335333,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ let dt = Utc.ymd(2015, 6, 30).and_hms_milli(23, 59, 59, 1_000);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":335334,"byte_end":335401,"line_start":157,"line_end":157,"column_start":1,"column_end":68}},{"value":"/ assert_eq!(format!(\"{:?}\", dt), \"2015-06-30T23:59:60Z\");","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":335402,"byte_end":335462,"line_start":158,"line_end":158,"column_start":1,"column_end":61}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":335463,"byte_end":335471,"line_start":159,"line_end":159,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":335472,"byte_end":335475,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ There are hypothetical leap seconds not on the minute boundary","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":335476,"byte_end":335542,"line_start":161,"line_end":161,"column_start":1,"column_end":67}},{"value":"/ nevertheless supported by Chrono.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":335543,"byte_end":335580,"line_start":162,"line_end":162,"column_start":1,"column_end":38}},{"value":"/ They are allowed for the sake of completeness and consistency;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":335581,"byte_end":335647,"line_start":163,"line_end":163,"column_start":1,"column_end":67}},{"value":"/ there were several \"exotic\" time zone offsets with fractional minutes prior to UTC after all.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":335648,"byte_end":335745,"line_start":164,"line_end":164,"column_start":1,"column_end":98}},{"value":"/ For such cases the human-readable representation is ambiguous","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":335746,"byte_end":335811,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"/ and would be read back to the next non-leap second.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":335812,"byte_end":335867,"line_start":166,"line_end":166,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":335868,"byte_end":335871,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":335872,"byte_end":335880,"line_start":168,"line_end":168,"column_start":1,"column_end":9}},{"value":"/ use chrono::{DateTime, Utc, TimeZone};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":335881,"byte_end":335923,"line_start":169,"line_end":169,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":335924,"byte_end":335927,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ let dt = Utc.ymd(2015, 6, 30).and_hms_milli(23, 56, 4, 1_000);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":335928,"byte_end":335994,"line_start":171,"line_end":171,"column_start":1,"column_end":67}},{"value":"/ assert_eq!(format!(\"{:?}\", dt), \"2015-06-30T23:56:05Z\");","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":335995,"byte_end":336055,"line_start":172,"line_end":172,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":336056,"byte_end":336059,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ let dt = Utc.ymd(2015, 6, 30).and_hms(23, 56, 5);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":336060,"byte_end":336113,"line_start":174,"line_end":174,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(format!(\"{:?}\", dt), \"2015-06-30T23:56:05Z\");","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":336114,"byte_end":336174,"line_start":175,"line_end":175,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(DateTime::parse_from_rfc3339(\"2015-06-30T23:56:05Z\").unwrap(), dt);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":336175,"byte_end":336257,"line_start":176,"line_end":176,"column_start":1,"column_end":83}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":336258,"byte_end":336266,"line_start":177,"line_end":177,"column_start":1,"column_end":9}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":336267,"byte_end":336270,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ Since Chrono alone cannot determine any existence of leap seconds,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":336271,"byte_end":336341,"line_start":179,"line_end":179,"column_start":1,"column_end":71}},{"value":"/ **there is absolutely no guarantee that the leap second read has actually happened**.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":336342,"byte_end":336431,"line_start":180,"line_end":180,"column_start":1,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":337165,"byte_end":337173,"line_start":207,"line_end":207,"column_start":12,"column_end":20},"name":"from_hms","qualname":"<NaiveTime>::from_hms","value":"fn (hour: u32, min: u32, sec: u32) -> NaiveTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute and second.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` from hour, minute and second.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":336564,"byte_end":336621,"line_start":188,"line_end":188,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":336626,"byte_end":336629,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ No [leap second](#leap-second-handling) is allowed here;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":336634,"byte_end":336694,"line_start":190,"line_end":190,"column_start":5,"column_end":65}},{"value":"/ use `NaiveTime::from_hms_*` methods with a subsecond parameter instead.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":336699,"byte_end":336774,"line_start":191,"line_end":191,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":336779,"byte_end":336782,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute and/or second.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":336787,"byte_end":336836,"line_start":193,"line_end":193,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":336841,"byte_end":336844,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":336849,"byte_end":336862,"line_start":195,"line_end":195,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":336867,"byte_end":336870,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":336875,"byte_end":336883,"line_start":197,"line_end":197,"column_start":5,"column_end":13}},{"value":"/ use chrono::{NaiveTime, Timelike};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":336888,"byte_end":336926,"line_start":198,"line_end":198,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":336931,"byte_end":336934,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ let t = NaiveTime::from_hms(23, 56, 4);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":336939,"byte_end":336982,"line_start":200,"line_end":200,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(t.hour(), 23);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":336987,"byte_end":337016,"line_start":201,"line_end":201,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(t.minute(), 56);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":337021,"byte_end":337052,"line_start":202,"line_end":202,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(t.second(), 4);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":337057,"byte_end":337087,"line_start":203,"line_end":203,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(t.nanosecond(), 0);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":337092,"byte_end":337126,"line_start":204,"line_end":204,"column_start":5,"column_end":39}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":337131,"byte_end":337139,"line_start":205,"line_end":205,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":337144,"byte_end":337153,"line_start":206,"line_end":206,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":338030,"byte_end":338042,"line_start":232,"line_end":232,"column_start":12,"column_end":24},"name":"from_hms_opt","qualname":"<NaiveTime>::from_hms_opt","value":"fn (hour: u32, min: u32, sec: u32) -> Option<NaiveTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute and second.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` from hour, minute and second.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":337302,"byte_end":337359,"line_start":211,"line_end":211,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":337364,"byte_end":337367,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ No [leap second](#leap-second-handling) is allowed here;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":337372,"byte_end":337432,"line_start":213,"line_end":213,"column_start":5,"column_end":65}},{"value":"/ use `NaiveTime::from_hms_*_opt` methods with a subsecond parameter instead.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":337437,"byte_end":337516,"line_start":214,"line_end":214,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":337521,"byte_end":337524,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute and/or second.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":337529,"byte_end":337586,"line_start":216,"line_end":216,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":337591,"byte_end":337594,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":337599,"byte_end":337612,"line_start":218,"line_end":218,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":337617,"byte_end":337620,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":337625,"byte_end":337633,"line_start":220,"line_end":220,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveTime;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":337638,"byte_end":337664,"line_start":221,"line_end":221,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":337669,"byte_end":337672,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ let from_hms_opt = NaiveTime::from_hms_opt;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":337677,"byte_end":337724,"line_start":223,"line_end":223,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":337729,"byte_end":337732,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ assert!(from_hms_opt(0, 0, 0).is_some());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":337737,"byte_end":337782,"line_start":225,"line_end":225,"column_start":5,"column_end":50}},{"value":"/ assert!(from_hms_opt(23, 59, 59).is_some());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":337787,"byte_end":337835,"line_start":226,"line_end":226,"column_start":5,"column_end":53}},{"value":"/ assert!(from_hms_opt(24, 0, 0).is_none());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":337840,"byte_end":337886,"line_start":227,"line_end":227,"column_start":5,"column_end":51}},{"value":"/ assert!(from_hms_opt(23, 60, 0).is_none());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":337891,"byte_end":337938,"line_start":228,"line_end":228,"column_start":5,"column_end":52}},{"value":"/ assert!(from_hms_opt(23, 59, 60).is_none());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":337943,"byte_end":337991,"line_start":229,"line_end":229,"column_start":5,"column_end":53}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":337996,"byte_end":338004,"line_start":230,"line_end":230,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":338009,"byte_end":338018,"line_start":231,"line_end":231,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":687},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":338783,"byte_end":338797,"line_start":255,"line_end":255,"column_start":12,"column_end":26},"name":"from_hms_milli","qualname":"<NaiveTime>::from_hms_milli","value":"fn (hour: u32, min: u32, sec: u32, milli: u32) -> NaiveTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute, second and millisecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` from hour, minute, second and millisecond.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":338164,"byte_end":338234,"line_start":236,"line_end":236,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":338239,"byte_end":338242,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ The millisecond part can exceed 1,000","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":338247,"byte_end":338288,"line_start":238,"line_end":238,"column_start":5,"column_end":46}},{"value":"/ in order to represent the [leap second](#leap-second-handling).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":338293,"byte_end":338360,"line_start":239,"line_end":239,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":338365,"byte_end":338368,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute, second and/or millisecond.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":338373,"byte_end":338435,"line_start":241,"line_end":241,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":338440,"byte_end":338443,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":338448,"byte_end":338461,"line_start":243,"line_end":243,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":338466,"byte_end":338469,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":338474,"byte_end":338482,"line_start":245,"line_end":245,"column_start":5,"column_end":13}},{"value":"/ use chrono::{NaiveTime, Timelike};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":338487,"byte_end":338525,"line_start":246,"line_end":246,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":338530,"byte_end":338533,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ let t = NaiveTime::from_hms_milli(23, 56, 4, 12);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":338538,"byte_end":338591,"line_start":248,"line_end":248,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(t.hour(), 23);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":338596,"byte_end":338625,"line_start":249,"line_end":249,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(t.minute(), 56);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":338630,"byte_end":338661,"line_start":250,"line_end":250,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(t.second(), 4);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":338666,"byte_end":338696,"line_start":251,"line_end":251,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(t.nanosecond(), 12_000_000);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":338701,"byte_end":338744,"line_start":252,"line_end":252,"column_start":5,"column_end":48}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":338749,"byte_end":338757,"line_start":253,"line_end":253,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":338762,"byte_end":338771,"line_start":254,"line_end":254,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":339857,"byte_end":339875,"line_start":282,"line_end":282,"column_start":12,"column_end":30},"name":"from_hms_milli_opt","qualname":"<NaiveTime>::from_hms_milli_opt","value":"fn (hour: u32, min: u32, sec: u32, milli: u32) -> Option<NaiveTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute, second and millisecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` from hour, minute, second and millisecond.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":338951,"byte_end":339021,"line_start":259,"line_end":259,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":339026,"byte_end":339029,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ The millisecond part can exceed 1,000","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":339034,"byte_end":339075,"line_start":261,"line_end":261,"column_start":5,"column_end":46}},{"value":"/ in order to represent the [leap second](#leap-second-handling).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":339080,"byte_end":339147,"line_start":262,"line_end":262,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":339152,"byte_end":339155,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute, second and/or millisecond.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":339160,"byte_end":339230,"line_start":264,"line_end":264,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":339235,"byte_end":339238,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":339243,"byte_end":339256,"line_start":266,"line_end":266,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":339261,"byte_end":339264,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":339269,"byte_end":339277,"line_start":268,"line_end":268,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveTime;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":339282,"byte_end":339308,"line_start":269,"line_end":269,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":339313,"byte_end":339316,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ let from_hmsm_opt = NaiveTime::from_hms_milli_opt;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":339321,"byte_end":339375,"line_start":271,"line_end":271,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":339380,"byte_end":339383,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ assert!(from_hmsm_opt(0, 0, 0, 0).is_some());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":339388,"byte_end":339437,"line_start":273,"line_end":273,"column_start":5,"column_end":54}},{"value":"/ assert!(from_hmsm_opt(23, 59, 59, 999).is_some());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":339442,"byte_end":339496,"line_start":274,"line_end":274,"column_start":5,"column_end":59}},{"value":"/ assert!(from_hmsm_opt(23, 59, 59, 1_999).is_some()); // a leap second after 23:59:59","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":339501,"byte_end":339589,"line_start":275,"line_end":275,"column_start":5,"column_end":93}},{"value":"/ assert!(from_hmsm_opt(24, 0, 0, 0).is_none());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":339594,"byte_end":339644,"line_start":276,"line_end":276,"column_start":5,"column_end":55}},{"value":"/ assert!(from_hmsm_opt(23, 60, 0, 0).is_none());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":339649,"byte_end":339700,"line_start":277,"line_end":277,"column_start":5,"column_end":56}},{"value":"/ assert!(from_hmsm_opt(23, 59, 60, 0).is_none());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":339705,"byte_end":339757,"line_start":278,"line_end":278,"column_start":5,"column_end":57}},{"value":"/ assert!(from_hmsm_opt(23, 59, 59, 2_000).is_none());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":339762,"byte_end":339818,"line_start":279,"line_end":279,"column_start":5,"column_end":61}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":339823,"byte_end":339831,"line_start":280,"line_end":280,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":339836,"byte_end":339845,"line_start":281,"line_end":281,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":340711,"byte_end":340725,"line_start":307,"line_end":307,"column_start":12,"column_end":26},"name":"from_hms_micro","qualname":"<NaiveTime>::from_hms_micro","value":"fn (hour: u32, min: u32, sec: u32, micro: u32) -> NaiveTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute, second and microsecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` from hour, minute, second and microsecond.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":340084,"byte_end":340154,"line_start":288,"line_end":288,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":340159,"byte_end":340162,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ The microsecond part can exceed 1,000,000","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":340167,"byte_end":340212,"line_start":290,"line_end":290,"column_start":5,"column_end":50}},{"value":"/ in order to represent the [leap second](#leap-second-handling).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":340217,"byte_end":340284,"line_start":291,"line_end":291,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":340289,"byte_end":340292,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute, second and/or microsecond.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":340297,"byte_end":340359,"line_start":293,"line_end":293,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":340364,"byte_end":340367,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":340372,"byte_end":340385,"line_start":295,"line_end":295,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":340390,"byte_end":340393,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":340398,"byte_end":340406,"line_start":297,"line_end":297,"column_start":5,"column_end":13}},{"value":"/ use chrono::{NaiveTime, Timelike};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":340411,"byte_end":340449,"line_start":298,"line_end":298,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":340454,"byte_end":340457,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ let t = NaiveTime::from_hms_micro(23, 56, 4, 12_345);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":340462,"byte_end":340519,"line_start":300,"line_end":300,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(t.hour(), 23);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":340524,"byte_end":340553,"line_start":301,"line_end":301,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(t.minute(), 56);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":340558,"byte_end":340589,"line_start":302,"line_end":302,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(t.second(), 4);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":340594,"byte_end":340624,"line_start":303,"line_end":303,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(t.nanosecond(), 12_345_000);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":340629,"byte_end":340672,"line_start":304,"line_end":304,"column_start":5,"column_end":48}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":340677,"byte_end":340685,"line_start":305,"line_end":305,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":340690,"byte_end":340699,"line_start":306,"line_end":306,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":341801,"byte_end":341819,"line_start":334,"line_end":334,"column_start":12,"column_end":30},"name":"from_hms_micro_opt","qualname":"<NaiveTime>::from_hms_micro_opt","value":"fn (hour: u32, min: u32, sec: u32, micro: u32) -> Option<NaiveTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute, second and microsecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` from hour, minute, second and microsecond.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":340879,"byte_end":340949,"line_start":311,"line_end":311,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":340954,"byte_end":340957,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ The microsecond part can exceed 1,000,000","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":340962,"byte_end":341007,"line_start":313,"line_end":313,"column_start":5,"column_end":50}},{"value":"/ in order to represent the [leap second](#leap-second-handling).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":341012,"byte_end":341079,"line_start":314,"line_end":314,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":341084,"byte_end":341087,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute, second and/or microsecond.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":341092,"byte_end":341162,"line_start":316,"line_end":316,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":341167,"byte_end":341170,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":341175,"byte_end":341188,"line_start":318,"line_end":318,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":341193,"byte_end":341196,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":341201,"byte_end":341209,"line_start":320,"line_end":320,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveTime;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":341214,"byte_end":341240,"line_start":321,"line_end":321,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":341245,"byte_end":341248,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ let from_hmsu_opt = NaiveTime::from_hms_micro_opt;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":341253,"byte_end":341307,"line_start":323,"line_end":323,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":341312,"byte_end":341315,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ assert!(from_hmsu_opt(0, 0, 0, 0).is_some());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":341320,"byte_end":341369,"line_start":325,"line_end":325,"column_start":5,"column_end":54}},{"value":"/ assert!(from_hmsu_opt(23, 59, 59, 999_999).is_some());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":341374,"byte_end":341432,"line_start":326,"line_end":326,"column_start":5,"column_end":63}},{"value":"/ assert!(from_hmsu_opt(23, 59, 59, 1_999_999).is_some()); // a leap second after 23:59:59","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":341437,"byte_end":341529,"line_start":327,"line_end":327,"column_start":5,"column_end":97}},{"value":"/ assert!(from_hmsu_opt(24, 0, 0, 0).is_none());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":341534,"byte_end":341584,"line_start":328,"line_end":328,"column_start":5,"column_end":55}},{"value":"/ assert!(from_hmsu_opt(23, 60, 0, 0).is_none());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":341589,"byte_end":341640,"line_start":329,"line_end":329,"column_start":5,"column_end":56}},{"value":"/ assert!(from_hmsu_opt(23, 59, 60, 0).is_none());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":341645,"byte_end":341697,"line_start":330,"line_end":330,"column_start":5,"column_end":57}},{"value":"/ assert!(from_hmsu_opt(23, 59, 59, 2_000_000).is_none());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":341702,"byte_end":341762,"line_start":331,"line_end":331,"column_start":5,"column_end":65}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":341767,"byte_end":341775,"line_start":332,"line_end":332,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":341780,"byte_end":341789,"line_start":333,"line_end":333,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":342629,"byte_end":342642,"line_start":357,"line_end":357,"column_start":12,"column_end":25},"name":"from_hms_nano","qualname":"<NaiveTime>::from_hms_nano","value":"fn (hour: u32, min: u32, sec: u32, nano: u32) -> NaiveTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute, second and nanosecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` from hour, minute, second and nanosecond.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":341998,"byte_end":342067,"line_start":338,"line_end":338,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":342072,"byte_end":342075,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ The nanosecond part can exceed 1,000,000,000","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":342080,"byte_end":342128,"line_start":340,"line_end":340,"column_start":5,"column_end":53}},{"value":"/ in order to represent the [leap second](#leap-second-handling).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":342133,"byte_end":342200,"line_start":341,"line_end":341,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":342205,"byte_end":342208,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute, second and/or nanosecond.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":342213,"byte_end":342274,"line_start":343,"line_end":343,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":342279,"byte_end":342282,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":342287,"byte_end":342300,"line_start":345,"line_end":345,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":342305,"byte_end":342308,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":342313,"byte_end":342321,"line_start":347,"line_end":347,"column_start":5,"column_end":13}},{"value":"/ use chrono::{NaiveTime, Timelike};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":342326,"byte_end":342364,"line_start":348,"line_end":348,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":342369,"byte_end":342372,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ let t = NaiveTime::from_hms_nano(23, 56, 4, 12_345_678);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":342377,"byte_end":342437,"line_start":350,"line_end":350,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(t.hour(), 23);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":342442,"byte_end":342471,"line_start":351,"line_end":351,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(t.minute(), 56);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":342476,"byte_end":342507,"line_start":352,"line_end":352,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(t.second(), 4);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":342512,"byte_end":342542,"line_start":353,"line_end":353,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(t.nanosecond(), 12_345_678);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":342547,"byte_end":342590,"line_start":354,"line_end":354,"column_start":5,"column_end":48}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":342595,"byte_end":342603,"line_start":355,"line_end":355,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":342608,"byte_end":342617,"line_start":356,"line_end":356,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":694},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":343727,"byte_end":343744,"line_start":384,"line_end":384,"column_start":12,"column_end":29},"name":"from_hms_nano_opt","qualname":"<NaiveTime>::from_hms_nano_opt","value":"fn (hour: u32, min: u32, sec: u32, nano: u32) -> Option<NaiveTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from hour, minute, second and nanosecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` from hour, minute, second and nanosecond.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":342793,"byte_end":342862,"line_start":361,"line_end":361,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":342867,"byte_end":342870,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ The nanosecond part can exceed 1,000,000,000","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":342875,"byte_end":342923,"line_start":363,"line_end":363,"column_start":5,"column_end":53}},{"value":"/ in order to represent the [leap second](#leap-second-handling).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":342928,"byte_end":342995,"line_start":364,"line_end":364,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":343000,"byte_end":343003,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute, second and/or nanosecond.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":343008,"byte_end":343077,"line_start":366,"line_end":366,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":343082,"byte_end":343085,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":343090,"byte_end":343103,"line_start":368,"line_end":368,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":343108,"byte_end":343111,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":343116,"byte_end":343124,"line_start":370,"line_end":370,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveTime;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":343129,"byte_end":343155,"line_start":371,"line_end":371,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":343160,"byte_end":343163,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ let from_hmsn_opt = NaiveTime::from_hms_nano_opt;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":343168,"byte_end":343221,"line_start":373,"line_end":373,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":343226,"byte_end":343229,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ assert!(from_hmsn_opt(0, 0, 0, 0).is_some());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":343234,"byte_end":343283,"line_start":375,"line_end":375,"column_start":5,"column_end":54}},{"value":"/ assert!(from_hmsn_opt(23, 59, 59, 999_999_999).is_some());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":343288,"byte_end":343350,"line_start":376,"line_end":376,"column_start":5,"column_end":67}},{"value":"/ assert!(from_hmsn_opt(23, 59, 59, 1_999_999_999).is_some()); // a leap second after 23:59:59","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":343355,"byte_end":343451,"line_start":377,"line_end":377,"column_start":5,"column_end":101}},{"value":"/ assert!(from_hmsn_opt(24, 0, 0, 0).is_none());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":343456,"byte_end":343506,"line_start":378,"line_end":378,"column_start":5,"column_end":55}},{"value":"/ assert!(from_hmsn_opt(23, 60, 0, 0).is_none());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":343511,"byte_end":343562,"line_start":379,"line_end":379,"column_start":5,"column_end":56}},{"value":"/ assert!(from_hmsn_opt(23, 59, 60, 0).is_none());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":343567,"byte_end":343619,"line_start":380,"line_end":380,"column_start":5,"column_end":57}},{"value":"/ assert!(from_hmsn_opt(23, 59, 59, 2_000_000_000).is_none());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":343624,"byte_end":343688,"line_start":381,"line_end":381,"column_start":5,"column_end":69}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":343693,"byte_end":343701,"line_start":382,"line_end":382,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":343706,"byte_end":343715,"line_start":383,"line_end":383,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":695},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":344688,"byte_end":344718,"line_start":411,"line_end":411,"column_start":12,"column_end":42},"name":"from_num_seconds_from_midnight","qualname":"<NaiveTime>::from_num_seconds_from_midnight","value":"fn (secs: u32, nano: u32) -> NaiveTime","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from the number of seconds since midnight and nanosecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` from the number of seconds since midnight and nanosecond.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":344031,"byte_end":344116,"line_start":392,"line_end":392,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":344121,"byte_end":344124,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ The nanosecond part can exceed 1,000,000,000","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":344129,"byte_end":344177,"line_start":394,"line_end":394,"column_start":5,"column_end":53}},{"value":"/ in order to represent the [leap second](#leap-second-handling).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":344182,"byte_end":344249,"line_start":395,"line_end":395,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":344254,"byte_end":344257,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid number of seconds and/or nanosecond.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":344262,"byte_end":344320,"line_start":397,"line_end":397,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":344325,"byte_end":344328,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":344333,"byte_end":344346,"line_start":399,"line_end":399,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":344351,"byte_end":344354,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":344359,"byte_end":344367,"line_start":401,"line_end":401,"column_start":5,"column_end":13}},{"value":"/ use chrono::{NaiveTime, Timelike};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":344372,"byte_end":344410,"line_start":402,"line_end":402,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":344415,"byte_end":344418,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ let t = NaiveTime::from_num_seconds_from_midnight(86164, 12_345_678);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":344423,"byte_end":344496,"line_start":404,"line_end":404,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(t.hour(), 23);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":344501,"byte_end":344530,"line_start":405,"line_end":405,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(t.minute(), 56);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":344535,"byte_end":344566,"line_start":406,"line_end":406,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(t.second(), 4);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":344571,"byte_end":344601,"line_start":407,"line_end":407,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(t.nanosecond(), 12_345_678);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":344606,"byte_end":344649,"line_start":408,"line_end":408,"column_start":5,"column_end":48}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":344654,"byte_end":344662,"line_start":409,"line_end":409,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":344667,"byte_end":344676,"line_start":410,"line_end":410,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":696},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":345690,"byte_end":345724,"line_start":436,"line_end":436,"column_start":12,"column_end":46},"name":"from_num_seconds_from_midnight_opt","qualname":"<NaiveTime>::from_num_seconds_from_midnight_opt","value":"fn (secs: u32, nano: u32) -> Option<NaiveTime>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `NaiveTime` from the number of seconds since midnight and nanosecond.","sig":null,"attributes":[{"value":"/ Makes a new `NaiveTime` from the number of seconds since midnight and nanosecond.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":344856,"byte_end":344941,"line_start":415,"line_end":415,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":344946,"byte_end":344949,"line_start":416,"line_end":416,"column_start":5,"column_end":8}},{"value":"/ The nanosecond part can exceed 1,000,000,000","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":344954,"byte_end":345002,"line_start":417,"line_end":417,"column_start":5,"column_end":53}},{"value":"/ in order to represent the [leap second](#leap-second-handling).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":345007,"byte_end":345074,"line_start":418,"line_end":418,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":345079,"byte_end":345082,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid number of seconds and/or nanosecond.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":345087,"byte_end":345153,"line_start":420,"line_end":420,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":345158,"byte_end":345161,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":345166,"byte_end":345179,"line_start":422,"line_end":422,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":345184,"byte_end":345187,"line_start":423,"line_end":423,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":345192,"byte_end":345200,"line_start":424,"line_end":424,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveTime;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":345205,"byte_end":345231,"line_start":425,"line_end":425,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":345236,"byte_end":345239,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ let from_nsecs_opt = NaiveTime::from_num_seconds_from_midnight_opt;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":345244,"byte_end":345315,"line_start":427,"line_end":427,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":345320,"byte_end":345323,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ assert!(from_nsecs_opt(0, 0).is_some());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":345328,"byte_end":345372,"line_start":429,"line_end":429,"column_start":5,"column_end":49}},{"value":"/ assert!(from_nsecs_opt(86399, 999_999_999).is_some());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":345377,"byte_end":345435,"line_start":430,"line_end":430,"column_start":5,"column_end":63}},{"value":"/ assert!(from_nsecs_opt(86399, 1_999_999_999).is_some()); // a leap second after 23:59:59","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":345440,"byte_end":345532,"line_start":431,"line_end":431,"column_start":5,"column_end":97}},{"value":"/ assert!(from_nsecs_opt(86_400, 0).is_none());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":345537,"byte_end":345586,"line_start":432,"line_end":432,"column_start":5,"column_end":54}},{"value":"/ assert!(from_nsecs_opt(86399, 2_000_000_000).is_none());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":345591,"byte_end":345651,"line_start":433,"line_end":433,"column_start":5,"column_end":65}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":345656,"byte_end":345664,"line_start":434,"line_end":434,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":345669,"byte_end":345678,"line_start":435,"line_end":435,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":348394,"byte_end":348408,"line_start":504,"line_end":504,"column_start":12,"column_end":26},"name":"parse_from_str","qualname":"<NaiveTime>::parse_from_str","value":"fn (s: &str, fmt: &str) -> ParseResult<NaiveTime>","parent":null,"children":[],"decl_id":null,"docs":" Parses a string with the specified format string and returns a new `NaiveTime`.\n See the [`format::strftime` module](../format/strftime/index.html)\n on the supported escape sequences.","sig":null,"attributes":[{"value":"/ Parses a string with the specified format string and returns a new `NaiveTime`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":345920,"byte_end":346003,"line_start":443,"line_end":443,"column_start":5,"column_end":88}},{"value":"/ See the [`format::strftime` module](../format/strftime/index.html)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":346008,"byte_end":346078,"line_start":444,"line_end":444,"column_start":5,"column_end":75}},{"value":"/ on the supported escape sequences.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":346083,"byte_end":346121,"line_start":445,"line_end":445,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":346126,"byte_end":346129,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":346134,"byte_end":346147,"line_start":447,"line_end":447,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":346152,"byte_end":346155,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":346160,"byte_end":346168,"line_start":449,"line_end":449,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveTime;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":346173,"byte_end":346199,"line_start":450,"line_end":450,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":346204,"byte_end":346207,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ let parse_from_str = NaiveTime::parse_from_str;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":346212,"byte_end":346263,"line_start":452,"line_end":452,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":346268,"byte_end":346271,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(parse_from_str(\"23:56:04\", \"%H:%M:%S\"),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":346276,"byte_end":346330,"line_start":454,"line_end":454,"column_start":5,"column_end":59}},{"value":"/            Ok(NaiveTime::from_hms(23, 56, 4)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":346335,"byte_end":346386,"line_start":455,"line_end":455,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(parse_from_str(\"pm012345.6789\", \"%p%I%M%S%.f\"),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":346391,"byte_end":346453,"line_start":456,"line_end":456,"column_start":5,"column_end":67}},{"value":"/            Ok(NaiveTime::from_hms_micro(13, 23, 45, 678_900)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":346458,"byte_end":346525,"line_start":457,"line_end":457,"column_start":5,"column_end":72}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":346530,"byte_end":346538,"line_start":458,"line_end":458,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":346543,"byte_end":346546,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ Date and offset is ignored for the purpose of parsing.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":346551,"byte_end":346609,"line_start":460,"line_end":460,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":346614,"byte_end":346617,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":346622,"byte_end":346630,"line_start":462,"line_end":462,"column_start":5,"column_end":13}},{"value":"/ # use chrono::NaiveTime;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":346635,"byte_end":346663,"line_start":463,"line_end":463,"column_start":5,"column_end":33}},{"value":"/ # let parse_from_str = NaiveTime::parse_from_str;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":346668,"byte_end":346721,"line_start":464,"line_end":464,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(parse_from_str(\"2014-5-17T12:34:56+09:30\", \"%Y-%m-%dT%H:%M:%S%z\"),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":346726,"byte_end":346807,"line_start":465,"line_end":465,"column_start":5,"column_end":86}},{"value":"/            Ok(NaiveTime::from_hms(12, 34, 56)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":346812,"byte_end":346864,"line_start":466,"line_end":466,"column_start":5,"column_end":57}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":346869,"byte_end":346877,"line_start":467,"line_end":467,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":346882,"byte_end":346885,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ [Leap seconds](#leap-second-handling) are correctly handled by","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":346890,"byte_end":346956,"line_start":469,"line_end":469,"column_start":5,"column_end":71}},{"value":"/ treating any time of the form `hh:mm:60` as a leap second.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":346961,"byte_end":347023,"line_start":470,"line_end":470,"column_start":5,"column_end":67}},{"value":"/ (This equally applies to the formatting, so the round trip is possible.)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":347028,"byte_end":347104,"line_start":471,"line_end":471,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":347109,"byte_end":347112,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":347117,"byte_end":347125,"line_start":473,"line_end":473,"column_start":5,"column_end":13}},{"value":"/ # use chrono::NaiveTime;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":347130,"byte_end":347158,"line_start":474,"line_end":474,"column_start":5,"column_end":33}},{"value":"/ # let parse_from_str = NaiveTime::parse_from_str;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":347163,"byte_end":347216,"line_start":475,"line_end":475,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(parse_from_str(\"08:59:60.123\", \"%H:%M:%S%.f\"),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":347221,"byte_end":347282,"line_start":476,"line_end":476,"column_start":5,"column_end":66}},{"value":"/            Ok(NaiveTime::from_hms_milli(8, 59, 59, 1_123)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":347287,"byte_end":347351,"line_start":477,"line_end":477,"column_start":5,"column_end":69}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":347356,"byte_end":347364,"line_start":478,"line_end":478,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":347369,"byte_end":347372,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ Missing seconds are assumed to be zero,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":347377,"byte_end":347420,"line_start":480,"line_end":480,"column_start":5,"column_end":48}},{"value":"/ but out-of-bound times or insufficient fields are errors otherwise.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":347425,"byte_end":347496,"line_start":481,"line_end":481,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":347501,"byte_end":347504,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":347509,"byte_end":347517,"line_start":483,"line_end":483,"column_start":5,"column_end":13}},{"value":"/ # use chrono::NaiveTime;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":347522,"byte_end":347550,"line_start":484,"line_end":484,"column_start":5,"column_end":33}},{"value":"/ # let parse_from_str = NaiveTime::parse_from_str;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":347555,"byte_end":347608,"line_start":485,"line_end":485,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(parse_from_str(\"7:15\", \"%H:%M\"),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":347613,"byte_end":347660,"line_start":486,"line_end":486,"column_start":5,"column_end":52}},{"value":"/            Ok(NaiveTime::from_hms(7, 15, 0)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":347665,"byte_end":347715,"line_start":487,"line_end":487,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":347720,"byte_end":347723,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ assert!(parse_from_str(\"04m33s\", \"%Mm%Ss\").is_err());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":347728,"byte_end":347785,"line_start":489,"line_end":489,"column_start":5,"column_end":62}},{"value":"/ assert!(parse_from_str(\"12\", \"%H\").is_err());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":347790,"byte_end":347839,"line_start":490,"line_end":490,"column_start":5,"column_end":54}},{"value":"/ assert!(parse_from_str(\"17:60\", \"%H:%M\").is_err());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":347844,"byte_end":347899,"line_start":491,"line_end":491,"column_start":5,"column_end":60}},{"value":"/ assert!(parse_from_str(\"24:00:00\", \"%H:%M:%S\").is_err());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":347904,"byte_end":347965,"line_start":492,"line_end":492,"column_start":5,"column_end":66}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":347970,"byte_end":347978,"line_start":493,"line_end":493,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":347983,"byte_end":347986,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ All parsed fields should be consistent to each other, otherwise it's an error.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":347991,"byte_end":348073,"line_start":495,"line_end":495,"column_start":5,"column_end":87}},{"value":"/ Here `%H` is for 24-hour clocks, unlike `%I`,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":348078,"byte_end":348127,"line_start":496,"line_end":496,"column_start":5,"column_end":54}},{"value":"/ and thus can be independently determined without AM/PM.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":348132,"byte_end":348191,"line_start":497,"line_end":497,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":348196,"byte_end":348199,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":348204,"byte_end":348212,"line_start":499,"line_end":499,"column_start":5,"column_end":13}},{"value":"/ # use chrono::NaiveTime;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":348217,"byte_end":348245,"line_start":500,"line_end":500,"column_start":5,"column_end":33}},{"value":"/ # let parse_from_str = NaiveTime::parse_from_str;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":348250,"byte_end":348303,"line_start":501,"line_end":501,"column_start":5,"column_end":58}},{"value":"/ assert!(parse_from_str(\"13:07 AM\", \"%H:%M %p\").is_err());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":348308,"byte_end":348369,"line_start":502,"line_end":502,"column_start":5,"column_end":66}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":348374,"byte_end":348382,"line_start":503,"line_end":503,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":698},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":349536,"byte_end":349558,"line_start":532,"line_end":532,"column_start":12,"column_end":34},"name":"overflowing_add_signed","qualname":"<NaiveTime>::overflowing_add_signed","value":"fn (&self, mut rhs: OldDuration) -> (NaiveTime, i64)","parent":null,"children":[],"decl_id":null,"docs":" Adds given `Duration` to the current time,\n and also returns the number of *seconds*\n in the integral number of days ignored from the addition.\n (We cannot return `Duration` because it is subject to overflow or underflow.)","sig":null,"attributes":[{"value":"/ Adds given `Duration` to the current time,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":348596,"byte_end":348642,"line_start":510,"line_end":510,"column_start":5,"column_end":51}},{"value":"/ and also returns the number of *seconds*","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":348647,"byte_end":348691,"line_start":511,"line_end":511,"column_start":5,"column_end":49}},{"value":"/ in the integral number of days ignored from the addition.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":348696,"byte_end":348757,"line_start":512,"line_end":512,"column_start":5,"column_end":66}},{"value":"/ (We cannot return `Duration` because it is subject to overflow or underflow.)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":348762,"byte_end":348843,"line_start":513,"line_end":513,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":348848,"byte_end":348851,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":348856,"byte_end":348869,"line_start":515,"line_end":515,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":348874,"byte_end":348877,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":348882,"byte_end":348890,"line_start":517,"line_end":517,"column_start":5,"column_end":13}},{"value":"/ # extern crate chrono; fn main() {","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":348895,"byte_end":348933,"line_start":518,"line_end":518,"column_start":5,"column_end":43}},{"value":"/ use chrono::{Duration, NaiveTime};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":348938,"byte_end":348976,"line_start":519,"line_end":519,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":348981,"byte_end":348984,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ let from_hms = NaiveTime::from_hms;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":348989,"byte_end":349028,"line_start":521,"line_end":521,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":349033,"byte_end":349036,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from_hms(3, 4, 5).overflowing_add_signed(Duration::hours(11)),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":349041,"byte_end":349118,"line_start":523,"line_end":523,"column_start":5,"column_end":82}},{"value":"/            (from_hms(14, 4, 5), 0));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":349123,"byte_end":349163,"line_start":524,"line_end":524,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(from_hms(3, 4, 5).overflowing_add_signed(Duration::hours(23)),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":349168,"byte_end":349245,"line_start":525,"line_end":525,"column_start":5,"column_end":82}},{"value":"/            (from_hms(2, 4, 5), 86_400));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":349250,"byte_end":349294,"line_start":526,"line_end":526,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(from_hms(3, 4, 5).overflowing_add_signed(Duration::hours(-7)),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":349299,"byte_end":349376,"line_start":527,"line_end":527,"column_start":5,"column_end":82}},{"value":"/            (from_hms(20, 4, 5), -86_400));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":349381,"byte_end":349427,"line_start":528,"line_end":528,"column_start":5,"column_end":51}},{"value":"/ # }","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":349432,"byte_end":349439,"line_start":529,"line_end":529,"column_start":5,"column_end":12}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":349444,"byte_end":349452,"line_start":530,"line_end":530,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":353032,"byte_end":353054,"line_start":617,"line_end":617,"column_start":12,"column_end":34},"name":"overflowing_sub_signed","qualname":"<NaiveTime>::overflowing_sub_signed","value":"fn (&self, rhs: OldDuration) -> (NaiveTime, i64)","parent":null,"children":[],"decl_id":null,"docs":" Subtracts given `Duration` from the current time,\n and also returns the number of *seconds*\n in the integral number of days ignored from the subtraction.\n (We cannot return `Duration` because it is subject to overflow or underflow.)","sig":null,"attributes":[{"value":"/ Subtracts given `Duration` from the current time,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":352141,"byte_end":352194,"line_start":595,"line_end":595,"column_start":5,"column_end":58}},{"value":"/ and also returns the number of *seconds*","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":352199,"byte_end":352243,"line_start":596,"line_end":596,"column_start":5,"column_end":49}},{"value":"/ in the integral number of days ignored from the subtraction.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":352248,"byte_end":352312,"line_start":597,"line_end":597,"column_start":5,"column_end":69}},{"value":"/ (We cannot return `Duration` because it is subject to overflow or underflow.)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":352317,"byte_end":352398,"line_start":598,"line_end":598,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":352403,"byte_end":352406,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":352411,"byte_end":352424,"line_start":600,"line_end":600,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":352429,"byte_end":352432,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":352437,"byte_end":352445,"line_start":602,"line_end":602,"column_start":5,"column_end":13}},{"value":"/ # extern crate chrono; fn main() {","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":352450,"byte_end":352488,"line_start":603,"line_end":603,"column_start":5,"column_end":43}},{"value":"/ use chrono::{Duration, NaiveTime};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":352493,"byte_end":352531,"line_start":604,"line_end":604,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":352536,"byte_end":352539,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ let from_hms = NaiveTime::from_hms;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":352544,"byte_end":352583,"line_start":606,"line_end":606,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":352588,"byte_end":352591,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from_hms(3, 4, 5).overflowing_sub_signed(Duration::hours(2)),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":352596,"byte_end":352672,"line_start":608,"line_end":608,"column_start":5,"column_end":81}},{"value":"/            (from_hms(1, 4, 5), 0));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":352677,"byte_end":352716,"line_start":609,"line_end":609,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(from_hms(3, 4, 5).overflowing_sub_signed(Duration::hours(17)),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":352721,"byte_end":352798,"line_start":610,"line_end":610,"column_start":5,"column_end":82}},{"value":"/            (from_hms(10, 4, 5), 86_400));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":352803,"byte_end":352848,"line_start":611,"line_end":611,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(from_hms(3, 4, 5).overflowing_sub_signed(Duration::hours(-22)),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":352853,"byte_end":352931,"line_start":612,"line_end":612,"column_start":5,"column_end":83}},{"value":"/            (from_hms(1, 4, 5), -86_400));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":352936,"byte_end":352981,"line_start":613,"line_end":613,"column_start":5,"column_end":50}},{"value":"/ # }","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":352986,"byte_end":352993,"line_start":614,"line_end":614,"column_start":5,"column_end":12}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":352998,"byte_end":353006,"line_start":615,"line_end":615,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":353011,"byte_end":353020,"line_start":616,"line_end":616,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":700},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":356036,"byte_end":356057,"line_start":680,"line_end":680,"column_start":12,"column_end":33},"name":"signed_duration_since","qualname":"<NaiveTime>::signed_duration_since","value":"fn (self, rhs: NaiveTime) -> OldDuration","parent":null,"children":[],"decl_id":null,"docs":" Subtracts another `NaiveTime` from the current time.\n Returns a `Duration` within +/- 1 day.\n This does not overflow or underflow at all.","sig":null,"attributes":[{"value":"/ Subtracts another `NaiveTime` from the current time.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":353246,"byte_end":353302,"line_start":622,"line_end":622,"column_start":5,"column_end":61}},{"value":"/ Returns a `Duration` within +/- 1 day.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":353307,"byte_end":353349,"line_start":623,"line_end":623,"column_start":5,"column_end":47}},{"value":"/ This does not overflow or underflow at all.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":353354,"byte_end":353401,"line_start":624,"line_end":624,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":353406,"byte_end":353409,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ As a part of Chrono's [leap second handling](#leap-second-handling),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":353414,"byte_end":353486,"line_start":626,"line_end":626,"column_start":5,"column_end":77}},{"value":"/ the subtraction assumes that **there is no leap second ever**,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":353491,"byte_end":353557,"line_start":627,"line_end":627,"column_start":5,"column_end":71}},{"value":"/ except when any of the `NaiveTime`s themselves represents a leap second","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":353562,"byte_end":353637,"line_start":628,"line_end":628,"column_start":5,"column_end":80}},{"value":"/ in which case the assumption becomes that","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":353642,"byte_end":353687,"line_start":629,"line_end":629,"column_start":5,"column_end":50}},{"value":"/ **there are exactly one (or two) leap second(s) ever**.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":353692,"byte_end":353751,"line_start":630,"line_end":630,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":353756,"byte_end":353759,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":353764,"byte_end":353777,"line_start":632,"line_end":632,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":353782,"byte_end":353785,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":353790,"byte_end":353798,"line_start":634,"line_end":634,"column_start":5,"column_end":13}},{"value":"/ # extern crate chrono; fn main() {","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":353803,"byte_end":353841,"line_start":635,"line_end":635,"column_start":5,"column_end":43}},{"value":"/ use chrono::{Duration, NaiveTime};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":353846,"byte_end":353884,"line_start":636,"line_end":636,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":353889,"byte_end":353892,"line_start":637,"line_end":637,"column_start":5,"column_end":8}},{"value":"/ let from_hmsm = NaiveTime::from_hms_milli;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":353897,"byte_end":353943,"line_start":638,"line_end":638,"column_start":5,"column_end":51}},{"value":"/ let since = NaiveTime::signed_duration_since;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":353948,"byte_end":353997,"line_start":639,"line_end":639,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":354002,"byte_end":354005,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(3, 5, 7, 900)),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":354010,"byte_end":354081,"line_start":641,"line_end":641,"column_start":5,"column_end":76}},{"value":"/            Duration::zero());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":354086,"byte_end":354119,"line_start":642,"line_end":642,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(3, 5, 7, 875)),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":354124,"byte_end":354195,"line_start":643,"line_end":643,"column_start":5,"column_end":76}},{"value":"/            Duration::milliseconds(25));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":354200,"byte_end":354243,"line_start":644,"line_end":644,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(3, 5, 6, 925)),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":354248,"byte_end":354319,"line_start":645,"line_end":645,"column_start":5,"column_end":76}},{"value":"/            Duration::milliseconds(975));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":354324,"byte_end":354368,"line_start":646,"line_end":646,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(3, 5, 0, 900)),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":354373,"byte_end":354444,"line_start":647,"line_end":647,"column_start":5,"column_end":76}},{"value":"/            Duration::seconds(7));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":354449,"byte_end":354486,"line_start":648,"line_end":648,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(3, 0, 7, 900)),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":354491,"byte_end":354562,"line_start":649,"line_end":649,"column_start":5,"column_end":76}},{"value":"/            Duration::seconds(5 * 60));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":354567,"byte_end":354609,"line_start":650,"line_end":650,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(0, 5, 7, 900)),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":354614,"byte_end":354685,"line_start":651,"line_end":651,"column_start":5,"column_end":76}},{"value":"/            Duration::seconds(3 * 3600));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":354690,"byte_end":354734,"line_start":652,"line_end":652,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(4, 5, 7, 900)),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":354739,"byte_end":354810,"line_start":653,"line_end":653,"column_start":5,"column_end":76}},{"value":"/            Duration::seconds(-3600));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":354815,"byte_end":354856,"line_start":654,"line_end":654,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(since(from_hmsm(3, 5, 7, 900), from_hmsm(2, 4, 6, 800)),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":354861,"byte_end":354932,"line_start":655,"line_end":655,"column_start":5,"column_end":76}},{"value":"/            Duration::seconds(3600 + 60 + 1) + Duration::milliseconds(100));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":354937,"byte_end":355016,"line_start":656,"line_end":656,"column_start":5,"column_end":84}},{"value":"/ # }","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":355021,"byte_end":355028,"line_start":657,"line_end":657,"column_start":5,"column_end":12}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":355033,"byte_end":355041,"line_start":658,"line_end":658,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":355046,"byte_end":355049,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ Leap seconds are handled, but the subtraction assumes that","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":355054,"byte_end":355116,"line_start":660,"line_end":660,"column_start":5,"column_end":67}},{"value":"/ there were no other leap seconds happened.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":355121,"byte_end":355167,"line_start":661,"line_end":661,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":355172,"byte_end":355175,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":355180,"byte_end":355188,"line_start":663,"line_end":663,"column_start":5,"column_end":13}},{"value":"/ # extern crate chrono; fn main() {","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":355193,"byte_end":355231,"line_start":664,"line_end":664,"column_start":5,"column_end":43}},{"value":"/ # use chrono::{Duration, NaiveTime};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":355236,"byte_end":355276,"line_start":665,"line_end":665,"column_start":5,"column_end":45}},{"value":"/ # let from_hmsm = NaiveTime::from_hms_milli;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":355281,"byte_end":355329,"line_start":666,"line_end":666,"column_start":5,"column_end":53}},{"value":"/ # let since = NaiveTime::signed_duration_since;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":355334,"byte_end":355385,"line_start":667,"line_end":667,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(since(from_hmsm(3, 0, 59, 1_000), from_hmsm(3, 0, 59, 0)),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":355390,"byte_end":355463,"line_start":668,"line_end":668,"column_start":5,"column_end":78}},{"value":"/            Duration::seconds(1));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":355468,"byte_end":355505,"line_start":669,"line_end":669,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(since(from_hmsm(3, 0, 59, 1_500), from_hmsm(3, 0, 59, 0)),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":355510,"byte_end":355583,"line_start":670,"line_end":670,"column_start":5,"column_end":78}},{"value":"/            Duration::milliseconds(1500));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":355588,"byte_end":355633,"line_start":671,"line_end":671,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(since(from_hmsm(3, 0, 59, 1_000), from_hmsm(3, 0, 0, 0)),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":355638,"byte_end":355710,"line_start":672,"line_end":672,"column_start":5,"column_end":77}},{"value":"/            Duration::seconds(60));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":355715,"byte_end":355753,"line_start":673,"line_end":673,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(since(from_hmsm(3, 0, 0, 0), from_hmsm(2, 59, 59, 1_000)),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":355758,"byte_end":355831,"line_start":674,"line_end":674,"column_start":5,"column_end":78}},{"value":"/            Duration::seconds(1));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":355836,"byte_end":355873,"line_start":675,"line_end":675,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(since(from_hmsm(3, 0, 59, 1_000), from_hmsm(2, 59, 59, 1_000)),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":355878,"byte_end":355956,"line_start":676,"line_end":676,"column_start":5,"column_end":83}},{"value":"/            Duration::seconds(61));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":355961,"byte_end":355999,"line_start":677,"line_end":677,"column_start":5,"column_end":43}},{"value":"/ # }","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":356004,"byte_end":356011,"line_start":678,"line_end":678,"column_start":5,"column_end":12}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":356016,"byte_end":356024,"line_start":679,"line_end":679,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":358713,"byte_end":358730,"line_start":747,"line_end":747,"column_start":12,"column_end":29},"name":"format_with_items","qualname":"<NaiveTime>::format_with_items","value":"fn <'a, I, B> (&self, items: I) -> DelayedFormat<I>","parent":null,"children":[],"decl_id":null,"docs":" Formats the time with the specified formatting items.\n Otherwise it is the same as the ordinary [`format`](#method.format) method.","sig":null,"attributes":[{"value":"/ Formats the time with the specified formatting items.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":357534,"byte_end":357591,"line_start":718,"line_end":718,"column_start":5,"column_end":62}},{"value":"/ Otherwise it is the same as the ordinary [`format`](#method.format) method.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":357596,"byte_end":357675,"line_start":719,"line_end":719,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":357680,"byte_end":357683,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ The `Iterator` of items should be `Clone`able,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":357688,"byte_end":357738,"line_start":721,"line_end":721,"column_start":5,"column_end":55}},{"value":"/ since the resulting `DelayedFormat` value may be formatted multiple times.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":357743,"byte_end":357821,"line_start":722,"line_end":722,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":357826,"byte_end":357829,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":357834,"byte_end":357847,"line_start":724,"line_end":724,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":357852,"byte_end":357855,"line_start":725,"line_end":725,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":357860,"byte_end":357868,"line_start":726,"line_end":726,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveTime;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":357873,"byte_end":357899,"line_start":727,"line_end":727,"column_start":5,"column_end":31}},{"value":"/ use chrono::format::strftime::StrftimeItems;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":357904,"byte_end":357952,"line_start":728,"line_end":728,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":357957,"byte_end":357960,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ let fmt = StrftimeItems::new(\"%H:%M:%S\");","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":357965,"byte_end":358010,"line_start":730,"line_end":730,"column_start":5,"column_end":50}},{"value":"/ let t = NaiveTime::from_hms(23, 56, 4);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":358015,"byte_end":358058,"line_start":731,"line_end":731,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(t.format_with_items(fmt.clone()).to_string(), \"23:56:04\");","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":358063,"byte_end":358136,"line_start":732,"line_end":732,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(t.format(\"%H:%M:%S\").to_string(),             \"23:56:04\");","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":358141,"byte_end":358214,"line_start":733,"line_end":733,"column_start":5,"column_end":78}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":358219,"byte_end":358227,"line_start":734,"line_end":734,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":358232,"byte_end":358235,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ The resulting `DelayedFormat` can be formatted directly via the `Display` trait.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":358240,"byte_end":358324,"line_start":736,"line_end":736,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":358329,"byte_end":358332,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":358337,"byte_end":358345,"line_start":738,"line_end":738,"column_start":5,"column_end":13}},{"value":"/ # use chrono::NaiveTime;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":358350,"byte_end":358378,"line_start":739,"line_end":739,"column_start":5,"column_end":33}},{"value":"/ # use chrono::format::strftime::StrftimeItems;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":358383,"byte_end":358433,"line_start":740,"line_end":740,"column_start":5,"column_end":55}},{"value":"/ # let fmt = StrftimeItems::new(\"%H:%M:%S\").clone();","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":358438,"byte_end":358493,"line_start":741,"line_end":741,"column_start":5,"column_end":60}},{"value":"/ # let t = NaiveTime::from_hms(23, 56, 4);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":358498,"byte_end":358543,"line_start":742,"line_end":742,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(format!(\"{}\", t.format_with_items(fmt)), \"23:56:04\");","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":358548,"byte_end":358616,"line_start":743,"line_end":743,"column_start":5,"column_end":73}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":358621,"byte_end":358629,"line_start":744,"line_end":744,"column_start":5,"column_end":13}},{"value":"cfg(any(feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":358634,"byte_end":358687,"line_start":745,"line_end":745,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":358692,"byte_end":358701,"line_start":746,"line_end":746,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":360551,"byte_end":360557,"line_start":791,"line_end":791,"column_start":12,"column_end":18},"name":"format","qualname":"<NaiveTime>::format","value":"fn <'a> (&self, fmt: &'a str) -> DelayedFormat<StrftimeItems<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Formats the time with the specified format string.\n See the [`format::strftime` module](../format/strftime/index.html)\n on the supported escape sequences.","sig":null,"attributes":[{"value":"/ Formats the time with the specified format string.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":358926,"byte_end":358980,"line_start":755,"line_end":755,"column_start":5,"column_end":59}},{"value":"/ See the [`format::strftime` module](../format/strftime/index.html)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":358985,"byte_end":359055,"line_start":756,"line_end":756,"column_start":5,"column_end":75}},{"value":"/ on the supported escape sequences.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":359060,"byte_end":359098,"line_start":757,"line_end":757,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":359103,"byte_end":359106,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ This returns a `DelayedFormat`,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":359111,"byte_end":359146,"line_start":759,"line_end":759,"column_start":5,"column_end":40}},{"value":"/ which gets converted to a string only when actual formatting happens.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":359151,"byte_end":359224,"line_start":760,"line_end":760,"column_start":5,"column_end":78}},{"value":"/ You may use the `to_string` method to get a `String`,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":359229,"byte_end":359286,"line_start":761,"line_end":761,"column_start":5,"column_end":62}},{"value":"/ or just feed it into `print!` and other formatting macros.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":359291,"byte_end":359353,"line_start":762,"line_end":762,"column_start":5,"column_end":67}},{"value":"/ (In this way it avoids the redundant memory allocation.)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":359358,"byte_end":359418,"line_start":763,"line_end":763,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":359423,"byte_end":359426,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ A wrong format string does *not* issue an error immediately.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":359431,"byte_end":359495,"line_start":765,"line_end":765,"column_start":5,"column_end":69}},{"value":"/ Rather, converting or formatting the `DelayedFormat` fails.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":359500,"byte_end":359563,"line_start":766,"line_end":766,"column_start":5,"column_end":68}},{"value":"/ You are recommended to immediately use `DelayedFormat` for this reason.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":359568,"byte_end":359643,"line_start":767,"line_end":767,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":359648,"byte_end":359651,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":359656,"byte_end":359669,"line_start":769,"line_end":769,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":359674,"byte_end":359677,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":359682,"byte_end":359690,"line_start":771,"line_end":771,"column_start":5,"column_end":13}},{"value":"/ use chrono::NaiveTime;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":359695,"byte_end":359721,"line_start":772,"line_end":772,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":359726,"byte_end":359729,"line_start":773,"line_end":773,"column_start":5,"column_end":8}},{"value":"/ let t = NaiveTime::from_hms_nano(23, 56, 4, 12_345_678);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":359734,"byte_end":359794,"line_start":774,"line_end":774,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(t.format(\"%H:%M:%S\").to_string(), \"23:56:04\");","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":359799,"byte_end":359860,"line_start":775,"line_end":775,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(t.format(\"%H:%M:%S%.6f\").to_string(), \"23:56:04.012345\");","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":359865,"byte_end":359937,"line_start":776,"line_end":776,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(t.format(\"%-I:%M %p\").to_string(), \"11:56 PM\");","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":359942,"byte_end":360004,"line_start":777,"line_end":777,"column_start":5,"column_end":67}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":360009,"byte_end":360017,"line_start":778,"line_end":778,"column_start":5,"column_end":13}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":360022,"byte_end":360025,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ The resulting `DelayedFormat` can be formatted directly via the `Display` trait.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":360030,"byte_end":360114,"line_start":780,"line_end":780,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":360119,"byte_end":360122,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":360127,"byte_end":360135,"line_start":782,"line_end":782,"column_start":5,"column_end":13}},{"value":"/ # use chrono::NaiveTime;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":360140,"byte_end":360168,"line_start":783,"line_end":783,"column_start":5,"column_end":33}},{"value":"/ # let t = NaiveTime::from_hms_nano(23, 56, 4, 12_345_678);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":360173,"byte_end":360235,"line_start":784,"line_end":784,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(format!(\"{}\", t.format(\"%H:%M:%S\")), \"23:56:04\");","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":360240,"byte_end":360304,"line_start":785,"line_end":785,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(format!(\"{}\", t.format(\"%H:%M:%S%.6f\")), \"23:56:04.012345\");","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":360309,"byte_end":360384,"line_start":786,"line_end":786,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(format!(\"{}\", t.format(\"%-I:%M %p\")), \"11:56 PM\");","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":360389,"byte_end":360454,"line_start":787,"line_end":787,"column_start":5,"column_end":70}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":360459,"byte_end":360467,"line_start":788,"line_end":788,"column_start":5,"column_end":13}},{"value":"cfg(any(feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":360472,"byte_end":360525,"line_start":789,"line_end":789,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":360530,"byte_end":360539,"line_start":790,"line_end":790,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1770},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":401502,"byte_end":401506,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"Date","qualname":"::date::Date","value":"Date {  }","parent":null,"children":[{"krate":0,"index":1772},{"krate":0,"index":1773}],"decl_id":null,"docs":" ISO 8601 calendar date with time zone.","sig":null,"attributes":[{"value":"/ ISO 8601 calendar date with time zone.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":400129,"byte_end":400171,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":400172,"byte_end":400175,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ This type should be considered ambiguous at best,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":400176,"byte_end":400229,"line_start":24,"line_end":24,"column_start":1,"column_end":54}},{"value":"/ due to the inherent lack of precision required for the time zone resolution.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":400230,"byte_end":400310,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ For serialization and deserialization uses, it is best to use `NaiveDate` instead.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":400311,"byte_end":400397,"line_start":26,"line_end":26,"column_start":1,"column_end":87}},{"value":"/ There are some guarantees on the usage of `Date<Tz>`:","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":400398,"byte_end":400455,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":400456,"byte_end":400459,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ - If properly constructed via `TimeZone::ymd` and others without an error,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":400460,"byte_end":400538,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/   the corresponding local date should exist for at least a moment.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":400539,"byte_end":400609,"line_start":30,"line_end":30,"column_start":1,"column_end":71}},{"value":"/   (It may still have a gap from the offset changes.)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":400610,"byte_end":400666,"line_start":31,"line_end":31,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":400667,"byte_end":400670,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ - The `TimeZone` is free to assign *any* `Offset` to the local date,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":400671,"byte_end":400743,"line_start":33,"line_end":33,"column_start":1,"column_end":73}},{"value":"/   as long as that offset did occur in given day.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":400744,"byte_end":400796,"line_start":34,"line_end":34,"column_start":1,"column_end":53}},{"value":"/   For example, if `2015-03-08T01:59-08:00` is followed by `2015-03-08T03:00-07:00`,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":400797,"byte_end":400884,"line_start":35,"line_end":35,"column_start":1,"column_end":88}},{"value":"/   it may produce either `2015-03-08-08:00` or `2015-03-08-07:00`","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":400885,"byte_end":400953,"line_start":36,"line_end":36,"column_start":1,"column_end":69}},{"value":"/   but *not* `2015-03-08+00:00` and others.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":400954,"byte_end":401000,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":401001,"byte_end":401004,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ - Once constructed as a full `DateTime`,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":401005,"byte_end":401049,"line_start":39,"line_end":39,"column_start":1,"column_end":45}},{"value":"/   `DateTime::date` and other associated methods should return those for the original `Date`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":401050,"byte_end":401146,"line_start":40,"line_end":40,"column_start":1,"column_end":97}},{"value":"/   For example, if `dt = tz.ymd(y,m,d).hms(h,n,s)` were valid, `dt.date() == tz.ymd(y,m,d)`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":401147,"byte_end":401242,"line_start":41,"line_end":41,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":401243,"byte_end":401246,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ - The date is timezone-agnostic up to one day (i.e. practically always),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":401247,"byte_end":401323,"line_start":43,"line_end":43,"column_start":1,"column_end":77}},{"value":"/   so the local date and UTC date should be equal for most cases","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":401324,"byte_end":401391,"line_start":44,"line_end":44,"column_start":1,"column_end":68}},{"value":"/   even though the raw calculation between `NaiveDate` and `Duration` may not.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":401392,"byte_end":401473,"line_start":45,"line_end":45,"column_start":1,"column_end":82}}]},{"kind":"Const","id":{"krate":0,"index":779},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":401614,"byte_end":401622,"line_start":53,"line_end":53,"column_start":11,"column_end":19},"name":"MIN_DATE","qualname":"::date::MIN_DATE","value":"Date<Utc>","parent":null,"children":[],"decl_id":null,"docs":" The minimum possible `Date`.\n","sig":null,"attributes":[{"value":"/ The minimum possible `Date`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":401571,"byte_end":401603,"line_start":52,"line_end":52,"column_start":1,"column_end":33}}]},{"kind":"Const","id":{"krate":0,"index":780},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":401724,"byte_end":401732,"line_start":55,"line_end":55,"column_start":11,"column_end":19},"name":"MAX_DATE","qualname":"::date::MAX_DATE","value":"Date<Utc>","parent":null,"children":[],"decl_id":null,"docs":" The maximum possible `Date`.\n","sig":null,"attributes":[{"value":"/ The maximum possible `Date`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":401681,"byte_end":401713,"line_start":54,"line_end":54,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":783},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":402080,"byte_end":402088,"line_start":63,"line_end":63,"column_start":12,"column_end":20},"name":"from_utc","qualname":"<Date<Tz>>::from_utc","value":"fn (date: NaiveDate, offset: Tz::Offset) -> Date<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `Date` with given *UTC* date and offset.\n The local date should be constructed via the `TimeZone` trait.\n","sig":null,"attributes":[{"value":"/ Makes a new `Date` with given *UTC* date and offset.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":401826,"byte_end":401882,"line_start":58,"line_end":58,"column_start":5,"column_end":61}},{"value":"/ The local date should be constructed via the `TimeZone` trait.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":401887,"byte_end":401953,"line_start":59,"line_end":59,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":402059,"byte_end":402068,"line_start":62,"line_end":62,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":784},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":402389,"byte_end":402397,"line_start":72,"line_end":72,"column_start":12,"column_end":20},"name":"and_time","qualname":"<Date<Tz>>::and_time","value":"fn (&self, time: NaiveTime) -> Option<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date and given `NaiveTime`.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date and given `NaiveTime`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":402195,"byte_end":402266,"line_start":67,"line_end":67,"column_start":5,"column_end":76}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":402271,"byte_end":402319,"line_start":68,"line_end":68,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":402324,"byte_end":402327,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid datetime.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":402332,"byte_end":402363,"line_start":70,"line_end":70,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":402368,"byte_end":402377,"line_start":71,"line_end":71,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":785},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":402794,"byte_end":402801,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"and_hms","qualname":"<Date<Tz>>::and_hms","value":"fn (&self, hour: u32, min: u32, sec: u32) -> DateTime<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute and second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute and second.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":402579,"byte_end":402653,"line_start":77,"line_end":77,"column_start":5,"column_end":79}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":402658,"byte_end":402706,"line_start":78,"line_end":78,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":402711,"byte_end":402714,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute and/or second.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":402719,"byte_end":402768,"line_start":80,"line_end":80,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":402773,"byte_end":402782,"line_start":81,"line_end":81,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":786},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":403156,"byte_end":403167,"line_start":91,"line_end":91,"column_start":12,"column_end":23},"name":"and_hms_opt","qualname":"<Date<Tz>>::and_hms_opt","value":"fn (&self, hour: u32, min: u32, sec: u32) -> Option<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute and second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute and second.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":402933,"byte_end":403007,"line_start":86,"line_end":86,"column_start":5,"column_end":79}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":403012,"byte_end":403060,"line_start":87,"line_end":87,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":403065,"byte_end":403068,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute and/or second.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":403073,"byte_end":403130,"line_start":89,"line_end":89,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":403135,"byte_end":403144,"line_start":90,"line_end":90,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":788},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":403654,"byte_end":403667,"line_start":101,"line_end":101,"column_start":12,"column_end":25},"name":"and_hms_milli","qualname":"<Date<Tz>>::and_hms_milli","value":"fn (&self, hour: u32, min: u32, sec: u32, milli: u32) -> DateTime<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and millisecond.\n The millisecond part can exceed 1,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute, second and millisecond.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":403328,"byte_end":403415,"line_start":95,"line_end":95,"column_start":5,"column_end":92}},{"value":"/ The millisecond part can exceed 1,000 in order to represent the leap second.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":403420,"byte_end":403500,"line_start":96,"line_end":96,"column_start":5,"column_end":85}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":403505,"byte_end":403553,"line_start":97,"line_end":97,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":403558,"byte_end":403561,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute, second and/or millisecond.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":403566,"byte_end":403628,"line_start":99,"line_end":99,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":403633,"byte_end":403642,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":789},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":404158,"byte_end":404175,"line_start":111,"line_end":111,"column_start":12,"column_end":29},"name":"and_hms_milli_opt","qualname":"<Date<Tz>>::and_hms_milli_opt","value":"fn (&self, hour: u32, min: u32, sec: u32, milli: u32) -> Option<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and millisecond.\n The millisecond part can exceed 1,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute, second and millisecond.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":403824,"byte_end":403911,"line_start":105,"line_end":105,"column_start":5,"column_end":92}},{"value":"/ The millisecond part can exceed 1,000 in order to represent the leap second.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":403916,"byte_end":403996,"line_start":106,"line_end":106,"column_start":5,"column_end":85}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":404001,"byte_end":404049,"line_start":107,"line_end":107,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":404054,"byte_end":404057,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute, second and/or millisecond.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":404062,"byte_end":404132,"line_start":109,"line_end":109,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":404137,"byte_end":404146,"line_start":110,"line_end":110,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":791},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":404738,"byte_end":404751,"line_start":127,"line_end":127,"column_start":12,"column_end":25},"name":"and_hms_micro","qualname":"<Date<Tz>>::and_hms_micro","value":"fn (&self, hour: u32, min: u32, sec: u32, micro: u32) -> DateTime<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and microsecond.\n The microsecond part can exceed 1,000,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute, second and microsecond.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":404408,"byte_end":404495,"line_start":121,"line_end":121,"column_start":5,"column_end":92}},{"value":"/ The microsecond part can exceed 1,000,000 in order to represent the leap second.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":404500,"byte_end":404584,"line_start":122,"line_end":122,"column_start":5,"column_end":89}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":404589,"byte_end":404637,"line_start":123,"line_end":123,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":404642,"byte_end":404645,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute, second and/or microsecond.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":404650,"byte_end":404712,"line_start":125,"line_end":125,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":404717,"byte_end":404726,"line_start":126,"line_end":126,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":792},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":405246,"byte_end":405263,"line_start":137,"line_end":137,"column_start":12,"column_end":29},"name":"and_hms_micro_opt","qualname":"<Date<Tz>>::and_hms_micro_opt","value":"fn (&self, hour: u32, min: u32, sec: u32, micro: u32) -> Option<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and microsecond.\n The microsecond part can exceed 1,000,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute, second and microsecond.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":404908,"byte_end":404995,"line_start":131,"line_end":131,"column_start":5,"column_end":92}},{"value":"/ The microsecond part can exceed 1,000,000 in order to represent the leap second.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":405000,"byte_end":405084,"line_start":132,"line_end":132,"column_start":5,"column_end":89}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":405089,"byte_end":405137,"line_start":133,"line_end":133,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":405142,"byte_end":405145,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute, second and/or microsecond.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":405150,"byte_end":405220,"line_start":135,"line_end":135,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":405225,"byte_end":405234,"line_start":136,"line_end":136,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":794},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":405827,"byte_end":405839,"line_start":153,"line_end":153,"column_start":12,"column_end":24},"name":"and_hms_nano","qualname":"<Date<Tz>>::and_hms_nano","value":"fn (&self, hour: u32, min: u32, sec: u32, nano: u32) -> DateTime<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.\n The nanosecond part can exceed 1,000,000,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":405496,"byte_end":405582,"line_start":147,"line_end":147,"column_start":5,"column_end":91}},{"value":"/ The nanosecond part can exceed 1,000,000,000 in order to represent the leap second.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":405587,"byte_end":405674,"line_start":148,"line_end":148,"column_start":5,"column_end":92}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":405679,"byte_end":405727,"line_start":149,"line_end":149,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":405732,"byte_end":405735,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ Panics on invalid hour, minute, second and/or nanosecond.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":405740,"byte_end":405801,"line_start":151,"line_end":151,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":405806,"byte_end":405815,"line_start":152,"line_end":152,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":795},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":406332,"byte_end":406348,"line_start":163,"line_end":163,"column_start":12,"column_end":28},"name":"and_hms_nano_opt","qualname":"<Date<Tz>>::and_hms_nano_opt","value":"fn (&self, hour: u32, min: u32, sec: u32, nano: u32) -> Option<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.\n The nanosecond part can exceed 1,000,000,000 in order to represent the leap second.\n The offset in the current date is preserved.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` from the current date, hour, minute, second and nanosecond.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":405993,"byte_end":406079,"line_start":157,"line_end":157,"column_start":5,"column_end":91}},{"value":"/ The nanosecond part can exceed 1,000,000,000 in order to represent the leap second.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":406084,"byte_end":406171,"line_start":158,"line_end":158,"column_start":5,"column_end":92}},{"value":"/ The offset in the current date is preserved.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":406176,"byte_end":406224,"line_start":159,"line_end":159,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":406229,"byte_end":406232,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Returns `None` on invalid hour, minute, second and/or nanosecond.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":406237,"byte_end":406306,"line_start":161,"line_end":161,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":406311,"byte_end":406320,"line_start":162,"line_end":162,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":797},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":406712,"byte_end":406716,"line_start":177,"line_end":177,"column_start":12,"column_end":16},"name":"succ","qualname":"<Date<Tz>>::succ","value":"fn (&self) -> Date<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `Date` for the next date.","sig":null,"attributes":[{"value":"/ Makes a new `Date` for the next date.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":406578,"byte_end":406619,"line_start":173,"line_end":173,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":406624,"byte_end":406627,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ Panics when `self` is the last representable date.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":406632,"byte_end":406686,"line_start":175,"line_end":175,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":406691,"byte_end":406700,"line_start":176,"line_end":176,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":798},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":406938,"byte_end":406946,"line_start":185,"line_end":185,"column_start":12,"column_end":20},"name":"succ_opt","qualname":"<Date<Tz>>::succ_opt","value":"fn (&self) -> Option<Date<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `Date` for the next date.","sig":null,"attributes":[{"value":"/ Makes a new `Date` for the next date.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":406796,"byte_end":406837,"line_start":181,"line_end":181,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":406842,"byte_end":406845,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when `self` is the last representable date.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":406850,"byte_end":406912,"line_start":183,"line_end":183,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":406917,"byte_end":406926,"line_start":184,"line_end":184,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":800},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":407206,"byte_end":407210,"line_start":193,"line_end":193,"column_start":12,"column_end":16},"name":"pred","qualname":"<Date<Tz>>::pred","value":"fn (&self) -> Date<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `Date` for the prior date.","sig":null,"attributes":[{"value":"/ Makes a new `Date` for the prior date.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":407070,"byte_end":407112,"line_start":189,"line_end":189,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":407117,"byte_end":407120,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ Panics when `self` is the first representable date.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":407125,"byte_end":407180,"line_start":191,"line_end":191,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":407185,"byte_end":407194,"line_start":192,"line_end":192,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":801},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":407434,"byte_end":407442,"line_start":201,"line_end":201,"column_start":12,"column_end":20},"name":"pred_opt","qualname":"<Date<Tz>>::pred_opt","value":"fn (&self) -> Option<Date<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `Date` for the prior date.","sig":null,"attributes":[{"value":"/ Makes a new `Date` for the prior date.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":407290,"byte_end":407332,"line_start":197,"line_end":197,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":407337,"byte_end":407340,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when `self` is the first representable date.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":407345,"byte_end":407408,"line_start":199,"line_end":199,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":407413,"byte_end":407422,"line_start":200,"line_end":200,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":407636,"byte_end":407642,"line_start":207,"line_end":207,"column_start":12,"column_end":18},"name":"offset","qualname":"<Date<Tz>>::offset","value":"fn (&self) -> &Tz::Offset","parent":null,"children":[],"decl_id":null,"docs":" Retrieves an associated offset from UTC.\n","sig":null,"attributes":[{"value":"/ Retrieves an associated offset from UTC.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":407566,"byte_end":407610,"line_start":205,"line_end":205,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":407615,"byte_end":407624,"line_start":206,"line_end":206,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":407763,"byte_end":407771,"line_start":213,"line_end":213,"column_start":12,"column_end":20},"name":"timezone","qualname":"<Date<Tz>>::timezone","value":"fn (&self) -> Tz","parent":null,"children":[],"decl_id":null,"docs":" Retrieves an associated time zone.\n","sig":null,"attributes":[{"value":"/ Retrieves an associated time zone.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":407699,"byte_end":407737,"line_start":211,"line_end":211,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":407742,"byte_end":407751,"line_start":212,"line_end":212,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":805},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":407997,"byte_end":408010,"line_start":220,"line_end":220,"column_start":12,"column_end":25},"name":"with_timezone","qualname":"<Date<Tz>>::with_timezone","value":"fn <Tz2> (&self, tz: &Tz2) -> Date<Tz2>","parent":null,"children":[],"decl_id":null,"docs":" Changes the associated time zone.\n This does not change the actual `Date` (but will change the string representation).\n","sig":null,"attributes":[{"value":"/ Changes the associated time zone.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":407842,"byte_end":407879,"line_start":217,"line_end":217,"column_start":5,"column_end":42}},{"value":"/ This does not change the actual `Date` (but will change the string representation).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":407884,"byte_end":407971,"line_start":218,"line_end":218,"column_start":5,"column_end":92}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":407976,"byte_end":407985,"line_start":219,"line_end":219,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":408242,"byte_end":408260,"line_start":228,"line_end":228,"column_start":12,"column_end":30},"name":"checked_add_signed","qualname":"<Date<Tz>>::checked_add_signed","value":"fn (self, rhs: OldDuration) -> Option<Date<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Adds given `Duration` to the current date.","sig":null,"attributes":[{"value":"/ Adds given `Duration` to the current date.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":408106,"byte_end":408152,"line_start":224,"line_end":224,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":408157,"byte_end":408160,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when it will result in overflow.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":408165,"byte_end":408216,"line_start":226,"line_end":226,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":408221,"byte_end":408230,"line_start":227,"line_end":227,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":808},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":408580,"byte_end":408598,"line_start":237,"line_end":237,"column_start":12,"column_end":30},"name":"checked_sub_signed","qualname":"<Date<Tz>>::checked_sub_signed","value":"fn (self, rhs: OldDuration) -> Option<Date<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Subtracts given `Duration` from the current date.","sig":null,"attributes":[{"value":"/ Subtracts given `Duration` from the current date.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":408437,"byte_end":408490,"line_start":233,"line_end":233,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":408495,"byte_end":408498,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when it will result in overflow.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":408503,"byte_end":408554,"line_start":235,"line_end":235,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":408559,"byte_end":408568,"line_start":236,"line_end":236,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":809},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":409026,"byte_end":409047,"line_start":248,"line_end":248,"column_start":12,"column_end":33},"name":"signed_duration_since","qualname":"<Date<Tz>>::signed_duration_since","value":"fn <Tz2> (self, rhs: Date<Tz2>) -> OldDuration","parent":null,"children":[],"decl_id":null,"docs":" Subtracts another `Date` from the current date.\n Returns a `Duration` of integral numbers.","sig":null,"attributes":[{"value":"/ Subtracts another `Date` from the current date.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":408775,"byte_end":408826,"line_start":242,"line_end":242,"column_start":5,"column_end":56}},{"value":"/ Returns a `Duration` of integral numbers.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":408831,"byte_end":408876,"line_start":243,"line_end":243,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":408881,"byte_end":408884,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ This does not overflow or underflow at all,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":408889,"byte_end":408936,"line_start":245,"line_end":245,"column_start":5,"column_end":52}},{"value":"/ as all possible output fits in the range of `Duration`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":408941,"byte_end":409000,"line_start":246,"line_end":246,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":409005,"byte_end":409014,"line_start":247,"line_end":247,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":811},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":409230,"byte_end":409239,"line_start":254,"line_end":254,"column_start":12,"column_end":21},"name":"naive_utc","qualname":"<Date<Tz>>::naive_utc","value":"fn (&self) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Returns a view to the naive UTC date.\n","sig":null,"attributes":[{"value":"/ Returns a view to the naive UTC date.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":409163,"byte_end":409204,"line_start":252,"line_end":252,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":409209,"byte_end":409218,"line_start":253,"line_end":253,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":812},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":409549,"byte_end":409560,"line_start":264,"line_end":264,"column_start":12,"column_end":23},"name":"naive_local","qualname":"<Date<Tz>>::naive_local","value":"fn (&self) -> NaiveDate","parent":null,"children":[],"decl_id":null,"docs":" Returns a view to the naive local date.","sig":null,"attributes":[{"value":"/ Returns a view to the naive local date.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":409291,"byte_end":409334,"line_start":258,"line_end":258,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":409339,"byte_end":409342,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This is technically the same as [`naive_utc`](#method.naive_utc)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":409347,"byte_end":409415,"line_start":260,"line_end":260,"column_start":5,"column_end":73}},{"value":"/ because the offset is restricted to never exceed one day,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":409420,"byte_end":409481,"line_start":261,"line_end":261,"column_start":5,"column_end":66}},{"value":"/ but provided for the consistency.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":409486,"byte_end":409523,"line_start":262,"line_end":262,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":409528,"byte_end":409537,"line_start":263,"line_end":263,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":819},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":410107,"byte_end":410124,"line_start":284,"line_end":284,"column_start":12,"column_end":29},"name":"format_with_items","qualname":"<Date<Tz>>::format_with_items","value":"fn <'a, I, B> (&self, items: I) -> DelayedFormat<I>","parent":null,"children":[],"decl_id":null,"docs":" Formats the date with the specified formatting items.\n","sig":null,"attributes":[{"value":"/ Formats the date with the specified formatting items.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":409966,"byte_end":410023,"line_start":281,"line_end":281,"column_start":5,"column_end":62}},{"value":"cfg(any(feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":410028,"byte_end":410081,"line_start":282,"line_end":282,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":410086,"byte_end":410095,"line_start":283,"line_end":283,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":823},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":410614,"byte_end":410620,"line_start":297,"line_end":297,"column_start":12,"column_end":18},"name":"format","qualname":"<Date<Tz>>::format","value":"fn <'a> (&self, fmt: &'a str) -> DelayedFormat<StrftimeItems<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Formats the date with the specified format string.\n See the [`format::strftime` module](./format/strftime/index.html)\n on the supported escape sequences.\n","sig":null,"attributes":[{"value":"/ Formats the date with the specified format string.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":410359,"byte_end":410413,"line_start":292,"line_end":292,"column_start":5,"column_end":59}},{"value":"/ See the [`format::strftime` module](./format/strftime/index.html)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":410418,"byte_end":410487,"line_start":293,"line_end":293,"column_start":5,"column_end":74}},{"value":"/ on the supported escape sequences.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":410492,"byte_end":410530,"line_start":294,"line_end":294,"column_start":5,"column_end":43}},{"value":"cfg(any(feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":410535,"byte_end":410588,"line_start":295,"line_end":295,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":410593,"byte_end":410602,"line_start":296,"line_end":296,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1778},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":416755,"byte_end":416759,"line_start":40,"line_end":40,"column_start":5,"column_end":9},"name":"Secs","qualname":"::datetime::SecondsFormat::Secs","value":"SecondsFormat::Secs","parent":{"krate":0,"index":1777},"children":[],"decl_id":null,"docs":" Format whole seconds only, with no decimal point nor subseconds.\n","sig":null,"attributes":[{"value":"/ Format whole seconds only, with no decimal point nor subseconds.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":416682,"byte_end":416750,"line_start":39,"line_end":39,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1780},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":416898,"byte_end":416904,"line_start":44,"line_end":44,"column_start":5,"column_end":11},"name":"Millis","qualname":"::datetime::SecondsFormat::Millis","value":"SecondsFormat::Millis","parent":{"krate":0,"index":1777},"children":[],"decl_id":null,"docs":" Use fixed 3 subsecond digits. This corresponds to\n [Fixed::Nanosecond3](format/enum.Fixed.html#variant.Nanosecond3).\n","sig":null,"attributes":[{"value":"/ Use fixed 3 subsecond digits. This corresponds to","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":416766,"byte_end":416819,"line_start":42,"line_end":42,"column_start":5,"column_end":58}},{"value":"/ [Fixed::Nanosecond3](format/enum.Fixed.html#variant.Nanosecond3).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":416824,"byte_end":416893,"line_start":43,"line_end":43,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1782},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":417043,"byte_end":417049,"line_start":48,"line_end":48,"column_start":5,"column_end":11},"name":"Micros","qualname":"::datetime::SecondsFormat::Micros","value":"SecondsFormat::Micros","parent":{"krate":0,"index":1777},"children":[],"decl_id":null,"docs":" Use fixed 6 subsecond digits. This corresponds to\n [Fixed::Nanosecond6](format/enum.Fixed.html#variant.Nanosecond6).\n","sig":null,"attributes":[{"value":"/ Use fixed 6 subsecond digits. This corresponds to","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":416911,"byte_end":416964,"line_start":46,"line_end":46,"column_start":5,"column_end":58}},{"value":"/ [Fixed::Nanosecond6](format/enum.Fixed.html#variant.Nanosecond6).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":416969,"byte_end":417038,"line_start":47,"line_end":47,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1784},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":417188,"byte_end":417193,"line_start":52,"line_end":52,"column_start":5,"column_end":10},"name":"Nanos","qualname":"::datetime::SecondsFormat::Nanos","value":"SecondsFormat::Nanos","parent":{"krate":0,"index":1777},"children":[],"decl_id":null,"docs":" Use fixed 9 subsecond digits. This corresponds to\n [Fixed::Nanosecond9](format/enum.Fixed.html#variant.Nanosecond9).\n","sig":null,"attributes":[{"value":"/ Use fixed 9 subsecond digits. This corresponds to","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":417056,"byte_end":417109,"line_start":50,"line_end":50,"column_start":5,"column_end":58}},{"value":"/ [Fixed::Nanosecond9](format/enum.Fixed.html#variant.Nanosecond9).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":417114,"byte_end":417183,"line_start":51,"line_end":51,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1786},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":417429,"byte_end":417435,"line_start":57,"line_end":57,"column_start":5,"column_end":11},"name":"AutoSi","qualname":"::datetime::SecondsFormat::AutoSi","value":"SecondsFormat::AutoSi","parent":{"krate":0,"index":1777},"children":[],"decl_id":null,"docs":" Automatically select one of `Secs`, `Millis`, `Micros`, or `Nanos` to\n display all available non-zero sub-second digits.  This corresponds to\n [Fixed::Nanosecond](format/enum.Fixed.html#variant.Nanosecond).\n","sig":null,"attributes":[{"value":"/ Automatically select one of `Secs`, `Millis`, `Micros`, or `Nanos` to","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":417200,"byte_end":417273,"line_start":54,"line_end":54,"column_start":5,"column_end":78}},{"value":"/ display all available non-zero sub-second digits.  This corresponds to","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":417278,"byte_end":417352,"line_start":55,"line_end":55,"column_start":5,"column_end":79}},{"value":"/ [Fixed::Nanosecond](format/enum.Fixed.html#variant.Nanosecond).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":417357,"byte_end":417424,"line_start":56,"line_end":56,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1788},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":417495,"byte_end":417510,"line_start":61,"line_end":61,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::datetime::SecondsFormat::__NonExhaustive","value":"SecondsFormat::__NonExhaustive","parent":{"krate":0,"index":1777},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1777},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":416662,"byte_end":416675,"line_start":38,"line_end":38,"column_start":10,"column_end":23},"name":"SecondsFormat","qualname":"::datetime::SecondsFormat","value":"SecondsFormat::{Secs, Millis, Micros, Nanos, AutoSi, __NonExhaustive}","parent":null,"children":[{"krate":0,"index":1778},{"krate":0,"index":1780},{"krate":0,"index":1782},{"krate":0,"index":1784},{"krate":0,"index":1786},{"krate":0,"index":1788}],"decl_id":null,"docs":" Specific formatting options for seconds. This may be extended in the\n future, so exhaustive matching in external code is not recommended.","sig":null,"attributes":[{"value":"/ Specific formatting options for seconds. This may be extended in the","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":416399,"byte_end":416471,"line_start":33,"line_end":33,"column_start":1,"column_end":73}},{"value":"/ future, so exhaustive matching in external code is not recommended.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":416472,"byte_end":416543,"line_start":34,"line_end":34,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":416544,"byte_end":416547,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ See the `TimeZone::to_rfc3339_opts` function for usage.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":416548,"byte_end":416607,"line_start":36,"line_end":36,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":1801},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":417808,"byte_end":417816,"line_start":70,"line_end":70,"column_start":12,"column_end":20},"name":"DateTime","qualname":"::datetime::DateTime","value":"DateTime {  }","parent":null,"children":[{"krate":0,"index":1803},{"krate":0,"index":1804}],"decl_id":null,"docs":" ISO 8601 combined date and time with time zone.","sig":null,"attributes":[{"value":"/ ISO 8601 combined date and time with time zone.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":417515,"byte_end":417566,"line_start":64,"line_end":64,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":417567,"byte_end":417570,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ There are some constructors implemented here (the `from_*` methods), but","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":417571,"byte_end":417647,"line_start":66,"line_end":66,"column_start":1,"column_end":77}},{"value":"/ the general-purpose constructors are all via the methods on the","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":417648,"byte_end":417715,"line_start":67,"line_end":67,"column_start":1,"column_end":68}},{"value":"/ [`TimeZone`](./offset/trait.TimeZone.html) implementations.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":417716,"byte_end":417779,"line_start":68,"line_end":68,"column_start":1,"column_end":64}}]},{"kind":"Const","id":{"krate":0,"index":929},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":417941,"byte_end":417953,"line_start":76,"line_end":76,"column_start":11,"column_end":23},"name":"MIN_DATETIME","qualname":"::datetime::MIN_DATETIME","value":"DateTime<Utc>","parent":null,"children":[],"decl_id":null,"docs":" The minimum possible `DateTime<Utc>`.\n","sig":null,"attributes":[{"value":"/ The minimum possible `DateTime<Utc>`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":417889,"byte_end":417930,"line_start":75,"line_end":75,"column_start":1,"column_end":42}}]},{"kind":"Const","id":{"krate":0,"index":930},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":418080,"byte_end":418092,"line_start":78,"line_end":78,"column_start":11,"column_end":23},"name":"MAX_DATETIME","qualname":"::datetime::MAX_DATETIME","value":"DateTime<Utc>","parent":null,"children":[],"decl_id":null,"docs":" The maximum possible `DateTime<Utc>`.\n","sig":null,"attributes":[{"value":"/ The maximum possible `DateTime<Utc>`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":418028,"byte_end":418069,"line_start":77,"line_end":77,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":933},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":418735,"byte_end":418743,"line_start":95,"line_end":95,"column_start":12,"column_end":20},"name":"from_utc","qualname":"<DateTime<Tz>>::from_utc","value":"fn (datetime: NaiveDateTime, offset: Tz::Offset) -> DateTime<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DateTime` with given *UTC* datetime and offset.\n The local datetime should be constructed via the `TimeZone` trait.","sig":null,"attributes":[{"value":"/ Makes a new `DateTime` with given *UTC* datetime and offset.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":418206,"byte_end":418270,"line_start":81,"line_end":81,"column_start":5,"column_end":69}},{"value":"/ The local datetime should be constructed via the `TimeZone` trait.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":418275,"byte_end":418345,"line_start":82,"line_end":82,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":418350,"byte_end":418353,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":418358,"byte_end":418371,"line_start":84,"line_end":84,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":418376,"byte_end":418379,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":418384,"byte_end":418392,"line_start":86,"line_end":86,"column_start":5,"column_end":13}},{"value":"/ use chrono::{DateTime, TimeZone, NaiveDateTime, Utc};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":418397,"byte_end":418454,"line_start":87,"line_end":87,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":418459,"byte_end":418462,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ let dt = DateTime::<Utc>::from_utc(NaiveDateTime::from_timestamp(61, 0), Utc);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":418467,"byte_end":418549,"line_start":89,"line_end":89,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(Utc.timestamp(61, 0), dt);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":418554,"byte_end":418595,"line_start":90,"line_end":90,"column_start":5,"column_end":46}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":418600,"byte_end":418608,"line_start":91,"line_end":91,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":418714,"byte_end":418723,"line_start":94,"line_end":94,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":934},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":418931,"byte_end":418935,"line_start":101,"line_end":101,"column_start":12,"column_end":16},"name":"date","qualname":"<DateTime<Tz>>::date","value":"fn (&self) -> Date<Tz>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves a date component.\n","sig":null,"attributes":[{"value":"/ Retrieves a date component.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":418874,"byte_end":418905,"line_start":99,"line_end":99,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":418910,"byte_end":418919,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":935},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":419160,"byte_end":419164,"line_start":108,"line_end":108,"column_start":12,"column_end":16},"name":"time","qualname":"<DateTime<Tz>>::time","value":"fn (&self) -> NaiveTime","parent":null,"children":[],"decl_id":null,"docs":" Retrieves a time component.\n Unlike `date`, this is not associated to the time zone.\n","sig":null,"attributes":[{"value":"/ Retrieves a time component.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":419039,"byte_end":419070,"line_start":105,"line_end":105,"column_start":5,"column_end":36}},{"value":"/ Unlike `date`, this is not associated to the time zone.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":419075,"byte_end":419134,"line_start":106,"line_end":106,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":419139,"byte_end":419148,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":936},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":419381,"byte_end":419390,"line_start":115,"line_end":115,"column_start":12,"column_end":21},"name":"timestamp","qualname":"<DateTime<Tz>>::timestamp","value":"fn (&self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of non-leap seconds since January 1, 1970 0:00:00 UTC\n (aka \"UNIX timestamp\").\n","sig":null,"attributes":[{"value":"/ Returns the number of non-leap seconds since January 1, 1970 0:00:00 UTC","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":419247,"byte_end":419323,"line_start":112,"line_end":112,"column_start":5,"column_end":81}},{"value":"/ (aka \"UNIX timestamp\").","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":419328,"byte_end":419355,"line_start":113,"line_end":113,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":419360,"byte_end":419369,"line_start":114,"line_end":114,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":937},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":420211,"byte_end":420227,"line_start":139,"line_end":139,"column_start":12,"column_end":28},"name":"timestamp_millis","qualname":"<DateTime<Tz>>::timestamp_millis","value":"fn (&self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of non-leap-milliseconds since January 1, 1970 UTC","sig":null,"attributes":[{"value":"/ Returns the number of non-leap-milliseconds since January 1, 1970 UTC","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":419452,"byte_end":419525,"line_start":119,"line_end":119,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":419530,"byte_end":419533,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ Note that this does reduce the number of years that can be represented","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":419538,"byte_end":419612,"line_start":121,"line_end":121,"column_start":5,"column_end":79}},{"value":"/ from ~584 Billion to ~584 Million. (If this is a problem, please file","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":419617,"byte_end":419690,"line_start":122,"line_end":122,"column_start":5,"column_end":78}},{"value":"/ an issue to let me know what domain needs millisecond precision over","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":419695,"byte_end":419767,"line_start":123,"line_end":123,"column_start":5,"column_end":77}},{"value":"/ billions of years, I'm curious.)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":419772,"byte_end":419808,"line_start":124,"line_end":124,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":419813,"byte_end":419816,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":419821,"byte_end":419834,"line_start":126,"line_end":126,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":419839,"byte_end":419842,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":419847,"byte_end":419855,"line_start":128,"line_end":128,"column_start":5,"column_end":13}},{"value":"/ use chrono::Utc;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":419860,"byte_end":419880,"line_start":129,"line_end":129,"column_start":5,"column_end":25}},{"value":"/ use chrono::TimeZone;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":419885,"byte_end":419910,"line_start":130,"line_end":130,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":419915,"byte_end":419918,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ let dt = Utc.ymd(1970, 1, 1).and_hms_milli(0, 0, 1, 444);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":419923,"byte_end":419984,"line_start":132,"line_end":132,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(dt.timestamp_millis(), 1_444);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":419989,"byte_end":420034,"line_start":133,"line_end":133,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":420039,"byte_end":420042,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ let dt = Utc.ymd(2001, 9, 9).and_hms_milli(1, 46, 40, 555);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":420047,"byte_end":420110,"line_start":135,"line_end":135,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(dt.timestamp_millis(), 1_000_000_000_555);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":420115,"byte_end":420172,"line_start":136,"line_end":136,"column_start":5,"column_end":62}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":420177,"byte_end":420185,"line_start":137,"line_end":137,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":420190,"byte_end":420199,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":938},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":421049,"byte_end":421064,"line_start":163,"line_end":163,"column_start":12,"column_end":27},"name":"timestamp_nanos","qualname":"<DateTime<Tz>>::timestamp_nanos","value":"fn (&self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of non-leap-nanoseconds since January 1, 1970 UTC","sig":null,"attributes":[{"value":"/ Returns the number of non-leap-nanoseconds since January 1, 1970 UTC","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":420296,"byte_end":420368,"line_start":143,"line_end":143,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":420373,"byte_end":420376,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ Note that this does reduce the number of years that can be represented","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":420381,"byte_end":420455,"line_start":145,"line_end":145,"column_start":5,"column_end":79}},{"value":"/ from ~584 Billion to ~584. (If this is a problem, please file","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":420460,"byte_end":420525,"line_start":146,"line_end":146,"column_start":5,"column_end":70}},{"value":"/ an issue to let me know what domain needs nanosecond precision over","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":420530,"byte_end":420601,"line_start":147,"line_end":147,"column_start":5,"column_end":76}},{"value":"/ millennia, I'm curious.)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":420606,"byte_end":420634,"line_start":148,"line_end":148,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":420639,"byte_end":420642,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":420647,"byte_end":420660,"line_start":150,"line_end":150,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":420665,"byte_end":420668,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":420673,"byte_end":420681,"line_start":152,"line_end":152,"column_start":5,"column_end":13}},{"value":"/ use chrono::Utc;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":420686,"byte_end":420706,"line_start":153,"line_end":153,"column_start":5,"column_end":25}},{"value":"/ use chrono::TimeZone;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":420711,"byte_end":420736,"line_start":154,"line_end":154,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":420741,"byte_end":420744,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ let dt = Utc.ymd(1970, 1, 1).and_hms_nano(0, 0, 1, 444);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":420749,"byte_end":420809,"line_start":156,"line_end":156,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(dt.timestamp_nanos(), 1_000_000_444);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":420814,"byte_end":420866,"line_start":157,"line_end":157,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":420871,"byte_end":420874,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ let dt = Utc.ymd(2001, 9, 9).and_hms_nano(1, 46, 40, 555);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":420879,"byte_end":420941,"line_start":159,"line_end":159,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(dt.timestamp_nanos(), 1_000_000_000_000_000_555);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":420946,"byte_end":421010,"line_start":160,"line_end":160,"column_start":5,"column_end":69}},{"value":"/ ~~~~","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":421015,"byte_end":421023,"line_start":161,"line_end":161,"column_start":5,"column_end":13}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":421028,"byte_end":421037,"line_start":162,"line_end":162,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":939},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":421394,"byte_end":421417,"line_start":173,"line_end":173,"column_start":12,"column_end":35},"name":"timestamp_subsec_millis","qualname":"<DateTime<Tz>>::timestamp_subsec_millis","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of milliseconds since the last second boundary","sig":null,"attributes":[{"value":"/ Returns the number of milliseconds since the last second boundary","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":421132,"byte_end":421201,"line_start":167,"line_end":167,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":421206,"byte_end":421209,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ warning: in event of a leap second, this may exceed 999","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":421214,"byte_end":421273,"line_start":169,"line_end":169,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":421278,"byte_end":421281,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ note: this is not the number of milliseconds since January 1, 1970 0:00:00 UTC","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":421286,"byte_end":421368,"line_start":171,"line_end":171,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":421373,"byte_end":421382,"line_start":172,"line_end":172,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":940},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":421759,"byte_end":421782,"line_start":183,"line_end":183,"column_start":12,"column_end":35},"name":"timestamp_subsec_micros","qualname":"<DateTime<Tz>>::timestamp_subsec_micros","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of microseconds since the last second boundary","sig":null,"attributes":[{"value":"/ Returns the number of microseconds since the last second boundary","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":421493,"byte_end":421562,"line_start":177,"line_end":177,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":421567,"byte_end":421570,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ warning: in event of a leap second, this may exceed 999_999","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":421575,"byte_end":421638,"line_start":179,"line_end":179,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":421643,"byte_end":421646,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ note: this is not the number of microseconds since January 1, 1970 0:00:00 UTC","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":421651,"byte_end":421733,"line_start":181,"line_end":181,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":421738,"byte_end":421747,"line_start":182,"line_end":182,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":941},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":422126,"byte_end":422148,"line_start":193,"line_end":193,"column_start":12,"column_end":34},"name":"timestamp_subsec_nanos","qualname":"<DateTime<Tz>>::timestamp_subsec_nanos","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of nanoseconds since the last second boundary","sig":null,"attributes":[{"value":"/ Returns the number of nanoseconds since the last second boundary","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":421858,"byte_end":421926,"line_start":187,"line_end":187,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":421931,"byte_end":421934,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ warning: in event of a leap second, this may exceed 999_999_999","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":421939,"byte_end":422006,"line_start":189,"line_end":189,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":422011,"byte_end":422014,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ note: this is not the number of nanoseconds since January 1, 1970 0:00:00 UTC","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":422019,"byte_end":422100,"line_start":191,"line_end":191,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":422105,"byte_end":422114,"line_start":192,"line_end":192,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":942},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":422293,"byte_end":422299,"line_start":199,"line_end":199,"column_start":12,"column_end":18},"name":"offset","qualname":"<DateTime<Tz>>::offset","value":"fn (&self) -> &Tz::Offset","parent":null,"children":[],"decl_id":null,"docs":" Retrieves an associated offset from UTC.\n","sig":null,"attributes":[{"value":"/ Retrieves an associated offset from UTC.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":422223,"byte_end":422267,"line_start":197,"line_end":197,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":422272,"byte_end":422281,"line_start":198,"line_end":198,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":943},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":422420,"byte_end":422428,"line_start":205,"line_end":205,"column_start":12,"column_end":20},"name":"timezone","qualname":"<DateTime<Tz>>::timezone","value":"fn (&self) -> Tz","parent":null,"children":[],"decl_id":null,"docs":" Retrieves an associated time zone.\n","sig":null,"attributes":[{"value":"/ Retrieves an associated time zone.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":422356,"byte_end":422394,"line_start":203,"line_end":203,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":422399,"byte_end":422408,"line_start":204,"line_end":204,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":944},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":422658,"byte_end":422671,"line_start":212,"line_end":212,"column_start":12,"column_end":25},"name":"with_timezone","qualname":"<DateTime<Tz>>::with_timezone","value":"fn <Tz2> (&self, tz: &Tz2) -> DateTime<Tz2>","parent":null,"children":[],"decl_id":null,"docs":" Changes the associated time zone.\n This does not change the actual `DateTime` (but will change the string representation).\n","sig":null,"attributes":[{"value":"/ Changes the associated time zone.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":422499,"byte_end":422536,"line_start":209,"line_end":209,"column_start":5,"column_end":42}},{"value":"/ This does not change the actual `DateTime` (but will change the string representation).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":422541,"byte_end":422632,"line_start":210,"line_end":210,"column_start":5,"column_end":96}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":422637,"byte_end":422646,"line_start":211,"line_end":211,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":946},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":422924,"byte_end":422942,"line_start":220,"line_end":220,"column_start":12,"column_end":30},"name":"checked_add_signed","qualname":"<DateTime<Tz>>::checked_add_signed","value":"fn (self, rhs: OldDuration) -> Option<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Adds given `Duration` to the current date and time.","sig":null,"attributes":[{"value":"/ Adds given `Duration` to the current date and time.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":422779,"byte_end":422834,"line_start":216,"line_end":216,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":422839,"byte_end":422842,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when it will result in overflow.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":422847,"byte_end":422898,"line_start":218,"line_end":218,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":422903,"byte_end":422912,"line_start":219,"line_end":219,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":947},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":423308,"byte_end":423326,"line_start":230,"line_end":230,"column_start":12,"column_end":30},"name":"checked_sub_signed","qualname":"<DateTime<Tz>>::checked_sub_signed","value":"fn (self, rhs: OldDuration) -> Option<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Subtracts given `Duration` from the current date and time.","sig":null,"attributes":[{"value":"/ Subtracts given `Duration` from the current date and time.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":423156,"byte_end":423218,"line_start":226,"line_end":226,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":423223,"byte_end":423226,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when it will result in overflow.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":423231,"byte_end":423282,"line_start":228,"line_end":228,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":423287,"byte_end":423296,"line_start":229,"line_end":229,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":948},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":423682,"byte_end":423703,"line_start":239,"line_end":239,"column_start":12,"column_end":33},"name":"signed_duration_since","qualname":"<DateTime<Tz>>::signed_duration_since","value":"fn <Tz2> (self, rhs: DateTime<Tz2>) -> OldDuration","parent":null,"children":[],"decl_id":null,"docs":" Subtracts another `DateTime` from the current date and time.\n This does not overflow or underflow at all.\n","sig":null,"attributes":[{"value":"/ Subtracts another `DateTime` from the current date and time.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":423540,"byte_end":423604,"line_start":236,"line_end":236,"column_start":5,"column_end":69}},{"value":"/ This does not overflow or underflow at all.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":423609,"byte_end":423656,"line_start":237,"line_end":237,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":423661,"byte_end":423670,"line_start":238,"line_end":238,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":950},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":423902,"byte_end":423911,"line_start":245,"line_end":245,"column_start":12,"column_end":21},"name":"naive_utc","qualname":"<DateTime<Tz>>::naive_utc","value":"fn (&self) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Returns a view to the naive UTC datetime.\n","sig":null,"attributes":[{"value":"/ Returns a view to the naive UTC datetime.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":423831,"byte_end":423876,"line_start":243,"line_end":243,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":423881,"byte_end":423890,"line_start":244,"line_end":244,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":951},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":424044,"byte_end":424055,"line_start":251,"line_end":251,"column_start":12,"column_end":23},"name":"naive_local","qualname":"<DateTime<Tz>>::naive_local","value":"fn (&self) -> NaiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Returns a view to the naive local datetime.\n","sig":null,"attributes":[{"value":"/ Returns a view to the naive local datetime.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":423971,"byte_end":424018,"line_start":249,"line_end":249,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":424023,"byte_end":424032,"line_start":250,"line_end":250,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":969},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":427862,"byte_end":427880,"line_start":347,"line_end":347,"column_start":12,"column_end":30},"name":"parse_from_rfc2822","qualname":"<DateTime<FixedOffset>>::parse_from_rfc2822","value":"fn (s: &str) -> ParseResult<DateTime<FixedOffset>>","parent":null,"children":[],"decl_id":null,"docs":" Parses an RFC 2822 date and time string such as `Tue, 1 Jul 2003 10:52:37 +0200`,\n then returns a new `DateTime` with a parsed `FixedOffset`.","sig":null,"attributes":[{"value":"/ Parses an RFC 2822 date and time string such as `Tue, 1 Jul 2003 10:52:37 +0200`,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":427288,"byte_end":427373,"line_start":334,"line_end":334,"column_start":5,"column_end":90}},{"value":"/ then returns a new `DateTime` with a parsed `FixedOffset`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":427378,"byte_end":427440,"line_start":335,"line_end":335,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":427445,"byte_end":427448,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ RFC 2822 is the internet message standard that specifices the","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":427453,"byte_end":427518,"line_start":337,"line_end":337,"column_start":5,"column_end":70}},{"value":"/ representation of times in HTTP and email headers.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":427523,"byte_end":427577,"line_start":338,"line_end":338,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":427582,"byte_end":427585,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":427590,"byte_end":427597,"line_start":340,"line_end":340,"column_start":5,"column_end":12}},{"value":"/ # use chrono::{DateTime, FixedOffset, TimeZone};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":427602,"byte_end":427654,"line_start":341,"line_end":341,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":427659,"byte_end":427674,"line_start":342,"line_end":342,"column_start":5,"column_end":20}},{"value":"/     DateTime::parse_from_rfc2822(\"Wed, 18 Feb 2015 23:16:09 GMT\").unwrap(),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":427679,"byte_end":427758,"line_start":343,"line_end":343,"column_start":5,"column_end":84}},{"value":"/     FixedOffset::east(0).ymd(2015, 2, 18).and_hms(23, 16, 9)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":427763,"byte_end":427827,"line_start":344,"line_end":344,"column_start":5,"column_end":69}},{"value":"/ );","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":427832,"byte_end":427838,"line_start":345,"line_end":345,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":427843,"byte_end":427850,"line_start":346,"line_end":346,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":971},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":428505,"byte_end":428523,"line_start":359,"line_end":359,"column_start":12,"column_end":30},"name":"parse_from_rfc3339","qualname":"<DateTime<FixedOffset>>::parse_from_rfc3339","value":"fn (s: &str) -> ParseResult<DateTime<FixedOffset>>","parent":null,"children":[],"decl_id":null,"docs":" Parses an RFC 3339 and ISO 8601 date and time string such as `1996-12-19T16:39:57-08:00`,\n then returns a new `DateTime` with a parsed `FixedOffset`.","sig":null,"attributes":[{"value":"/ Parses an RFC 3339 and ISO 8601 date and time string such as `1996-12-19T16:39:57-08:00`,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":428136,"byte_end":428229,"line_start":354,"line_end":354,"column_start":5,"column_end":98}},{"value":"/ then returns a new `DateTime` with a parsed `FixedOffset`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":428234,"byte_end":428296,"line_start":355,"line_end":355,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":428301,"byte_end":428304,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ Why isn't this named `parse_from_iso8601`? That's because ISO 8601 allows some freedom","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":428309,"byte_end":428399,"line_start":357,"line_end":357,"column_start":5,"column_end":95}},{"value":"/ over the syntax and RFC 3339 exercises that freedom to rigidly define a fixed format.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":428404,"byte_end":428493,"line_start":358,"line_end":358,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":973},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":429731,"byte_end":429745,"line_start":386,"line_end":386,"column_start":12,"column_end":26},"name":"parse_from_str","qualname":"<DateTime<FixedOffset>>::parse_from_str","value":"fn (s: &str, fmt: &str) -> ParseResult<DateTime<FixedOffset>>","parent":null,"children":[],"decl_id":null,"docs":" Parses a string with the specified format string and\n returns a new `DateTime` with a parsed `FixedOffset`.\n See the [`format::strftime` module](./format/strftime/index.html)\n on the supported escape sequences.","sig":null,"attributes":[{"value":"/ Parses a string with the specified format string and","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":428779,"byte_end":428835,"line_start":366,"line_end":366,"column_start":5,"column_end":61}},{"value":"/ returns a new `DateTime` with a parsed `FixedOffset`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":428840,"byte_end":428897,"line_start":367,"line_end":367,"column_start":5,"column_end":62}},{"value":"/ See the [`format::strftime` module](./format/strftime/index.html)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":428902,"byte_end":428971,"line_start":368,"line_end":368,"column_start":5,"column_end":74}},{"value":"/ on the supported escape sequences.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":428976,"byte_end":429014,"line_start":369,"line_end":369,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":429019,"byte_end":429022,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ See also `Offset::datetime_from_str` which gives a local `DateTime` on specific time zone.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":429027,"byte_end":429121,"line_start":371,"line_end":371,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":429126,"byte_end":429129,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ Note that this method *requires a timezone* in the string. See","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":429134,"byte_end":429200,"line_start":373,"line_end":373,"column_start":5,"column_end":71}},{"value":"/ [`NaiveDateTime::parse_from_str`](./naive/struct.NaiveDateTime.html#method.parse_from_str)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":429205,"byte_end":429299,"line_start":374,"line_end":374,"column_start":5,"column_end":99}},{"value":"/ for a version that does not require a timezone in the to-be-parsed str.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":429304,"byte_end":429379,"line_start":375,"line_end":375,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":429384,"byte_end":429387,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":429392,"byte_end":429405,"line_start":377,"line_end":377,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":429410,"byte_end":429413,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":429418,"byte_end":429429,"line_start":379,"line_end":379,"column_start":5,"column_end":16}},{"value":"/ use chrono::{DateTime, FixedOffset, TimeZone};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":429434,"byte_end":429484,"line_start":380,"line_end":380,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":429489,"byte_end":429492,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ let dt = DateTime::parse_from_str(","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":429497,"byte_end":429535,"line_start":382,"line_end":382,"column_start":5,"column_end":43}},{"value":"/     \"1983 Apr 13 12:09:14.274 +0000\", \"%Y %b %d %H:%M:%S%.3f %z\");","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":429540,"byte_end":429610,"line_start":383,"line_end":383,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(dt, Ok(FixedOffset::east(0).ymd(1983, 4, 13).and_hms_milli(12, 9, 14, 274)));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":429615,"byte_end":429707,"line_start":384,"line_end":384,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":429712,"byte_end":429719,"line_start":385,"line_end":385,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":976},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":430171,"byte_end":430181,"line_start":399,"line_end":399,"column_start":12,"column_end":22},"name":"to_rfc2822","qualname":"<DateTime<Tz>>::to_rfc2822","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Returns an RFC 2822 date and time string such as `Tue, 1 Jul 2003 10:52:37 +0200`.\n","sig":null,"attributes":[{"value":"/ Returns an RFC 2822 date and time string such as `Tue, 1 Jul 2003 10:52:37 +0200`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":430015,"byte_end":430101,"line_start":397,"line_end":397,"column_start":5,"column_end":91}},{"value":"cfg(any(feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":430106,"byte_end":430159,"line_start":398,"line_end":398,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":978},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":430513,"byte_end":430523,"line_start":406,"line_end":406,"column_start":12,"column_end":22},"name":"to_rfc3339","qualname":"<DateTime<Tz>>::to_rfc3339","value":"fn (&self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Returns an RFC 3339 and ISO 8601 date and time string such as `1996-12-19T16:39:57-08:00`.\n","sig":null,"attributes":[{"value":"/ Returns an RFC 3339 and ISO 8601 date and time string such as `1996-12-19T16:39:57-08:00`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":430349,"byte_end":430443,"line_start":404,"line_end":404,"column_start":5,"column_end":99}},{"value":"cfg(any(feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":430448,"byte_end":430501,"line_start":405,"line_end":405,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":980},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":431986,"byte_end":432001,"line_start":436,"line_end":436,"column_start":12,"column_end":27},"name":"to_rfc3339_opts","qualname":"<DateTime<Tz>>::to_rfc3339_opts","value":"fn (&self, secform: SecondsFormat, use_z: bool) -> String","parent":null,"children":[],"decl_id":null,"docs":" Return an RFC 3339 and ISO 8601 date and time string with subseconds\n formatted as per a `SecondsFormat`. If passed `use_z` true and the\n timezone is UTC (offset 0), use 'Z', as per\n [Fixed::TimezoneOffsetColonZ](format/enum.Fixed.html#variant.TimezoneOffsetColonZ).\n If passed `use_z` false, use\n [Fixed::TimezoneOffsetColon](format/enum.Fixed.html#variant.TimezoneOffsetColon).","sig":null,"attributes":[{"value":"/ Return an RFC 3339 and ISO 8601 date and time string with subseconds","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":430691,"byte_end":430763,"line_start":411,"line_end":411,"column_start":5,"column_end":77}},{"value":"/ formatted as per a `SecondsFormat`. If passed `use_z` true and the","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":430768,"byte_end":430838,"line_start":412,"line_end":412,"column_start":5,"column_end":75}},{"value":"/ timezone is UTC (offset 0), use 'Z', as per","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":430843,"byte_end":430890,"line_start":413,"line_end":413,"column_start":5,"column_end":52}},{"value":"/ [Fixed::TimezoneOffsetColonZ](format/enum.Fixed.html#variant.TimezoneOffsetColonZ).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":430895,"byte_end":430982,"line_start":414,"line_end":414,"column_start":5,"column_end":92}},{"value":"/ If passed `use_z` false, use","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":430987,"byte_end":431019,"line_start":415,"line_end":415,"column_start":5,"column_end":37}},{"value":"/ [Fixed::TimezoneOffsetColon](format/enum.Fixed.html#variant.TimezoneOffsetColon).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":431024,"byte_end":431109,"line_start":416,"line_end":416,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":431114,"byte_end":431117,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":431122,"byte_end":431136,"line_start":418,"line_end":418,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":431141,"byte_end":431144,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":431149,"byte_end":431160,"line_start":420,"line_end":420,"column_start":5,"column_end":16}},{"value":"/ # use chrono::{DateTime, FixedOffset, SecondsFormat, TimeZone, Utc};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":431165,"byte_end":431237,"line_start":421,"line_end":421,"column_start":5,"column_end":77}},{"value":"/ let dt = Utc.ymd(2018, 1, 26).and_hms_micro(18, 30, 9, 453_829);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":431242,"byte_end":431310,"line_start":422,"line_end":422,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(dt.to_rfc3339_opts(SecondsFormat::Millis, false),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":431315,"byte_end":431379,"line_start":423,"line_end":423,"column_start":5,"column_end":69}},{"value":"/            \"2018-01-26T18:30:09.453+00:00\");","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":431384,"byte_end":431432,"line_start":424,"line_end":424,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(dt.to_rfc3339_opts(SecondsFormat::Millis, true),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":431437,"byte_end":431500,"line_start":425,"line_end":425,"column_start":5,"column_end":68}},{"value":"/            \"2018-01-26T18:30:09.453Z\");","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":431505,"byte_end":431548,"line_start":426,"line_end":426,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(dt.to_rfc3339_opts(SecondsFormat::Secs, true),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":431553,"byte_end":431614,"line_start":427,"line_end":427,"column_start":5,"column_end":66}},{"value":"/            \"2018-01-26T18:30:09Z\");","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":431619,"byte_end":431658,"line_start":428,"line_end":428,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":431663,"byte_end":431666,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ let pst = FixedOffset::east(8 * 60 * 60);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":431671,"byte_end":431716,"line_start":430,"line_end":430,"column_start":5,"column_end":50}},{"value":"/ let dt = pst.ymd(2018, 1, 26).and_hms_micro(10, 30, 9, 453_829);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":431721,"byte_end":431789,"line_start":431,"line_end":431,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(dt.to_rfc3339_opts(SecondsFormat::Secs, true),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":431794,"byte_end":431855,"line_start":432,"line_end":432,"column_start":5,"column_end":66}},{"value":"/            \"2018-01-26T10:30:09+08:00\");","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":431860,"byte_end":431904,"line_start":433,"line_end":433,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":431909,"byte_end":431916,"line_start":434,"line_end":434,"column_start":5,"column_end":12}},{"value":"cfg(any(feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":431921,"byte_end":431974,"line_start":435,"line_end":435,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":985},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":433611,"byte_end":433628,"line_start":481,"line_end":481,"column_start":12,"column_end":29},"name":"format_with_items","qualname":"<DateTime<Tz>>::format_with_items","value":"fn <'a, I, B> (&self, items: I) -> DelayedFormat<I>","parent":null,"children":[],"decl_id":null,"docs":" Formats the combined date and time with the specified formatting items.\n","sig":null,"attributes":[{"value":"/ Formats the combined date and time with the specified formatting items.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":433452,"byte_end":433527,"line_start":478,"line_end":478,"column_start":5,"column_end":80}},{"value":"cfg(any(feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":433532,"byte_end":433585,"line_start":479,"line_end":479,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":433590,"byte_end":433599,"line_start":480,"line_end":480,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":989},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":434184,"byte_end":434190,"line_start":495,"line_end":495,"column_start":12,"column_end":18},"name":"format","qualname":"<DateTime<Tz>>::format","value":"fn <'a> (&self, fmt: &'a str) -> DelayedFormat<StrftimeItems<'a>>","parent":null,"children":[],"decl_id":null,"docs":" Formats the combined date and time with the specified format string.\n See the [`format::strftime` module](./format/strftime/index.html)\n on the supported escape sequences.\n","sig":null,"attributes":[{"value":"/ Formats the combined date and time with the specified format string.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":433911,"byte_end":433983,"line_start":490,"line_end":490,"column_start":5,"column_end":77}},{"value":"/ See the [`format::strftime` module](./format/strftime/index.html)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":433988,"byte_end":434057,"line_start":491,"line_end":491,"column_start":5,"column_end":74}},{"value":"/ on the supported escape sequences.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":434062,"byte_end":434100,"line_start":492,"line_end":492,"column_start":5,"column_end":43}},{"value":"cfg(any(feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":434105,"byte_end":434158,"line_start":493,"line_end":493,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":434163,"byte_end":434172,"line_start":494,"line_end":494,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":1085},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"format","qualname":"::format","value":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","parent":null,"children":[{"krate":0,"index":1086},{"krate":0,"index":1087},{"krate":0,"index":1088},{"krate":0,"index":1089},{"krate":0,"index":1090},{"krate":0,"index":1093},{"krate":0,"index":1096},{"krate":0,"index":1099},{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1106},{"krate":0,"index":1808},{"krate":0,"index":1810},{"krate":0,"index":1812},{"krate":0,"index":1819},{"krate":0,"index":1816},{"krate":0,"index":1817},{"krate":0,"index":1813},{"krate":0,"index":1814},{"krate":0,"index":1821},{"krate":0,"index":1838},{"krate":0,"index":1836},{"krate":0,"index":1833},{"krate":0,"index":1834},{"krate":0,"index":1830},{"krate":0,"index":1831},{"krate":0,"index":1828},{"krate":0,"index":1839},{"krate":0,"index":1892},{"krate":0,"index":1888},{"krate":0,"index":1889},{"krate":0,"index":1885},{"krate":0,"index":1886},{"krate":0,"index":1883},{"krate":0,"index":1107},{"krate":0,"index":1109},{"krate":0,"index":1111},{"krate":0,"index":1113},{"krate":0,"index":1114},{"krate":0,"index":1894},{"krate":0,"index":1941},{"krate":0,"index":1937},{"krate":0,"index":1938},{"krate":0,"index":1934},{"krate":0,"index":1935},{"krate":0,"index":1932},{"krate":0,"index":1943},{"krate":0,"index":1954},{"krate":0,"index":1952},{"krate":0,"index":1948},{"krate":0,"index":1949},{"krate":0,"index":1945},{"krate":0,"index":1946},{"krate":0,"index":1956},{"krate":0,"index":1973},{"krate":0,"index":1971},{"krate":0,"index":1968},{"krate":0,"index":1969},{"krate":0,"index":1965},{"krate":0,"index":1966},{"krate":0,"index":1975},{"krate":0,"index":2012},{"krate":0,"index":2006},{"krate":0,"index":2008},{"krate":0,"index":2001},{"krate":0,"index":2003},{"krate":0,"index":1998},{"krate":0,"index":1116},{"krate":0,"index":1117},{"krate":0,"index":1118},{"krate":0,"index":1119},{"krate":0,"index":1120},{"krate":0,"index":1121},{"krate":0,"index":1122},{"krate":0,"index":2015},{"krate":0,"index":2028},{"krate":0,"index":2026},{"krate":0,"index":2022},{"krate":0,"index":2023},{"krate":0,"index":2019},{"krate":0,"index":2020},{"krate":0,"index":2018},{"krate":0,"index":2030},{"krate":0,"index":2054},{"krate":0,"index":2052},{"krate":0,"index":2049},{"krate":0,"index":2050},{"krate":0,"index":2046},{"krate":0,"index":2047},{"krate":0,"index":2045},{"krate":0,"index":1123},{"krate":0,"index":1125},{"krate":0,"index":1127},{"krate":0,"index":1129},{"krate":0,"index":1130},{"krate":0,"index":1131},{"krate":0,"index":1132},{"krate":0,"index":1133},{"krate":0,"index":1134},{"krate":0,"index":1135},{"krate":0,"index":1136},{"krate":0,"index":1138},{"krate":0,"index":1186},{"krate":0,"index":1190},{"krate":0,"index":1259},{"krate":0,"index":1328},{"krate":0,"index":1374},{"krate":0,"index":2106},{"krate":0,"index":2113},{"krate":0,"index":1405},{"krate":0,"index":1412},{"krate":0,"index":1417},{"krate":0,"index":1420}],"decl_id":null,"docs":" Formatting (and parsing) utilities for date and time.","sig":null,"attributes":[{"value":"! Formatting (and parsing) utilities for date and time.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":507506,"byte_end":507563,"line_start":4,"line_end":4,"column_start":1,"column_end":58}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":507564,"byte_end":507567,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"! This module provides the common types and routines to implement,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":507568,"byte_end":507636,"line_start":6,"line_end":6,"column_start":1,"column_end":69}},{"value":"! for example, [`DateTime::format`](../struct.DateTime.html#method.format) or","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":507637,"byte_end":507716,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"! [`DateTime::parse_from_str`](../struct.DateTime.html#method.parse_from_str) methods.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":507717,"byte_end":507805,"line_start":8,"line_end":8,"column_start":1,"column_end":89}},{"value":"! For most cases you should use these high-level interfaces.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":507806,"byte_end":507868,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"!","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":507869,"byte_end":507872,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! Internally the formatting and parsing shares the same abstract **formatting items**,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":507873,"byte_end":507961,"line_start":11,"line_end":11,"column_start":1,"column_end":89}},{"value":"! which are just an [`Iterator`](https://doc.rust-lang.org/std/iter/trait.Iterator.html) of","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":507962,"byte_end":508055,"line_start":12,"line_end":12,"column_start":1,"column_end":94}},{"value":"! the [`Item`](./enum.Item.html) type.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":508056,"byte_end":508096,"line_start":13,"line_end":13,"column_start":1,"column_end":41}},{"value":"! They are generated from more readable **format strings**;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":508097,"byte_end":508158,"line_start":14,"line_end":14,"column_start":1,"column_end":62}},{"value":"! currently Chrono supports [one built-in syntax closely resembling","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":508159,"byte_end":508228,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"! C's `strftime` format](./strftime/index.html).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":508229,"byte_end":508279,"line_start":16,"line_end":16,"column_start":1,"column_end":51}},{"value":"allow(ellipsis_inclusive_range_patterns)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":508281,"byte_end":508325,"line_start":18,"line_end":18,"column_start":1,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1822},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":509511,"byte_end":509515,"line_start":61,"line_end":61,"column_start":5,"column_end":9},"name":"None","qualname":"::format::Pad::None","value":"Pad::None","parent":{"krate":0,"index":1821},"children":[],"decl_id":null,"docs":" No padding.\n","sig":null,"attributes":[{"value":"/ No padding.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":509491,"byte_end":509506,"line_start":60,"line_end":60,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1824},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":509549,"byte_end":509553,"line_start":63,"line_end":63,"column_start":5,"column_end":9},"name":"Zero","qualname":"::format::Pad::Zero","value":"Pad::Zero","parent":{"krate":0,"index":1821},"children":[],"decl_id":null,"docs":" Zero (`0`) padding.\n","sig":null,"attributes":[{"value":"/ Zero (`0`) padding.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":509521,"byte_end":509544,"line_start":62,"line_end":62,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1826},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":509582,"byte_end":509587,"line_start":65,"line_end":65,"column_start":5,"column_end":10},"name":"Space","qualname":"::format::Pad::Space","value":"Pad::Space","parent":{"krate":0,"index":1821},"children":[],"decl_id":null,"docs":" Space padding.\n","sig":null,"attributes":[{"value":"/ Space padding.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":509559,"byte_end":509577,"line_start":64,"line_end":64,"column_start":5,"column_end":23}}]},{"kind":"Enum","id":{"krate":0,"index":1821},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":509481,"byte_end":509484,"line_start":59,"line_end":59,"column_start":10,"column_end":13},"name":"Pad","qualname":"::format::Pad","value":"Pad::{None, Zero, Space}","parent":null,"children":[{"krate":0,"index":1822},{"krate":0,"index":1824},{"krate":0,"index":1826}],"decl_id":null,"docs":" Padding characters for numeric items.\n","sig":null,"attributes":[{"value":"/ Padding characters for numeric items.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":509385,"byte_end":509426,"line_start":57,"line_end":57,"column_start":1,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1840},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":510483,"byte_end":510487,"line_start":85,"line_end":85,"column_start":5,"column_end":9},"name":"Year","qualname":"::format::Numeric::Year","value":"Numeric::Year","parent":{"krate":0,"index":1839},"children":[],"decl_id":null,"docs":" Full Gregorian year (FW=4, PW=∞).\n May accept years before 1 BCE or after 9999 CE, given an initial sign.\n","sig":null,"attributes":[{"value":"/ Full Gregorian year (FW=4, PW=∞).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":510360,"byte_end":510399,"line_start":83,"line_end":83,"column_start":5,"column_end":42}},{"value":"/ May accept years before 1 BCE or after 9999 CE, given an initial sign.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":510404,"byte_end":510478,"line_start":84,"line_end":84,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1842},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":510589,"byte_end":510599,"line_start":87,"line_end":87,"column_start":5,"column_end":15},"name":"YearDiv100","qualname":"::format::Numeric::YearDiv100","value":"Numeric::YearDiv100","parent":{"krate":0,"index":1839},"children":[],"decl_id":null,"docs":" Gregorian year divided by 100 (century number; FW=PW=2). Implies the non-negative year.\n","sig":null,"attributes":[{"value":"/ Gregorian year divided by 100 (century number; FW=PW=2). Implies the non-negative year.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":510493,"byte_end":510584,"line_start":86,"line_end":86,"column_start":5,"column_end":96}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1844},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":510670,"byte_end":510680,"line_start":89,"line_end":89,"column_start":5,"column_end":15},"name":"YearMod100","qualname":"::format::Numeric::YearMod100","value":"Numeric::YearMod100","parent":{"krate":0,"index":1839},"children":[],"decl_id":null,"docs":" Gregorian year modulo 100 (FW=PW=2). Cannot be negative.\n","sig":null,"attributes":[{"value":"/ Gregorian year modulo 100 (FW=PW=2). Cannot be negative.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":510605,"byte_end":510665,"line_start":88,"line_end":88,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1846},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":510815,"byte_end":510822,"line_start":92,"line_end":92,"column_start":5,"column_end":12},"name":"IsoYear","qualname":"::format::Numeric::IsoYear","value":"Numeric::IsoYear","parent":{"krate":0,"index":1839},"children":[],"decl_id":null,"docs":" Year in the ISO week date (FW=4, PW=∞).\n May accept years before 1 BCE or after 9999 CE, given an initial sign.\n","sig":null,"attributes":[{"value":"/ Year in the ISO week date (FW=4, PW=∞).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":510686,"byte_end":510731,"line_start":90,"line_end":90,"column_start":5,"column_end":48}},{"value":"/ May accept years before 1 BCE or after 9999 CE, given an initial sign.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":510736,"byte_end":510810,"line_start":91,"line_end":91,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1848},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":510920,"byte_end":510933,"line_start":94,"line_end":94,"column_start":5,"column_end":18},"name":"IsoYearDiv100","qualname":"::format::Numeric::IsoYearDiv100","value":"Numeric::IsoYearDiv100","parent":{"krate":0,"index":1839},"children":[],"decl_id":null,"docs":" Year in the ISO week date, divided by 100 (FW=PW=2). Implies the non-negative year.\n","sig":null,"attributes":[{"value":"/ Year in the ISO week date, divided by 100 (FW=PW=2). Implies the non-negative year.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":510828,"byte_end":510915,"line_start":93,"line_end":93,"column_start":5,"column_end":92}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1850},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":511016,"byte_end":511029,"line_start":96,"line_end":96,"column_start":5,"column_end":18},"name":"IsoYearMod100","qualname":"::format::Numeric::IsoYearMod100","value":"Numeric::IsoYearMod100","parent":{"krate":0,"index":1839},"children":[],"decl_id":null,"docs":" Year in the ISO week date, modulo 100 (FW=PW=2). Cannot be negative.\n","sig":null,"attributes":[{"value":"/ Year in the ISO week date, modulo 100 (FW=PW=2). Cannot be negative.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":510939,"byte_end":511011,"line_start":95,"line_end":95,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1852},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":511060,"byte_end":511065,"line_start":98,"line_end":98,"column_start":5,"column_end":10},"name":"Month","qualname":"::format::Numeric::Month","value":"Numeric::Month","parent":{"krate":0,"index":1839},"children":[],"decl_id":null,"docs":" Month (FW=PW=2).\n","sig":null,"attributes":[{"value":"/ Month (FW=PW=2).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":511035,"byte_end":511055,"line_start":97,"line_end":97,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1854},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":511107,"byte_end":511110,"line_start":100,"line_end":100,"column_start":5,"column_end":8},"name":"Day","qualname":"::format::Numeric::Day","value":"Numeric::Day","parent":{"krate":0,"index":1839},"children":[],"decl_id":null,"docs":" Day of the month (FW=PW=2).\n","sig":null,"attributes":[{"value":"/ Day of the month (FW=PW=2).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":511071,"byte_end":511102,"line_start":99,"line_end":99,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1856},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":511203,"byte_end":511214,"line_start":102,"line_end":102,"column_start":5,"column_end":16},"name":"WeekFromSun","qualname":"::format::Numeric::WeekFromSun","value":"Numeric::WeekFromSun","parent":{"krate":0,"index":1839},"children":[],"decl_id":null,"docs":" Week number, where the week 1 starts at the first Sunday of January (FW=PW=2).\n","sig":null,"attributes":[{"value":"/ Week number, where the week 1 starts at the first Sunday of January (FW=PW=2).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":511116,"byte_end":511198,"line_start":101,"line_end":101,"column_start":5,"column_end":87}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1858},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":511307,"byte_end":511318,"line_start":104,"line_end":104,"column_start":5,"column_end":16},"name":"WeekFromMon","qualname":"::format::Numeric::WeekFromMon","value":"Numeric::WeekFromMon","parent":{"krate":0,"index":1839},"children":[],"decl_id":null,"docs":" Week number, where the week 1 starts at the first Monday of January (FW=PW=2).\n","sig":null,"attributes":[{"value":"/ Week number, where the week 1 starts at the first Monday of January (FW=PW=2).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":511220,"byte_end":511302,"line_start":103,"line_end":103,"column_start":5,"column_end":87}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1860},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":511376,"byte_end":511383,"line_start":106,"line_end":106,"column_start":5,"column_end":12},"name":"IsoWeek","qualname":"::format::Numeric::IsoWeek","value":"Numeric::IsoWeek","parent":{"krate":0,"index":1839},"children":[],"decl_id":null,"docs":" Week number in the ISO week date (FW=PW=2).\n","sig":null,"attributes":[{"value":"/ Week number in the ISO week date (FW=PW=2).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":511324,"byte_end":511371,"line_start":105,"line_end":105,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1862},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":511459,"byte_end":511473,"line_start":108,"line_end":108,"column_start":5,"column_end":19},"name":"NumDaysFromSun","qualname":"::format::Numeric::NumDaysFromSun","value":"Numeric::NumDaysFromSun","parent":{"krate":0,"index":1839},"children":[],"decl_id":null,"docs":" Day of the week, where Sunday = 0 and Saturday = 6 (FW=PW=1).\n","sig":null,"attributes":[{"value":"/ Day of the week, where Sunday = 0 and Saturday = 6 (FW=PW=1).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":511389,"byte_end":511454,"line_start":107,"line_end":107,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1864},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":511547,"byte_end":511561,"line_start":110,"line_end":110,"column_start":5,"column_end":19},"name":"WeekdayFromMon","qualname":"::format::Numeric::WeekdayFromMon","value":"Numeric::WeekdayFromMon","parent":{"krate":0,"index":1839},"children":[],"decl_id":null,"docs":" Day of the week, where Monday = 1 and Sunday = 7 (FW=PW=1).\n","sig":null,"attributes":[{"value":"/ Day of the week, where Monday = 1 and Sunday = 7 (FW=PW=1).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":511479,"byte_end":511542,"line_start":109,"line_end":109,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1866},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":511602,"byte_end":511609,"line_start":112,"line_end":112,"column_start":5,"column_end":12},"name":"Ordinal","qualname":"::format::Numeric::Ordinal","value":"Numeric::Ordinal","parent":{"krate":0,"index":1839},"children":[],"decl_id":null,"docs":" Day of the year (FW=PW=3).\n","sig":null,"attributes":[{"value":"/ Day of the year (FW=PW=3).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":511567,"byte_end":511597,"line_start":111,"line_end":111,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1868},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":511668,"byte_end":511672,"line_start":114,"line_end":114,"column_start":5,"column_end":9},"name":"Hour","qualname":"::format::Numeric::Hour","value":"Numeric::Hour","parent":{"krate":0,"index":1839},"children":[],"decl_id":null,"docs":" Hour number in the 24-hour clocks (FW=PW=2).\n","sig":null,"attributes":[{"value":"/ Hour number in the 24-hour clocks (FW=PW=2).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":511615,"byte_end":511663,"line_start":113,"line_end":113,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1870},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":511731,"byte_end":511737,"line_start":116,"line_end":116,"column_start":5,"column_end":11},"name":"Hour12","qualname":"::format::Numeric::Hour12","value":"Numeric::Hour12","parent":{"krate":0,"index":1839},"children":[],"decl_id":null,"docs":" Hour number in the 12-hour clocks (FW=PW=2).\n","sig":null,"attributes":[{"value":"/ Hour number in the 12-hour clocks (FW=PW=2).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":511678,"byte_end":511726,"line_start":115,"line_end":115,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1872},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":511810,"byte_end":511816,"line_start":118,"line_end":118,"column_start":5,"column_end":11},"name":"Minute","qualname":"::format::Numeric::Minute","value":"Numeric::Minute","parent":{"krate":0,"index":1839},"children":[],"decl_id":null,"docs":" The number of minutes since the last whole hour (FW=PW=2).\n","sig":null,"attributes":[{"value":"/ The number of minutes since the last whole hour (FW=PW=2).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":511743,"byte_end":511805,"line_start":117,"line_end":117,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1874},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":511891,"byte_end":511897,"line_start":120,"line_end":120,"column_start":5,"column_end":11},"name":"Second","qualname":"::format::Numeric::Second","value":"Numeric::Second","parent":{"krate":0,"index":1839},"children":[],"decl_id":null,"docs":" The number of seconds since the last whole minute (FW=PW=2).\n","sig":null,"attributes":[{"value":"/ The number of seconds since the last whole minute (FW=PW=2).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":511822,"byte_end":511886,"line_start":119,"line_end":119,"column_start":5,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1876},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":512100,"byte_end":512110,"line_start":124,"line_end":124,"column_start":5,"column_end":15},"name":"Nanosecond","qualname":"::format::Numeric::Nanosecond","value":"Numeric::Nanosecond","parent":{"krate":0,"index":1839},"children":[],"decl_id":null,"docs":" The number of nanoseconds since the last whole second (FW=PW=9).\n Note that this is *not* left-aligned;\n see also [`Fixed::Nanosecond`](./enum.Fixed.html#variant.Nanosecond).\n","sig":null,"attributes":[{"value":"/ The number of nanoseconds since the last whole second (FW=PW=9).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":511903,"byte_end":511971,"line_start":121,"line_end":121,"column_start":5,"column_end":73}},{"value":"/ Note that this is *not* left-aligned;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":511976,"byte_end":512017,"line_start":122,"line_end":122,"column_start":5,"column_end":46}},{"value":"/ see also [`Fixed::Nanosecond`](./enum.Fixed.html#variant.Nanosecond).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":512022,"byte_end":512095,"line_start":123,"line_end":123,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1878},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":512290,"byte_end":512299,"line_start":127,"line_end":127,"column_start":5,"column_end":14},"name":"Timestamp","qualname":"::format::Numeric::Timestamp","value":"Numeric::Timestamp","parent":{"krate":0,"index":1839},"children":[],"decl_id":null,"docs":" The number of non-leap seconds since the midnight UTC on January 1, 1970 (FW=1, PW=∞).\n For formatting, it assumes UTC upon the absence of time zone offset.\n","sig":null,"attributes":[{"value":"/ The number of non-leap seconds since the midnight UTC on January 1, 1970 (FW=1, PW=∞).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":512116,"byte_end":512208,"line_start":125,"line_end":125,"column_start":5,"column_end":95}},{"value":"/ For formatting, it assumes UTC upon the absence of time zone offset.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":512213,"byte_end":512285,"line_start":126,"line_end":126,"column_start":5,"column_end":77}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1880},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":512518,"byte_end":512526,"line_start":133,"line_end":133,"column_start":5,"column_end":13},"name":"Internal","qualname":"::format::Numeric::Internal","value":"Numeric::Internal(InternalNumeric)","parent":{"krate":0,"index":1839},"children":[],"decl_id":null,"docs":" Internal uses only.","sig":null,"attributes":[{"value":"/ Internal uses only.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":512306,"byte_end":512329,"line_start":129,"line_end":129,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":512334,"byte_end":512337,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ This item exists so that one can add additional internal-only formatting","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":512342,"byte_end":512418,"line_start":131,"line_end":131,"column_start":5,"column_end":81}},{"value":"/ without breaking major compatibility (as enum variants cannot be selectively private).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":512423,"byte_end":512513,"line_start":132,"line_end":132,"column_start":5,"column_end":95}}]},{"kind":"Enum","id":{"krate":0,"index":1839},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":510346,"byte_end":510353,"line_start":82,"line_end":82,"column_start":10,"column_end":17},"name":"Numeric","qualname":"::format::Numeric","value":"Numeric::{Year, YearDiv100, YearMod100, IsoYear, IsoYearDiv100, IsoYearMod100, Month, Day, WeekFromSun, WeekFromMon, IsoWeek, NumDaysFromSun, WeekdayFromMon, Ordinal, Hour, Hour12, Minute, Second, Nanosecond, Timestamp, Internal}","parent":null,"children":[{"krate":0,"index":1840},{"krate":0,"index":1842},{"krate":0,"index":1844},{"krate":0,"index":1846},{"krate":0,"index":1848},{"krate":0,"index":1850},{"krate":0,"index":1852},{"krate":0,"index":1854},{"krate":0,"index":1856},{"krate":0,"index":1858},{"krate":0,"index":1860},{"krate":0,"index":1862},{"krate":0,"index":1864},{"krate":0,"index":1866},{"krate":0,"index":1868},{"krate":0,"index":1870},{"krate":0,"index":1872},{"krate":0,"index":1874},{"krate":0,"index":1876},{"krate":0,"index":1878},{"krate":0,"index":1880}],"decl_id":null,"docs":" Numeric item types.\n They have associated formatting width (FW) and parsing width (PW).","sig":null,"attributes":[{"value":"/ Numeric item types.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":509592,"byte_end":509615,"line_start":68,"line_end":68,"column_start":1,"column_end":24}},{"value":"/ They have associated formatting width (FW) and parsing width (PW).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":509616,"byte_end":509686,"line_start":69,"line_end":69,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":509687,"byte_end":509690,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ The **formatting width** is the minimal width to be formatted.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":509691,"byte_end":509757,"line_start":71,"line_end":71,"column_start":1,"column_end":67}},{"value":"/ If the number is too short, and the padding is not [`Pad::None`](./enum.Pad.html#variant.None),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":509758,"byte_end":509857,"line_start":72,"line_end":72,"column_start":1,"column_end":100}},{"value":"/ then it is left-padded.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":509858,"byte_end":509885,"line_start":73,"line_end":73,"column_start":1,"column_end":28}},{"value":"/ If the number is too long or (in some cases) negative, it is printed as is.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":509886,"byte_end":509965,"line_start":74,"line_end":74,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":509966,"byte_end":509969,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ The **parsing width** is the maximal width to be scanned.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":509970,"byte_end":510031,"line_start":76,"line_end":76,"column_start":1,"column_end":62}},{"value":"/ The parser only tries to consume from one to given number of digits (greedily).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":510032,"byte_end":510115,"line_start":77,"line_end":77,"column_start":1,"column_end":84}},{"value":"/ It also trims the preceding whitespace if any.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":510116,"byte_end":510166,"line_start":78,"line_end":78,"column_start":1,"column_end":51}},{"value":"/ It cannot parse the negative number, so some date and time cannot be formatted then","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":510167,"byte_end":510254,"line_start":79,"line_end":79,"column_start":1,"column_end":88}},{"value":"/ parsed with the same formatting items.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":510255,"byte_end":510297,"line_start":80,"line_end":80,"column_start":1,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":1107},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":512634,"byte_end":512649,"line_start":137,"line_end":137,"column_start":12,"column_end":27},"name":"InternalNumeric","qualname":"::format::InternalNumeric","value":"InternalNumeric {  }","parent":null,"children":[{"krate":0,"index":1108}],"decl_id":null,"docs":" An opaque type representing numeric item types for internal uses only.\n","sig":null,"attributes":[{"value":"/ An opaque type representing numeric item types for internal uses only.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":512548,"byte_end":512622,"line_start":136,"line_end":136,"column_start":1,"column_end":75}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1895},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":513447,"byte_end":513461,"line_start":170,"line_end":170,"column_start":5,"column_end":19},"name":"ShortMonthName","qualname":"::format::Fixed::ShortMonthName","value":"Fixed::ShortMonthName","parent":{"krate":0,"index":1894},"children":[],"decl_id":null,"docs":" Abbreviated month names.","sig":null,"attributes":[{"value":"/ Abbreviated month names.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":513314,"byte_end":513342,"line_start":167,"line_end":167,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":513347,"byte_end":513350,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Prints a three-letter-long name in the title case, reads the same name in any case.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":513355,"byte_end":513442,"line_start":169,"line_end":169,"column_start":5,"column_end":92}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1897},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":513594,"byte_end":513607,"line_start":174,"line_end":174,"column_start":5,"column_end":18},"name":"LongMonthName","qualname":"::format::Fixed::LongMonthName","value":"Fixed::LongMonthName","parent":{"krate":0,"index":1894},"children":[],"decl_id":null,"docs":" Full month names.","sig":null,"attributes":[{"value":"/ Full month names.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":513467,"byte_end":513488,"line_start":171,"line_end":171,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":513493,"byte_end":513496,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ Prints a full name in the title case, reads either a short or full name in any case.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":513501,"byte_end":513589,"line_start":173,"line_end":173,"column_start":5,"column_end":93}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1899},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":513756,"byte_end":513772,"line_start":178,"line_end":178,"column_start":5,"column_end":21},"name":"ShortWeekdayName","qualname":"::format::Fixed::ShortWeekdayName","value":"Fixed::ShortWeekdayName","parent":{"krate":0,"index":1894},"children":[],"decl_id":null,"docs":" Abbreviated day of the week names.","sig":null,"attributes":[{"value":"/ Abbreviated day of the week names.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":513613,"byte_end":513651,"line_start":175,"line_end":175,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":513656,"byte_end":513659,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Prints a three-letter-long name in the title case, reads the same name in any case.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":513664,"byte_end":513751,"line_start":177,"line_end":177,"column_start":5,"column_end":92}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1901},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":513915,"byte_end":513930,"line_start":182,"line_end":182,"column_start":5,"column_end":20},"name":"LongWeekdayName","qualname":"::format::Fixed::LongWeekdayName","value":"Fixed::LongWeekdayName","parent":{"krate":0,"index":1894},"children":[],"decl_id":null,"docs":" Full day of the week names.","sig":null,"attributes":[{"value":"/ Full day of the week names.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":513778,"byte_end":513809,"line_start":179,"line_end":179,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":513814,"byte_end":513817,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ Prints a full name in the title case, reads either a short or full name in any case.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":513822,"byte_end":513910,"line_start":181,"line_end":181,"column_start":5,"column_end":93}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1903},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":514008,"byte_end":514017,"line_start":186,"line_end":186,"column_start":5,"column_end":14},"name":"LowerAmPm","qualname":"::format::Fixed::LowerAmPm","value":"Fixed::LowerAmPm","parent":{"krate":0,"index":1894},"children":[],"decl_id":null,"docs":" AM/PM.","sig":null,"attributes":[{"value":"/ AM/PM.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":513936,"byte_end":513946,"line_start":183,"line_end":183,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":513951,"byte_end":513954,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ Prints in lower case, reads in any case.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":513959,"byte_end":514003,"line_start":185,"line_end":185,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1905},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":514095,"byte_end":514104,"line_start":190,"line_end":190,"column_start":5,"column_end":14},"name":"UpperAmPm","qualname":"::format::Fixed::UpperAmPm","value":"Fixed::UpperAmPm","parent":{"krate":0,"index":1894},"children":[],"decl_id":null,"docs":" AM/PM.","sig":null,"attributes":[{"value":"/ AM/PM.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":514023,"byte_end":514033,"line_start":187,"line_end":187,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":514038,"byte_end":514041,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ Prints in upper case, reads in any case.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":514046,"byte_end":514090,"line_start":189,"line_end":189,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1907},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":514351,"byte_end":514361,"line_start":194,"line_end":194,"column_start":5,"column_end":15},"name":"Nanosecond","qualname":"::format::Fixed::Nanosecond","value":"Fixed::Nanosecond","parent":{"krate":0,"index":1894},"children":[],"decl_id":null,"docs":" An optional dot plus one or more digits for left-aligned nanoseconds.\n May print nothing, 3, 6 or 9 digits according to the available accuracy.\n See also [`Numeric::Nanosecond`](./enum.Numeric.html#variant.Nanosecond).\n","sig":null,"attributes":[{"value":"/ An optional dot plus one or more digits for left-aligned nanoseconds.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":514110,"byte_end":514183,"line_start":191,"line_end":191,"column_start":5,"column_end":78}},{"value":"/ May print nothing, 3, 6 or 9 digits according to the available accuracy.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":514188,"byte_end":514264,"line_start":192,"line_end":192,"column_start":5,"column_end":81}},{"value":"/ See also [`Numeric::Nanosecond`](./enum.Numeric.html#variant.Nanosecond).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":514269,"byte_end":514346,"line_start":193,"line_end":193,"column_start":5,"column_end":82}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1909},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":514451,"byte_end":514462,"line_start":196,"line_end":196,"column_start":5,"column_end":16},"name":"Nanosecond3","qualname":"::format::Fixed::Nanosecond3","value":"Fixed::Nanosecond3","parent":{"krate":0,"index":1894},"children":[],"decl_id":null,"docs":" Same as [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 3.\n","sig":null,"attributes":[{"value":"/ Same as [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 3.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":514367,"byte_end":514446,"line_start":195,"line_end":195,"column_start":5,"column_end":84}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1911},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":514552,"byte_end":514563,"line_start":198,"line_end":198,"column_start":5,"column_end":16},"name":"Nanosecond6","qualname":"::format::Fixed::Nanosecond6","value":"Fixed::Nanosecond6","parent":{"krate":0,"index":1894},"children":[],"decl_id":null,"docs":" Same as [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 6.\n","sig":null,"attributes":[{"value":"/ Same as [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 6.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":514468,"byte_end":514547,"line_start":197,"line_end":197,"column_start":5,"column_end":84}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1913},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":514653,"byte_end":514664,"line_start":200,"line_end":200,"column_start":5,"column_end":16},"name":"Nanosecond9","qualname":"::format::Fixed::Nanosecond9","value":"Fixed::Nanosecond9","parent":{"krate":0,"index":1894},"children":[],"decl_id":null,"docs":" Same as [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 9.\n","sig":null,"attributes":[{"value":"/ Same as [`Nanosecond`](#variant.Nanosecond) but the accuracy is fixed to 9.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":514569,"byte_end":514648,"line_start":199,"line_end":199,"column_start":5,"column_end":84}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1915},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":514785,"byte_end":514797,"line_start":204,"line_end":204,"column_start":5,"column_end":17},"name":"TimezoneName","qualname":"::format::Fixed::TimezoneName","value":"Fixed::TimezoneName","parent":{"krate":0,"index":1894},"children":[],"decl_id":null,"docs":" Timezone name.","sig":null,"attributes":[{"value":"/ Timezone name.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":514670,"byte_end":514688,"line_start":201,"line_end":201,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":514693,"byte_end":514696,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ It does not support parsing, its use in the parser is an immediate failure.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":514701,"byte_end":514780,"line_start":203,"line_end":203,"column_start":5,"column_end":84}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1917},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":515132,"byte_end":515151,"line_start":210,"line_end":210,"column_start":5,"column_end":24},"name":"TimezoneOffsetColon","qualname":"::format::Fixed::TimezoneOffsetColon","value":"Fixed::TimezoneOffsetColon","parent":{"krate":0,"index":1894},"children":[],"decl_id":null,"docs":" Offset from the local time to UTC (`+09:00` or `-04:00` or `+00:00`).","sig":null,"attributes":[{"value":"/ Offset from the local time to UTC (`+09:00` or `-04:00` or `+00:00`).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":514803,"byte_end":514876,"line_start":205,"line_end":205,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":514881,"byte_end":514884,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ In the parser, the colon can be omitted and/or surrounded with any amount of whitespace.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":514889,"byte_end":514981,"line_start":207,"line_end":207,"column_start":5,"column_end":97}},{"value":"/ The offset is limited from `-24:00` to `+24:00`,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":514986,"byte_end":515038,"line_start":208,"line_end":208,"column_start":5,"column_end":57}},{"value":"/ which is the same as [`FixedOffset`](../offset/struct.FixedOffset.html)'s range.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":515043,"byte_end":515127,"line_start":209,"line_end":209,"column_start":5,"column_end":89}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1919},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":515543,"byte_end":515563,"line_start":217,"line_end":217,"column_start":5,"column_end":25},"name":"TimezoneOffsetColonZ","qualname":"::format::Fixed::TimezoneOffsetColonZ","value":"Fixed::TimezoneOffsetColonZ","parent":{"krate":0,"index":1894},"children":[],"decl_id":null,"docs":" Offset from the local time to UTC (`+09:00` or `-04:00` or `Z`).","sig":null,"attributes":[{"value":"/ Offset from the local time to UTC (`+09:00` or `-04:00` or `Z`).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":515157,"byte_end":515225,"line_start":211,"line_end":211,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":515230,"byte_end":515233,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ In the parser, the colon can be omitted and/or surrounded with any amount of whitespace,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":515238,"byte_end":515330,"line_start":213,"line_end":213,"column_start":5,"column_end":97}},{"value":"/ and `Z` can be either in upper case or in lower case.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":515335,"byte_end":515392,"line_start":214,"line_end":214,"column_start":5,"column_end":62}},{"value":"/ The offset is limited from `-24:00` to `+24:00`,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":515397,"byte_end":515449,"line_start":215,"line_end":215,"column_start":5,"column_end":57}},{"value":"/ which is the same as [`FixedOffset`](../offset/struct.FixedOffset.html)'s range.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":515454,"byte_end":515538,"line_start":216,"line_end":216,"column_start":5,"column_end":89}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1921},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":515702,"byte_end":515716,"line_start":220,"line_end":220,"column_start":5,"column_end":19},"name":"TimezoneOffset","qualname":"::format::Fixed::TimezoneOffset","value":"Fixed::TimezoneOffset","parent":{"krate":0,"index":1894},"children":[],"decl_id":null,"docs":" Same as [`TimezoneOffsetColon`](#variant.TimezoneOffsetColon) but prints no colon.\n Parsing allows an optional colon.\n","sig":null,"attributes":[{"value":"/ Same as [`TimezoneOffsetColon`](#variant.TimezoneOffsetColon) but prints no colon.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":515569,"byte_end":515655,"line_start":218,"line_end":218,"column_start":5,"column_end":91}},{"value":"/ Parsing allows an optional colon.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":515660,"byte_end":515697,"line_start":219,"line_end":219,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1923},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":515857,"byte_end":515872,"line_start":223,"line_end":223,"column_start":5,"column_end":20},"name":"TimezoneOffsetZ","qualname":"::format::Fixed::TimezoneOffsetZ","value":"Fixed::TimezoneOffsetZ","parent":{"krate":0,"index":1894},"children":[],"decl_id":null,"docs":" Same as [`TimezoneOffsetColonZ`](#variant.TimezoneOffsetColonZ) but prints no colon.\n Parsing allows an optional colon.\n","sig":null,"attributes":[{"value":"/ Same as [`TimezoneOffsetColonZ`](#variant.TimezoneOffsetColonZ) but prints no colon.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":515722,"byte_end":515810,"line_start":221,"line_end":221,"column_start":5,"column_end":93}},{"value":"/ Parsing allows an optional colon.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":515815,"byte_end":515852,"line_start":222,"line_end":222,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1925},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":515965,"byte_end":515972,"line_start":225,"line_end":225,"column_start":5,"column_end":12},"name":"RFC2822","qualname":"::format::Fixed::RFC2822","value":"Fixed::RFC2822","parent":{"krate":0,"index":1894},"children":[],"decl_id":null,"docs":" RFC 2822 date and time syntax. Commonly used for email and MIME date and time.\n","sig":null,"attributes":[{"value":"/ RFC 2822 date and time syntax. Commonly used for email and MIME date and time.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":515878,"byte_end":515960,"line_start":224,"line_end":224,"column_start":5,"column_end":87}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1927},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":516028,"byte_end":516035,"line_start":227,"line_end":227,"column_start":5,"column_end":12},"name":"RFC3339","qualname":"::format::Fixed::RFC3339","value":"Fixed::RFC3339","parent":{"krate":0,"index":1894},"children":[],"decl_id":null,"docs":" RFC 3339 & ISO 8601 date and time syntax.\n","sig":null,"attributes":[{"value":"/ RFC 3339 & ISO 8601 date and time syntax.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":515978,"byte_end":516023,"line_start":226,"line_end":226,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1929},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":516254,"byte_end":516262,"line_start":233,"line_end":233,"column_start":5,"column_end":13},"name":"Internal","qualname":"::format::Fixed::Internal","value":"Fixed::Internal(InternalFixed)","parent":{"krate":0,"index":1894},"children":[],"decl_id":null,"docs":" Internal uses only.","sig":null,"attributes":[{"value":"/ Internal uses only.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":516042,"byte_end":516065,"line_start":229,"line_end":229,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":516070,"byte_end":516073,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ This item exists so that one can add additional internal-only formatting","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":516078,"byte_end":516154,"line_start":231,"line_end":231,"column_start":5,"column_end":81}},{"value":"/ without breaking major compatibility (as enum variants cannot be selectively private).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":516159,"byte_end":516249,"line_start":232,"line_end":232,"column_start":5,"column_end":95}}]},{"kind":"Enum","id":{"krate":0,"index":1894},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":513302,"byte_end":513307,"line_start":166,"line_end":166,"column_start":10,"column_end":15},"name":"Fixed","qualname":"::format::Fixed","value":"Fixed::{ShortMonthName, LongMonthName, ShortWeekdayName, LongWeekdayName, LowerAmPm, UpperAmPm, Nanosecond, Nanosecond3, Nanosecond6, Nanosecond9, TimezoneName, TimezoneOffsetColon, TimezoneOffsetColonZ, TimezoneOffset, TimezoneOffsetZ, RFC2822, RFC3339, Internal}","parent":null,"children":[{"krate":0,"index":1895},{"krate":0,"index":1897},{"krate":0,"index":1899},{"krate":0,"index":1901},{"krate":0,"index":1903},{"krate":0,"index":1905},{"krate":0,"index":1907},{"krate":0,"index":1909},{"krate":0,"index":1911},{"krate":0,"index":1913},{"krate":0,"index":1915},{"krate":0,"index":1917},{"krate":0,"index":1919},{"krate":0,"index":1921},{"krate":0,"index":1923},{"krate":0,"index":1925},{"krate":0,"index":1927},{"krate":0,"index":1929}],"decl_id":null,"docs":" Fixed-format item types.","sig":null,"attributes":[{"value":"/ Fixed-format item types.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":513079,"byte_end":513107,"line_start":161,"line_end":161,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":513108,"byte_end":513111,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ They have their own rules of formatting and parsing.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":513112,"byte_end":513168,"line_start":163,"line_end":163,"column_start":1,"column_end":57}},{"value":"/ Otherwise noted, they print in the specified cases but parse case-insensitively.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":513169,"byte_end":513253,"line_start":164,"line_end":164,"column_start":1,"column_end":85}}]},{"kind":"Struct","id":{"krate":0,"index":1943},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":516412,"byte_end":516425,"line_start":238,"line_end":238,"column_start":12,"column_end":25},"name":"InternalFixed","qualname":"::format::InternalFixed","value":"InternalFixed {  }","parent":null,"children":[{"krate":0,"index":1944}],"decl_id":null,"docs":" An opaque type representing fixed-format item types for internal uses only.\n","sig":null,"attributes":[{"value":"/ An opaque type representing fixed-format item types for internal uses only.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":516282,"byte_end":516361,"line_start":236,"line_end":236,"column_start":1,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1977},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":517441,"byte_end":517448,"line_start":265,"line_end":265,"column_start":5,"column_end":12},"name":"Literal","qualname":"::format::Item::Literal","value":"Item::Literal(&'a str)","parent":{"krate":0,"index":1975},"children":[],"decl_id":null,"docs":" A literally printed and parsed text.\n","sig":null,"attributes":[{"value":"/ A literally printed and parsed text.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":517396,"byte_end":517436,"line_start":264,"line_end":264,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1980},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":517586,"byte_end":517598,"line_start":268,"line_end":268,"column_start":5,"column_end":17},"name":"OwnedLiteral","qualname":"::format::Item::OwnedLiteral","value":"Item::OwnedLiteral(Box<str>)","parent":{"krate":0,"index":1975},"children":[],"decl_id":null,"docs":" Same as `Literal` but with the string owned by the item.\n","sig":null,"attributes":[{"value":"/ Same as `Literal` but with the string owned by the item.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":517463,"byte_end":517523,"line_start":266,"line_end":266,"column_start":5,"column_end":65}},{"value":"cfg(any(feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":517528,"byte_end":517581,"line_start":267,"line_end":267,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1983},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":517686,"byte_end":517691,"line_start":270,"line_end":270,"column_start":5,"column_end":10},"name":"Space","qualname":"::format::Item::Space","value":"Item::Space(&'a str)","parent":{"krate":0,"index":1975},"children":[],"decl_id":null,"docs":" Whitespace. Prints literally but reads zero or more whitespace.\n","sig":null,"attributes":[{"value":"/ Whitespace. Prints literally but reads zero or more whitespace.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":517614,"byte_end":517681,"line_start":269,"line_end":269,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1986},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":517827,"byte_end":517837,"line_start":273,"line_end":273,"column_start":5,"column_end":15},"name":"OwnedSpace","qualname":"::format::Item::OwnedSpace","value":"Item::OwnedSpace(Box<str>)","parent":{"krate":0,"index":1975},"children":[],"decl_id":null,"docs":" Same as `Space` but with the string owned by the item.\n","sig":null,"attributes":[{"value":"/ Same as `Space` but with the string owned by the item.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":517706,"byte_end":517764,"line_start":271,"line_end":271,"column_start":5,"column_end":63}},{"value":"cfg(any(feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":517769,"byte_end":517822,"line_start":272,"line_end":272,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1989},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":518016,"byte_end":518023,"line_start":276,"line_end":276,"column_start":5,"column_end":12},"name":"Numeric","qualname":"::format::Item::Numeric","value":"Item::Numeric(Numeric, Pad)","parent":{"krate":0,"index":1975},"children":[],"decl_id":null,"docs":" Numeric item. Can be optionally padded to the maximal length (if any) when formatting;\n the parser simply ignores any padded whitespace and zeroes.\n","sig":null,"attributes":[{"value":"/ Numeric item. Can be optionally padded to the maximal length (if any) when formatting;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":517853,"byte_end":517943,"line_start":274,"line_end":274,"column_start":5,"column_end":95}},{"value":"/ the parser simply ignores any padded whitespace and zeroes.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":517948,"byte_end":518011,"line_start":275,"line_end":275,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1993},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":518070,"byte_end":518075,"line_start":278,"line_end":278,"column_start":5,"column_end":10},"name":"Fixed","qualname":"::format::Item::Fixed","value":"Item::Fixed(Fixed)","parent":{"krate":0,"index":1975},"children":[],"decl_id":null,"docs":" Fixed-format item.\n","sig":null,"attributes":[{"value":"/ Fixed-format item.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":518043,"byte_end":518065,"line_start":277,"line_end":277,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1996},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":518164,"byte_end":518169,"line_start":280,"line_end":280,"column_start":5,"column_end":10},"name":"Error","qualname":"::format::Item::Error","value":"Item::Error","parent":{"krate":0,"index":1975},"children":[],"decl_id":null,"docs":" Issues a formatting error. Used to signal an invalid format string.\n","sig":null,"attributes":[{"value":"/ Issues a formatting error. Used to signal an invalid format string.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":518088,"byte_end":518159,"line_start":279,"line_end":279,"column_start":5,"column_end":76}}]},{"kind":"Enum","id":{"krate":0,"index":1975},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":517381,"byte_end":517385,"line_start":263,"line_end":263,"column_start":10,"column_end":14},"name":"Item","qualname":"::format::Item","value":"Item::{Literal, OwnedLiteral, Space, OwnedSpace, Numeric, Fixed, Error}","parent":null,"children":[{"krate":0,"index":1977},{"krate":0,"index":1980},{"krate":0,"index":1983},{"krate":0,"index":1986},{"krate":0,"index":1989},{"krate":0,"index":1993},{"krate":0,"index":1996}],"decl_id":null,"docs":" A single formatting item. This is used for both formatting and parsing.\n","sig":null,"attributes":[{"value":"/ A single formatting item. This is used for both formatting and parsing.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":517257,"byte_end":517332,"line_start":261,"line_end":261,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":2015},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":518917,"byte_end":518927,"line_start":321,"line_end":321,"column_start":12,"column_end":22},"name":"ParseError","qualname":"::format::ParseError","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error from the `parse` function.\n","sig":null,"attributes":[{"value":"/ An error from the `parse` function.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":518821,"byte_end":518860,"line_start":319,"line_end":319,"column_start":1,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":1123},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":520195,"byte_end":520206,"line_start":356,"line_end":356,"column_start":10,"column_end":21},"name":"ParseResult","qualname":"::format::ParseResult","value":"Result<T, ParseError>","parent":null,"children":[],"decl_id":null,"docs":" Same as `Result<T, ParseError>`.\n","sig":null,"attributes":[{"value":"/ Same as `Result<T, ParseError>`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":520149,"byte_end":520185,"line_start":355,"line_end":355,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":1136},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":521776,"byte_end":521787,"line_start":391,"line_end":391,"column_start":8,"column_end":19},"name":"format_item","qualname":"::format::format_item","value":"fn <'a> (w: &mut fmt::Formatter, date: Option<&NaiveDate>, time: Option<&NaiveTime>, off: Option<&(String, FixedOffset)>, item: &Item<'a>) -> fmt::Result","parent":null,"children":[],"decl_id":null,"docs":" Formats single formatting item\n","sig":null,"attributes":[{"value":"/ Formats single formatting item","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":521680,"byte_end":521714,"line_start":389,"line_end":389,"column_start":1,"column_end":35}},{"value":"cfg(any(feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":521715,"byte_end":521768,"line_start":390,"line_end":390,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":1186},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":535108,"byte_end":535114,"line_start":689,"line_end":689,"column_start":8,"column_end":14},"name":"format","qualname":"::format::format","value":"fn <'a, I, B> (w: &mut fmt::Formatter, date: Option<&NaiveDate>, time: Option<&NaiveTime>, off: Option<&(String, FixedOffset)>, items: I) -> fmt::Result","parent":null,"children":[],"decl_id":null,"docs":" Tries to format given arguments with given formatting items.\n Internally used by `DelayedFormat`.\n","sig":null,"attributes":[{"value":"/ Tries to format given arguments with given formatting items.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":534942,"byte_end":535006,"line_start":686,"line_end":686,"column_start":1,"column_end":65}},{"value":"/ Internally used by `DelayedFormat`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":535007,"byte_end":535046,"line_start":687,"line_end":687,"column_start":1,"column_end":40}},{"value":"cfg(any(feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":535047,"byte_end":535100,"line_start":688,"line_end":688,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":2056},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":543486,"byte_end":543492,"line_start":27,"line_end":27,"column_start":12,"column_end":18},"name":"Parsed","qualname":"::format::parsed::Parsed","value":"Parsed { year, year_div_100, year_mod_100, isoyear, isoyear_div_100, isoyear_mod_100, month, week_from_sun, week_from_mon, isoweek, weekday, ordinal, day, hour_div_12, hour_mod_12, minute, second, nanosecond, timestamp, offset }","parent":null,"children":[{"krate":0,"index":2057},{"krate":0,"index":2058},{"krate":0,"index":2059},{"krate":0,"index":2060},{"krate":0,"index":2061},{"krate":0,"index":2062},{"krate":0,"index":2063},{"krate":0,"index":2064},{"krate":0,"index":2065},{"krate":0,"index":2066},{"krate":0,"index":2067},{"krate":0,"index":2068},{"krate":0,"index":2069},{"krate":0,"index":2070},{"krate":0,"index":2071},{"krate":0,"index":2072},{"krate":0,"index":2073},{"krate":0,"index":2074},{"krate":0,"index":2075},{"krate":0,"index":2076},{"krate":0,"index":2077}],"decl_id":null,"docs":" Parsed parts of date and time. There are two classes of methods:","sig":null,"attributes":[{"value":"/ Parsed parts of date and time. There are two classes of methods:","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":542968,"byte_end":543036,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":543037,"byte_end":543040,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ - `set_*` methods try to set given field(s) while checking for the consistency.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":543041,"byte_end":543124,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"/   It may or may not check for the range constraint immediately (for efficiency reasons).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":543125,"byte_end":543217,"line_start":21,"line_end":21,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":543218,"byte_end":543221,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ - `to_*` methods try to make a concrete date and time value out of set fields.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":543222,"byte_end":543304,"line_start":23,"line_end":23,"column_start":1,"column_end":83}},{"value":"/   It fully checks any remaining out-of-range conditions and inconsistent/impossible fields.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":543305,"byte_end":543400,"line_start":24,"line_end":24,"column_start":1,"column_end":96}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":543401,"byte_end":543439,"line_start":25,"line_end":25,"column_start":1,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":2057},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":543669,"byte_end":543673,"line_start":32,"line_end":32,"column_start":9,"column_end":13},"name":"year","qualname":"::format::parsed::Parsed::year","value":"std::option::Option<i32>","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Year.","sig":null,"attributes":[{"value":"/ Year.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":543499,"byte_end":543508,"line_start":28,"line_end":28,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":543513,"byte_end":543516,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ This can be negative unlike [`year_div_100`](#structfield.year_div_100)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":543521,"byte_end":543596,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/ and [`year_mod_100`](#structfield.year_mod_100) fields.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":543601,"byte_end":543660,"line_start":31,"line_end":31,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":2058},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":543977,"byte_end":543989,"line_start":39,"line_end":39,"column_start":9,"column_end":21},"name":"year_div_100","qualname":"::format::parsed::Parsed::year_div_100","value":"std::option::Option<i32>","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Year divided by 100. Implies that the year is >= 1 BCE when set.","sig":null,"attributes":[{"value":"/ Year divided by 100. Implies that the year is >= 1 BCE when set.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":543693,"byte_end":543761,"line_start":34,"line_end":34,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":543766,"byte_end":543769,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Due to the common usage, if this field is missing but","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":543774,"byte_end":543831,"line_start":36,"line_end":36,"column_start":5,"column_end":62}},{"value":"/ [`year_mod_100`](#structfield.year_mod_100) is present,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":543836,"byte_end":543895,"line_start":37,"line_end":37,"column_start":5,"column_end":64}},{"value":"/ it is inferred to 19 when `year_mod_100 >= 70` and 20 otherwise.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":543900,"byte_end":543968,"line_start":38,"line_end":38,"column_start":5,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":2059},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":544082,"byte_end":544094,"line_start":42,"line_end":42,"column_start":9,"column_end":21},"name":"year_mod_100","qualname":"::format::parsed::Parsed::year_mod_100","value":"std::option::Option<i32>","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Year modulo 100. Implies that the year is >= 1 BCE when set.\n","sig":null,"attributes":[{"value":"/ Year modulo 100. Implies that the year is >= 1 BCE when set.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":544009,"byte_end":544073,"line_start":41,"line_end":41,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":2060},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":544361,"byte_end":544368,"line_start":48,"line_end":48,"column_start":9,"column_end":16},"name":"isoyear","qualname":"::format::parsed::Parsed::isoyear","value":"std::option::Option<i32>","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Year in the [ISO week date](../naive/struct.NaiveDate.html#week-date).","sig":null,"attributes":[{"value":"/ Year in the [ISO week date](../naive/struct.NaiveDate.html#week-date).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":544114,"byte_end":544188,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":544193,"byte_end":544196,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This can be negative unlike [`isoyear_div_100`](#structfield.isoyear_div_100) and","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":544201,"byte_end":544286,"line_start":46,"line_end":46,"column_start":5,"column_end":90}},{"value":"/ [`isoyear_mod_100`](#structfield.isoyear_mod_100) fields.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":544291,"byte_end":544352,"line_start":47,"line_end":47,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":2061},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":544755,"byte_end":544770,"line_start":56,"line_end":56,"column_start":9,"column_end":24},"name":"isoyear_div_100","qualname":"::format::parsed::Parsed::isoyear_div_100","value":"std::option::Option<i32>","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Year in the [ISO week date](../naive/struct.NaiveDate.html#week-date), divided by 100.\n Implies that the year is >= 1 BCE when set.","sig":null,"attributes":[{"value":"/ Year in the [ISO week date](../naive/struct.NaiveDate.html#week-date), divided by 100.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":544388,"byte_end":544478,"line_start":50,"line_end":50,"column_start":5,"column_end":95}},{"value":"/ Implies that the year is >= 1 BCE when set.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":544483,"byte_end":544530,"line_start":51,"line_end":51,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":544535,"byte_end":544538,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ Due to the common usage, if this field is missing but","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":544543,"byte_end":544600,"line_start":53,"line_end":53,"column_start":5,"column_end":62}},{"value":"/ [`isoyear_mod_100`](#structfield.isoyear_mod_100) is present,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":544605,"byte_end":544670,"line_start":54,"line_end":54,"column_start":5,"column_end":70}},{"value":"/ it is inferred to 19 when `isoyear_mod_100 >= 70` and 20 otherwise.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":544675,"byte_end":544746,"line_start":55,"line_end":55,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":2062},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":544937,"byte_end":544952,"line_start":60,"line_end":60,"column_start":9,"column_end":24},"name":"isoyear_mod_100","qualname":"::format::parsed::Parsed::isoyear_mod_100","value":"std::option::Option<i32>","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Year in the [ISO week date](../naive/struct.NaiveDate.html#week-date), modulo 100.\n Implies that the year is >= 1 BCE when set.\n","sig":null,"attributes":[{"value":"/ Year in the [ISO week date](../naive/struct.NaiveDate.html#week-date), modulo 100.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":544790,"byte_end":544876,"line_start":58,"line_end":58,"column_start":5,"column_end":91}},{"value":"/ Implies that the year is >= 1 BCE when set.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":544881,"byte_end":544928,"line_start":59,"line_end":59,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2063},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":544999,"byte_end":545004,"line_start":63,"line_end":63,"column_start":9,"column_end":14},"name":"month","qualname":"::format::parsed::Parsed::month","value":"std::option::Option<u32>","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Month (1--12).\n","sig":null,"attributes":[{"value":"/ Month (1--12).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":544972,"byte_end":544990,"line_start":62,"line_end":62,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":2064},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":545159,"byte_end":545172,"line_start":67,"line_end":67,"column_start":9,"column_end":22},"name":"week_from_sun","qualname":"::format::parsed::Parsed::week_from_sun","value":"std::option::Option<u32>","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Week number, where the week 1 starts at the first Sunday of January\n (0--53, 1--53 or 1--52 depending on the year).\n","sig":null,"attributes":[{"value":"/ Week number, where the week 1 starts at the first Sunday of January","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":545024,"byte_end":545095,"line_start":65,"line_end":65,"column_start":5,"column_end":76}},{"value":"/ (0--53, 1--53 or 1--52 depending on the year).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":545100,"byte_end":545150,"line_start":66,"line_end":66,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":2065},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":545327,"byte_end":545340,"line_start":71,"line_end":71,"column_start":9,"column_end":22},"name":"week_from_mon","qualname":"::format::parsed::Parsed::week_from_mon","value":"std::option::Option<u32>","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Week number, where the week 1 starts at the first Monday of January\n (0--53, 1--53 or 1--52 depending on the year).\n","sig":null,"attributes":[{"value":"/ Week number, where the week 1 starts at the first Monday of January","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":545192,"byte_end":545263,"line_start":69,"line_end":69,"column_start":5,"column_end":76}},{"value":"/ (0--53, 1--53 or 1--52 depending on the year).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":545268,"byte_end":545318,"line_start":70,"line_end":70,"column_start":5,"column_end":55}}]},{"kind":"Field","id":{"krate":0,"index":2066},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":545480,"byte_end":545487,"line_start":75,"line_end":75,"column_start":9,"column_end":16},"name":"isoweek","qualname":"::format::parsed::Parsed::isoweek","value":"std::option::Option<u32>","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" [ISO week number](../naive/struct.NaiveDate.html#week-date)\n (1--52 or 1--53 depending on the year).\n","sig":null,"attributes":[{"value":"/ [ISO week number](../naive/struct.NaiveDate.html#week-date)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":545360,"byte_end":545423,"line_start":73,"line_end":73,"column_start":5,"column_end":68}},{"value":"/ (1--52 or 1--53 depending on the year).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":545428,"byte_end":545471,"line_start":74,"line_end":74,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":2067},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":545536,"byte_end":545543,"line_start":78,"line_end":78,"column_start":9,"column_end":16},"name":"weekday","qualname":"::format::parsed::Parsed::weekday","value":"std::option::Option<Weekday>","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Day of the week.\n","sig":null,"attributes":[{"value":"/ Day of the week.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":545507,"byte_end":545527,"line_start":77,"line_end":77,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":2068},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":545637,"byte_end":545644,"line_start":81,"line_end":81,"column_start":9,"column_end":16},"name":"ordinal","qualname":"::format::parsed::Parsed::ordinal","value":"std::option::Option<u32>","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Day of the year (1--365 or 1--366 depending on the year).\n","sig":null,"attributes":[{"value":"/ Day of the year (1--365 or 1--366 depending on the year).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":545567,"byte_end":545628,"line_start":80,"line_end":80,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":2069},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":545748,"byte_end":545751,"line_start":84,"line_end":84,"column_start":9,"column_end":12},"name":"day","qualname":"::format::parsed::Parsed::day","value":"std::option::Option<u32>","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Day of the month (1--28, 1--29, 1--30 or 1--31 depending on the month).\n","sig":null,"attributes":[{"value":"/ Day of the month (1--28, 1--29, 1--30 or 1--31 depending on the month).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":545664,"byte_end":545739,"line_start":83,"line_end":83,"column_start":5,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":2070},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":545852,"byte_end":545863,"line_start":87,"line_end":87,"column_start":9,"column_end":20},"name":"hour_div_12","qualname":"::format::parsed::Parsed::hour_div_12","value":"std::option::Option<u32>","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Hour number divided by 12 (0--1). 0 indicates AM and 1 indicates PM.\n","sig":null,"attributes":[{"value":"/ Hour number divided by 12 (0--1). 0 indicates AM and 1 indicates PM.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":545771,"byte_end":545843,"line_start":86,"line_end":86,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":2071},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":545926,"byte_end":545937,"line_start":90,"line_end":90,"column_start":9,"column_end":20},"name":"hour_mod_12","qualname":"::format::parsed::Parsed::hour_mod_12","value":"std::option::Option<u32>","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Hour number modulo 12 (0--11).\n","sig":null,"attributes":[{"value":"/ Hour number modulo 12 (0--11).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":545883,"byte_end":545917,"line_start":89,"line_end":89,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":2072},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":545992,"byte_end":545998,"line_start":93,"line_end":93,"column_start":9,"column_end":15},"name":"minute","qualname":"::format::parsed::Parsed::minute","value":"std::option::Option<u32>","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Minute number (0--59).\n","sig":null,"attributes":[{"value":"/ Minute number (0--59).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":545957,"byte_end":545983,"line_start":92,"line_end":92,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":2073},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":546082,"byte_end":546088,"line_start":96,"line_end":96,"column_start":9,"column_end":15},"name":"second","qualname":"::format::parsed::Parsed::second","value":"std::option::Option<u32>","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Second number (0--60, accounting for leap seconds).\n","sig":null,"attributes":[{"value":"/ Second number (0--60, accounting for leap seconds).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":546018,"byte_end":546073,"line_start":95,"line_end":95,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":2074},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":546187,"byte_end":546197,"line_start":99,"line_end":99,"column_start":9,"column_end":19},"name":"nanosecond","qualname":"::format::parsed::Parsed::nanosecond","value":"std::option::Option<u32>","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" The number of nanoseconds since the whole second (0--999,999,999).\n","sig":null,"attributes":[{"value":"/ The number of nanoseconds since the whole second (0--999,999,999).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":546108,"byte_end":546178,"line_start":98,"line_end":98,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":2075},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":546400,"byte_end":546409,"line_start":104,"line_end":104,"column_start":9,"column_end":18},"name":"timestamp","qualname":"::format::parsed::Parsed::timestamp","value":"std::option::Option<i64>","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" The number of non-leap seconds since the midnight UTC on January 1, 1970.","sig":null,"attributes":[{"value":"/ The number of non-leap seconds since the midnight UTC on January 1, 1970.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":546217,"byte_end":546294,"line_start":101,"line_end":101,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":546299,"byte_end":546302,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This can be off by one if [`second`](#structfield.second) is 60 (a leap second).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":546307,"byte_end":546391,"line_start":103,"line_end":103,"column_start":5,"column_end":89}}]},{"kind":"Field","id":{"krate":0,"index":2076},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":546488,"byte_end":546494,"line_start":107,"line_end":107,"column_start":9,"column_end":15},"name":"offset","qualname":"::format::parsed::Parsed::offset","value":"std::option::Option<i32>","parent":{"krate":0,"index":2056},"children":[],"decl_id":null,"docs":" Offset from the local time to UTC, in seconds.\n","sig":null,"attributes":[{"value":"/ Offset from the local time to UTC, in seconds.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":546429,"byte_end":546479,"line_start":106,"line_end":106,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1218},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":547823,"byte_end":547826,"line_start":159,"line_end":159,"column_start":12,"column_end":15},"name":"new","qualname":"<Parsed>::new","value":"fn () -> Parsed","parent":null,"children":[],"decl_id":null,"docs":" Returns the initial value of parsed parts.\n","sig":null,"attributes":[{"value":"/ Returns the initial value of parsed parts.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":547765,"byte_end":547811,"line_start":158,"line_end":158,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":1219},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":547976,"byte_end":547984,"line_start":165,"line_end":165,"column_start":12,"column_end":20},"name":"set_year","qualname":"<Parsed>::set_year","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`year`](#structfield.year) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`year`](#structfield.year) field from given value.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":547878,"byte_end":547950,"line_start":163,"line_end":163,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":547955,"byte_end":547964,"line_start":164,"line_end":164,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1220},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":548233,"byte_end":548249,"line_start":171,"line_end":171,"column_start":12,"column_end":28},"name":"set_year_div_100","qualname":"<Parsed>::set_year_div_100","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`year_div_100`](#structfield.year_div_100) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`year_div_100`](#structfield.year_div_100) field from given value.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":548119,"byte_end":548207,"line_start":169,"line_end":169,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":548212,"byte_end":548221,"line_start":170,"line_end":170,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1221},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":548577,"byte_end":548593,"line_start":180,"line_end":180,"column_start":12,"column_end":28},"name":"set_year_mod_100","qualname":"<Parsed>::set_year_mod_100","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`year_mod_100`](#structfield.year_mod_100) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`year_mod_100`](#structfield.year_mod_100) field from given value.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":548463,"byte_end":548551,"line_start":178,"line_end":178,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":548556,"byte_end":548565,"line_start":179,"line_end":179,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1222},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":548911,"byte_end":548922,"line_start":189,"line_end":189,"column_start":12,"column_end":23},"name":"set_isoyear","qualname":"<Parsed>::set_isoyear","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`isoyear`](#structfield.isoyear) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`isoyear`](#structfield.isoyear) field from given value.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":548807,"byte_end":548885,"line_start":187,"line_end":187,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":548890,"byte_end":548899,"line_start":188,"line_end":188,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1223},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":549180,"byte_end":549199,"line_start":195,"line_end":195,"column_start":12,"column_end":31},"name":"set_isoyear_div_100","qualname":"<Parsed>::set_isoyear_div_100","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`isoyear_div_100`](#structfield.isoyear_div_100) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`isoyear_div_100`](#structfield.isoyear_div_100) field from given value.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":549060,"byte_end":549154,"line_start":193,"line_end":193,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":549159,"byte_end":549168,"line_start":194,"line_end":194,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1224},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":549536,"byte_end":549555,"line_start":204,"line_end":204,"column_start":12,"column_end":31},"name":"set_isoyear_mod_100","qualname":"<Parsed>::set_isoyear_mod_100","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`isoyear_mod_100`](#structfield.isoyear_mod_100) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`isoyear_mod_100`](#structfield.isoyear_mod_100) field from given value.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":549416,"byte_end":549510,"line_start":202,"line_end":202,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":549515,"byte_end":549524,"line_start":203,"line_end":203,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1225},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":549872,"byte_end":549881,"line_start":213,"line_end":213,"column_start":12,"column_end":21},"name":"set_month","qualname":"<Parsed>::set_month","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`month`](#structfield.month) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`month`](#structfield.month) field from given value.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":549772,"byte_end":549846,"line_start":211,"line_end":211,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":549851,"byte_end":549860,"line_start":212,"line_end":212,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1226},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":550133,"byte_end":550150,"line_start":219,"line_end":219,"column_start":12,"column_end":29},"name":"set_week_from_sun","qualname":"<Parsed>::set_week_from_sun","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`week_from_sun`](#structfield.week_from_sun) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`week_from_sun`](#structfield.week_from_sun) field from given value.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":550017,"byte_end":550107,"line_start":217,"line_end":217,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":550112,"byte_end":550121,"line_start":218,"line_end":218,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1227},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":550410,"byte_end":550427,"line_start":225,"line_end":225,"column_start":12,"column_end":29},"name":"set_week_from_mon","qualname":"<Parsed>::set_week_from_mon","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`week_from_mon`](#structfield.week_from_mon) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`week_from_mon`](#structfield.week_from_mon) field from given value.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":550294,"byte_end":550384,"line_start":223,"line_end":223,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":550389,"byte_end":550398,"line_start":224,"line_end":224,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1228},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":550675,"byte_end":550686,"line_start":231,"line_end":231,"column_start":12,"column_end":23},"name":"set_isoweek","qualname":"<Parsed>::set_isoweek","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`isoweek`](#structfield.isoweek) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`isoweek`](#structfield.isoweek) field from given value.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":550571,"byte_end":550649,"line_start":229,"line_end":229,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":550654,"byte_end":550663,"line_start":230,"line_end":230,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1229},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":550928,"byte_end":550939,"line_start":237,"line_end":237,"column_start":12,"column_end":23},"name":"set_weekday","qualname":"<Parsed>::set_weekday","value":"fn (&mut self, value: Weekday) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`weekday`](#structfield.weekday) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`weekday`](#structfield.weekday) field from given value.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":550824,"byte_end":550902,"line_start":235,"line_end":235,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":550907,"byte_end":550916,"line_start":236,"line_end":236,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1230},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":551155,"byte_end":551166,"line_start":243,"line_end":243,"column_start":12,"column_end":23},"name":"set_ordinal","qualname":"<Parsed>::set_ordinal","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`ordinal`](#structfield.ordinal) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`ordinal`](#structfield.ordinal) field from given value.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":551051,"byte_end":551129,"line_start":241,"line_end":241,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":551134,"byte_end":551143,"line_start":242,"line_end":242,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1231},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":551400,"byte_end":551407,"line_start":249,"line_end":249,"column_start":12,"column_end":19},"name":"set_day","qualname":"<Parsed>::set_day","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`day`](#structfield.day) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`day`](#structfield.day) field from given value.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":551304,"byte_end":551374,"line_start":247,"line_end":247,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":551379,"byte_end":551388,"line_start":248,"line_end":248,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1232},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":551693,"byte_end":551701,"line_start":256,"line_end":256,"column_start":12,"column_end":20},"name":"set_ampm","qualname":"<Parsed>::set_ampm","value":"fn (&mut self, value: bool) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`hour_div_12`](#structfield.hour_div_12) field from given value.\n (`false` for AM, `true` for PM)\n","sig":null,"attributes":[{"value":"/ Tries to set the [`hour_div_12`](#structfield.hour_div_12) field from given value.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":551541,"byte_end":551627,"line_start":253,"line_end":253,"column_start":5,"column_end":91}},{"value":"/ (`false` for AM, `true` for PM)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":551632,"byte_end":551667,"line_start":254,"line_end":254,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":551672,"byte_end":551681,"line_start":255,"line_end":255,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1233},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":551978,"byte_end":551988,"line_start":263,"line_end":263,"column_start":12,"column_end":22},"name":"set_hour12","qualname":"<Parsed>::set_hour12","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`hour_mod_12`](#structfield.hour_mod_12) field from\n given hour number in 12-hour clocks.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`hour_mod_12`](#structfield.hour_mod_12) field from","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":551834,"byte_end":551907,"line_start":260,"line_end":260,"column_start":5,"column_end":78}},{"value":"/ given hour number in 12-hour clocks.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":551912,"byte_end":551952,"line_start":261,"line_end":261,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":551957,"byte_end":551966,"line_start":262,"line_end":262,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1234},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":552365,"byte_end":552373,"line_start":273,"line_end":273,"column_start":12,"column_end":20},"name":"set_hour","qualname":"<Parsed>::set_hour","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set both [`hour_div_12`](#structfield.hour_div_12) and\n [`hour_mod_12`](#structfield.hour_mod_12) fields from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set both [`hour_div_12`](#structfield.hour_div_12) and","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":552197,"byte_end":552264,"line_start":270,"line_end":270,"column_start":5,"column_end":72}},{"value":"/ [`hour_mod_12`](#structfield.hour_mod_12) fields from given value.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":552269,"byte_end":552339,"line_start":271,"line_end":271,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":552344,"byte_end":552353,"line_start":272,"line_end":272,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1235},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":552717,"byte_end":552727,"line_start":282,"line_end":282,"column_start":12,"column_end":22},"name":"set_minute","qualname":"<Parsed>::set_minute","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`minute`](#structfield.minute) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`minute`](#structfield.minute) field from given value.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":552615,"byte_end":552691,"line_start":280,"line_end":280,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":552696,"byte_end":552705,"line_start":281,"line_end":281,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1236},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":552966,"byte_end":552976,"line_start":288,"line_end":288,"column_start":12,"column_end":22},"name":"set_second","qualname":"<Parsed>::set_second","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`second`](#structfield.second) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`second`](#structfield.second) field from given value.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":552864,"byte_end":552940,"line_start":286,"line_end":286,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":552945,"byte_end":552954,"line_start":287,"line_end":287,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1237},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":553223,"byte_end":553237,"line_start":294,"line_end":294,"column_start":12,"column_end":26},"name":"set_nanosecond","qualname":"<Parsed>::set_nanosecond","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`nanosecond`](#structfield.nanosecond) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`nanosecond`](#structfield.nanosecond) field from given value.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":553113,"byte_end":553197,"line_start":292,"line_end":292,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":553202,"byte_end":553211,"line_start":293,"line_end":293,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1238},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":553486,"byte_end":553499,"line_start":300,"line_end":300,"column_start":12,"column_end":25},"name":"set_timestamp","qualname":"<Parsed>::set_timestamp","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`timestamp`](#structfield.timestamp) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`timestamp`](#structfield.timestamp) field from given value.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":553378,"byte_end":553460,"line_start":298,"line_end":298,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":553465,"byte_end":553474,"line_start":299,"line_end":299,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1239},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":553711,"byte_end":553721,"line_start":306,"line_end":306,"column_start":12,"column_end":22},"name":"set_offset","qualname":"<Parsed>::set_offset","value":"fn (&mut self, value: i64) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to set the [`offset`](#structfield.offset) field from given value.\n","sig":null,"attributes":[{"value":"/ Tries to set the [`offset`](#structfield.offset) field from given value.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":553609,"byte_end":553685,"line_start":304,"line_end":304,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":553690,"byte_end":553699,"line_start":305,"line_end":305,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1240},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":554365,"byte_end":554378,"line_start":321,"line_end":321,"column_start":12,"column_end":25},"name":"to_naive_date","qualname":"<Parsed>::to_naive_date","value":"fn (&self) -> ParseResult<NaiveDate>","parent":null,"children":[],"decl_id":null,"docs":" Returns a parsed naive date out of given fields.","sig":null,"attributes":[{"value":"/ Returns a parsed naive date out of given fields.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":553858,"byte_end":553910,"line_start":310,"line_end":310,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":553915,"byte_end":553918,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ This method is able to determine the date from given subset of fields:","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":553923,"byte_end":553997,"line_start":312,"line_end":312,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":554002,"byte_end":554005,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ - Year, month, day.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":554010,"byte_end":554033,"line_start":314,"line_end":314,"column_start":5,"column_end":28}},{"value":"/ - Year, day of the year (ordinal).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":554038,"byte_end":554076,"line_start":315,"line_end":315,"column_start":5,"column_end":43}},{"value":"/ - Year, week number counted from Sunday or Monday, day of the week.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":554081,"byte_end":554152,"line_start":316,"line_end":316,"column_start":5,"column_end":76}},{"value":"/ - ISO week date.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":554157,"byte_end":554177,"line_start":317,"line_end":317,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":554182,"byte_end":554185,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ Gregorian year and ISO week date year can have their century number (`*_div_100`) omitted,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":554190,"byte_end":554284,"line_start":319,"line_end":319,"column_start":5,"column_end":99}},{"value":"/ the two-digit year is used to guess the century number then.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":554289,"byte_end":554353,"line_start":320,"line_end":320,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1248},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":563697,"byte_end":563710,"line_start":529,"line_end":529,"column_start":12,"column_end":25},"name":"to_naive_time","qualname":"<Parsed>::to_naive_time","value":"fn (&self) -> ParseResult<NaiveTime>","parent":null,"children":[],"decl_id":null,"docs":" Returns a parsed naive time out of given fields.","sig":null,"attributes":[{"value":"/ Returns a parsed naive time out of given fields.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":563294,"byte_end":563346,"line_start":520,"line_end":520,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":563351,"byte_end":563354,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ This method is able to determine the time from given subset of fields:","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":563359,"byte_end":563433,"line_start":522,"line_end":522,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":563438,"byte_end":563441,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ - Hour, minute. (second and nanosecond assumed to be 0)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":563446,"byte_end":563505,"line_start":524,"line_end":524,"column_start":5,"column_end":64}},{"value":"/ - Hour, minute, second. (nanosecond assumed to be 0)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":563510,"byte_end":563566,"line_start":525,"line_end":525,"column_start":5,"column_end":61}},{"value":"/ - Hour, minute, second, nanosecond.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":563571,"byte_end":563610,"line_start":526,"line_end":526,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":563615,"byte_end":563618,"line_start":527,"line_end":527,"column_start":5,"column_end":8}},{"value":"/ It is able to handle leap seconds when given second is 60.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":563623,"byte_end":563685,"line_start":528,"line_end":528,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1249},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":565493,"byte_end":565522,"line_start":571,"line_end":571,"column_start":12,"column_end":41},"name":"to_naive_datetime_with_offset","qualname":"<Parsed>::to_naive_datetime_with_offset","value":"fn (&self, offset: i32) -> ParseResult<NaiveDateTime>","parent":null,"children":[],"decl_id":null,"docs":" Returns a parsed naive date and time out of given fields,\n except for the [`offset`](#structfield.offset) field (assumed to have a given value).\n This is required for parsing a local time or other known-timezone inputs.","sig":null,"attributes":[{"value":"/ Returns a parsed naive date and time out of given fields,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":565008,"byte_end":565069,"line_start":564,"line_end":564,"column_start":5,"column_end":66}},{"value":"/ except for the [`offset`](#structfield.offset) field (assumed to have a given value).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":565074,"byte_end":565163,"line_start":565,"line_end":565,"column_start":5,"column_end":94}},{"value":"/ This is required for parsing a local time or other known-timezone inputs.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":565168,"byte_end":565245,"line_start":566,"line_end":566,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":565250,"byte_end":565253,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ This method is able to determine the combined date and time","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":565258,"byte_end":565321,"line_start":568,"line_end":568,"column_start":5,"column_end":68}},{"value":"/ from date and time fields or a single [`timestamp`](#structfield.timestamp) field.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":565326,"byte_end":565412,"line_start":569,"line_end":569,"column_start":5,"column_end":91}},{"value":"/ Either way those fields have to be consistent to each other.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":565417,"byte_end":565481,"line_start":570,"line_end":570,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1254},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":568940,"byte_end":568955,"line_start":644,"line_end":644,"column_start":12,"column_end":27},"name":"to_fixed_offset","qualname":"<Parsed>::to_fixed_offset","value":"fn (&self) -> ParseResult<FixedOffset>","parent":null,"children":[],"decl_id":null,"docs":" Returns a parsed fixed time zone offset out of given fields.\n","sig":null,"attributes":[{"value":"/ Returns a parsed fixed time zone offset out of given fields.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":568864,"byte_end":568928,"line_start":643,"line_end":643,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1255},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":569427,"byte_end":569438,"line_start":654,"line_end":654,"column_start":12,"column_end":23},"name":"to_datetime","qualname":"<Parsed>::to_datetime","value":"fn (&self) -> ParseResult<DateTime<FixedOffset>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a parsed timezone-aware date and time out of given fields.","sig":null,"attributes":[{"value":"/ Returns a parsed timezone-aware date and time out of given fields.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":569076,"byte_end":569146,"line_start":648,"line_end":648,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":569151,"byte_end":569154,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ This method is able to determine the combined date and time","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":569159,"byte_end":569222,"line_start":650,"line_end":650,"column_start":5,"column_end":68}},{"value":"/ from date and time fields or a single [`timestamp`](#structfield.timestamp) field,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":569227,"byte_end":569313,"line_start":651,"line_end":651,"column_start":5,"column_end":91}},{"value":"/ plus a time zone offset.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":569318,"byte_end":569346,"line_start":652,"line_end":652,"column_start":5,"column_end":33}},{"value":"/ Either way those fields have to be consistent to each other.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":569351,"byte_end":569415,"line_start":653,"line_end":653,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1256},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":570466,"byte_end":570491,"line_start":674,"line_end":674,"column_start":12,"column_end":37},"name":"to_datetime_with_timezone","qualname":"<Parsed>::to_datetime_with_timezone","value":"fn <Tz> (&self, tz: &Tz) -> ParseResult<DateTime<Tz>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a parsed timezone-aware date and time out of given fields,\n with an additional `TimeZone` used to interpret and validate the local date.","sig":null,"attributes":[{"value":"/ Returns a parsed timezone-aware date and time out of given fields,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":569909,"byte_end":569979,"line_start":665,"line_end":665,"column_start":5,"column_end":75}},{"value":"/ with an additional `TimeZone` used to interpret and validate the local date.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":569984,"byte_end":570064,"line_start":666,"line_end":666,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":570069,"byte_end":570072,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ This method is able to determine the combined date and time","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":570077,"byte_end":570140,"line_start":668,"line_end":668,"column_start":5,"column_end":68}},{"value":"/ from date and time fields or a single [`timestamp`](#structfield.timestamp) field,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":570145,"byte_end":570231,"line_start":669,"line_end":669,"column_start":5,"column_end":91}},{"value":"/ plus a time zone offset.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":570236,"byte_end":570264,"line_start":670,"line_end":670,"column_start":5,"column_end":33}},{"value":"/ Either way those fields have to be consistent to each other.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":570269,"byte_end":570333,"line_start":671,"line_end":671,"column_start":5,"column_end":69}},{"value":"/ If parsed fields include an UTC offset, it also has to be consistent to","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":570338,"byte_end":570413,"line_start":672,"line_end":672,"column_start":5,"column_end":80}},{"value":"/ [`offset`](#structfield.offset).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":570418,"byte_end":570454,"line_start":673,"line_end":673,"column_start":5,"column_end":41}}]},{"kind":"Function","id":{"krate":0,"index":1295},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parse.rs","byte_start":607633,"byte_end":607638,"line_start":234,"line_end":234,"column_start":8,"column_end":13},"name":"parse","qualname":"::format::parse::parse","value":"fn <'a, I, B> (parsed: &mut Parsed, s: &str, items: I) -> ParseResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Tries to parse given string into `parsed` with given formatting items.\n Returns `Ok` when the entire string has been parsed (otherwise `parsed` should not be used).\n There should be no trailing string after parsing;\n use a stray [`Item::Space`](./enum.Item.html#variant.Space) to trim whitespaces.","sig":null,"attributes":[{"value":"/ Tries to parse given string into `parsed` with given formatting items.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parse.rs","byte_start":606730,"byte_end":606804,"line_start":218,"line_end":218,"column_start":1,"column_end":75}},{"value":"/ Returns `Ok` when the entire string has been parsed (otherwise `parsed` should not be used).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parse.rs","byte_start":606805,"byte_end":606901,"line_start":219,"line_end":219,"column_start":1,"column_end":97}},{"value":"/ There should be no trailing string after parsing;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parse.rs","byte_start":606902,"byte_end":606955,"line_start":220,"line_end":220,"column_start":1,"column_end":54}},{"value":"/ use a stray [`Item::Space`](./enum.Item.html#variant.Space) to trim whitespaces.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parse.rs","byte_start":606956,"byte_end":607040,"line_start":221,"line_end":221,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parse.rs","byte_start":607041,"byte_end":607044,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ This particular date and time parser is:","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parse.rs","byte_start":607045,"byte_end":607089,"line_start":223,"line_end":223,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parse.rs","byte_start":607090,"byte_end":607093,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ - Greedy. It will consume the longest possible prefix.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parse.rs","byte_start":607094,"byte_end":607152,"line_start":225,"line_end":225,"column_start":1,"column_end":59}},{"value":"/   For example, `April` is always consumed entirely when the long month name is requested;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parse.rs","byte_start":607153,"byte_end":607246,"line_start":226,"line_end":226,"column_start":1,"column_end":94}},{"value":"/   it equally accepts `Apr`, but prefers the longer prefix in this case.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parse.rs","byte_start":607247,"byte_end":607322,"line_start":227,"line_end":227,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parse.rs","byte_start":607323,"byte_end":607326,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ - Padding-agnostic (for numeric items).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parse.rs","byte_start":607327,"byte_end":607370,"line_start":229,"line_end":229,"column_start":1,"column_end":44}},{"value":"/   The [`Pad`](./enum.Pad.html) field is completely ignored,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parse.rs","byte_start":607371,"byte_end":607434,"line_start":230,"line_end":230,"column_start":1,"column_end":64}},{"value":"/   so one can prepend any number of whitespace then any number of zeroes before numbers.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parse.rs","byte_start":607435,"byte_end":607526,"line_start":231,"line_end":231,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parse.rs","byte_start":607527,"byte_end":607530,"line_start":232,"line_end":232,"column_start":1,"column_end":4}},{"value":"/ - (Still) obeying the intrinsic parsing width. This allows, for example, parsing `HHMMSS`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parse.rs","byte_start":607531,"byte_end":607625,"line_start":233,"line_end":233,"column_start":1,"column_end":95}}]},{"kind":"Mod","id":{"krate":0,"index":1374},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/strftime.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"strftime","qualname":"::format::strftime","value":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/strftime.rs","parent":null,"children":[{"krate":0,"index":1375},{"krate":0,"index":1382},{"krate":0,"index":1384},{"krate":0,"index":1385},{"krate":0,"index":1386},{"krate":0,"index":2087},{"krate":0,"index":2097},{"krate":0,"index":2094},{"krate":0,"index":1387},{"krate":0,"index":1393},{"krate":0,"index":1394}],"decl_id":null,"docs":"`strftime`/`strptime`-inspired date and time formatting syntax.","sig":null,"attributes":[{"value":"!\n`strftime`/`strptime`-inspired date and time formatting syntax.\n\n## Specifiers\n\nThe following specifiers are available both to formatting and parsing.\n\n| Spec. | Example  | Description                                                                |\n|-------|----------|----------------------------------------------------------------------------|\n|       |          | **DATE SPECIFIERS:**                                                       |\n| `%Y`  | `2001`   | The full proleptic Gregorian year, zero-padded to 4 digits. [^1]           |\n| `%C`  | `20`     | The proleptic Gregorian year divided by 100, zero-padded to 2 digits. [^2] |\n| `%y`  | `01`     | The proleptic Gregorian year modulo 100, zero-padded to 2 digits. [^2]     |\n|       |          |                                                                            |\n| `%m`  | `07`     | Month number (01--12), zero-padded to 2 digits.                            |\n| `%b`  | `Jul`    | Abbreviated month name. Always 3 letters.                                  |\n| `%B`  | `July`   | Full month name. Also accepts corresponding abbreviation in parsing.       |\n| `%h`  | `Jul`    | Same as `%b`.                                                              |\n|       |          |                                                                            |\n| `%d`  | `08`     | Day number (01--31), zero-padded to 2 digits.                              |\n| `%e`  | ` 8`     | Same as `%d` but space-padded. Same as `%_d`.                              |\n|       |          |                                                                            |\n| `%a`  | `Sun`    | Abbreviated weekday name. Always 3 letters.                                |\n| `%A`  | `Sunday` | Full weekday name. Also accepts corresponding abbreviation in parsing.     |\n| `%w`  | `0`      | Sunday = 0, Monday = 1, ..., Saturday = 6.                                 |\n| `%u`  | `7`      | Monday = 1, Tuesday = 2, ..., Sunday = 7. (ISO 8601)                       |\n|       |          |                                                                            |\n| `%U`  | `28`     | Week number starting with Sunday (00--53), zero-padded to 2 digits. [^3]   |\n| `%W`  | `27`     | Same as `%U`, but week 1 starts with the first Monday in that year instead.|\n|       |          |                                                                            |\n| `%G`  | `2001`   | Same as `%Y` but uses the year number in ISO 8601 week date. [^4]          |\n| `%g`  | `01`     | Same as `%y` but uses the year number in ISO 8601 week date. [^4]          |\n| `%V`  | `27`     | Same as `%U` but uses the week number in ISO 8601 week date (01--53). [^4] |\n|       |          |                                                                            |\n| `%j`  | `189`    | Day of the year (001--366), zero-padded to 3 digits.                       |\n|       |          |                                                                            |\n| `%D`  | `07/08/01`    | Month-day-year format. Same as `%m/%d/%y`.                            |\n| `%x`  | `07/08/01`    | Locale's date representation (e.g., 12/31/99).                        |\n| `%F`  | `2001-07-08`  | Year-month-day format (ISO 8601). Same as `%Y-%m-%d`.                 |\n| `%v`  | ` 8-Jul-2001` | Day-month-year format. Same as `%e-%b-%Y`.                            |\n|       |          |                                                                            |\n|       |          | **TIME SPECIFIERS:**                                                       |\n| `%H`  | `00`     | Hour number (00--23), zero-padded to 2 digits.                             |\n| `%k`  | ` 0`     | Same as `%H` but space-padded. Same as `%_H`.                              |\n| `%I`  | `12`     | Hour number in 12-hour clocks (01--12), zero-padded to 2 digits.           |\n| `%l`  | `12`     | Same as `%I` but space-padded. Same as `%_I`.                              |\n|       |          |                                                                            |\n| `%P`  | `am`     | `am` or `pm` in 12-hour clocks.                                            |\n| `%p`  | `AM`     | `AM` or `PM` in 12-hour clocks.                                            |\n|       |          |                                                                            |\n| `%M`  | `34`     | Minute number (00--59), zero-padded to 2 digits.                           |\n| `%S`  | `60`     | Second number (00--60), zero-padded to 2 digits. [^5]                      |\n| `%f`  | `026490000`   | The fractional seconds (in nanoseconds) since last whole second. [^8] |\n| `%.f` | `.026490`| Similar to `.%f` but left-aligned. These all consume the leading dot. [^8] |\n| `%.3f`| `.026`        | Similar to `.%f` but left-aligned but fixed to a length of 3. [^8]    |\n| `%.6f`| `.026490`     | Similar to `.%f` but left-aligned but fixed to a length of 6. [^8]    |\n| `%.9f`| `.026490000`  | Similar to `.%f` but left-aligned but fixed to a length of 9. [^8]    |\n| `%3f` | `026`         | Similar to `%.3f` but without the leading dot. [^8]                   |\n| `%6f` | `026490`      | Similar to `%.6f` but without the leading dot. [^8]                   |\n| `%9f` | `026490000`   | Similar to `%.9f` but without the leading dot. [^8]                   |\n|       |               |                                                                       |\n| `%R`  | `00:34`       | Hour-minute format. Same as `%H:%M`.                                  |\n| `%T`  | `00:34:60`    | Hour-minute-second format. Same as `%H:%M:%S`.                        |\n| `%X`  | `00:34:60`    | Locale's time representation (e.g., 23:13:48).                        |\n| `%r`  | `12:34:60 AM` | Hour-minute-second format in 12-hour clocks. Same as `%I:%M:%S %p`.   |\n|       |          |                                                                            |\n|       |          | **TIME ZONE SPECIFIERS:**                                                  |\n| `%Z`  | `ACST`   | Local time zone name. Skips all non-whitespace characters during parsing. [^9] |\n| `%z`  | `+0930`  | Offset from the local time to UTC (with UTC being `+0000`).                |\n| `%:z` | `+09:30` | Same as `%z` but with a colon.                                             |\n| `%#z` | `+09`    | *Parsing only:* Same as `%z` but allows minutes to be missing or present.  |\n|       |          |                                                                            |\n|       |          | **DATE & TIME SPECIFIERS:**                                                |\n|`%c`|`Sun Jul  8 00:34:60 2001`|Locale's date and time (e.g., Thu Mar  3 23:05:25 2005).       |\n| `%+`  | `2001-07-08T00:34:60.026490+09:30` | ISO 8601 / RFC 3339 date & time format. [^6]     |\n|       |               |                                                                       |\n| `%s`  | `994518299`   | UNIX timestamp, the number of seconds since 1970-01-01 00:00 UTC. [^7]|\n|       |          |                                                                            |\n|       |          | **SPECIAL SPECIFIERS:**                                                    |\n| `%t`  |          | Literal tab (`\\t`).                                                        |\n| `%n`  |          | Literal newline (`\\n`).                                                    |\n| `%%`  |          | Literal percent sign.                                                      |\n\nIt is possible to override the default padding behavior of numeric specifiers `%?`.\nThis is not allowed for other specifiers and will result in the `BAD_FORMAT` error.\n\nModifier | Description\n-------- | -----------\n`%-?`    | Suppresses any padding including spaces and zeroes. (e.g. `%j` = `012`, `%-j` = `12`)\n`%_?`    | Uses spaces as a padding. (e.g. `%j` = `012`, `%_j` = ` 12`)\n`%0?`    | Uses zeroes as a padding. (e.g. `%e` = ` 9`, `%0e` = `09`)\n\nNotes:\n\n[^1]: `%Y`:\n   Negative years are allowed in formatting but not in parsing.\n\n[^2]: `%C`, `%y`:\n   This is floor division, so 100 BCE (year number -99) will print `-1` and `99` respectively.\n\n[^3]: `%U`:\n   Week 1 starts with the first Sunday in that year.\n   It is possible to have week 0 for days before the first Sunday.\n\n[^4]: `%G`, `%g`, `%V`:\n   Week 1 is the first week with at least 4 days in that year.\n   Week 0 does not exist, so this should be used with `%G` or `%g`.\n\n[^5]: `%S`:\n   It accounts for leap seconds, so `60` is possible.\n\n[^6]: `%+`: Same as `%Y-%m-%dT%H:%M:%S%.f%:z`, i.e. 0, 3, 6 or 9 fractional\n   digits for seconds and colons in the time zone offset.\n   <br>\n   <br>\n   The typical `strftime` implementations have different (and locale-dependent)\n   formats for this specifier. While Chrono's format for `%+` is far more\n   stable, it is best to avoid this specifier if you want to control the exact\n   output.\n\n[^7]: `%s`:\n   This is not padded and can be negative.\n   For the purpose of Chrono, it only accounts for non-leap seconds\n   so it slightly differs from ISO C `strftime` behavior.\n\n[^8]: `%f`, `%.f`, `%.3f`, `%.6f`, `%.9f`, `%3f`, `%6f`, `%9f`:\n   <br>\n   The default `%f` is right-aligned and always zero-padded to 9 digits\n   for the compatibility with glibc and others,\n   so it always counts the number of nanoseconds since the last whole second.\n   E.g. 7ms after the last second will print `007000000`,\n   and parsing `7000000` will yield the same.\n   <br>\n   <br>\n   The variant `%.f` is left-aligned and print 0, 3, 6 or 9 fractional digits\n   according to the precision.\n   E.g. 70ms after the last second under `%.f` will print `.070` (note: not `.07`),\n   and parsing `.07`, `.070000` etc. will yield the same.\n   Note that they can print or read nothing if the fractional part is zero or\n   the next character is not `.`.\n   <br>\n   <br>\n   The variant `%.3f`, `%.6f` and `%.9f` are left-aligned and print 3, 6 or 9 fractional digits\n   according to the number preceding `f`.\n   E.g. 70ms after the last second under `%.3f` will print `.070` (note: not `.07`),\n   and parsing `.07`, `.070000` etc. will yield the same.\n   Note that they can read nothing if the fractional part is zero or\n   the next character is not `.` however will print with the specified length.\n   <br>\n   <br>\n   The variant `%3f`, `%6f` and `%9f` are left-aligned and print 3, 6 or 9 fractional digits\n   according to the number preceding `f`, but without the leading dot.\n   E.g. 70ms after the last second under `%3f` will print `070` (note: not `07`),\n   and parsing `07`, `070000` etc. will yield the same.\n   Note that they can read nothing if the fractional part is zero.\n\n[^9]: `%Z`:\n   Offset will not be populated from the parsed data, nor will it be validated.\n   Timezone is completely ignored. Similar to the glibc `strptime` treatment of\n   this format code.\n   <br>\n   <br>\n   It is not possible to reliably convert from an abbreviation to an offset,\n   for example CDT can mean either Central Daylight Time (North America) or\n   China Daylight Time.\n*/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/strftime.rs","byte_start":652473,"byte_end":663543,"line_start":4,"line_end":169,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":2087},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/strftime.rs","byte_start":664435,"byte_end":664448,"line_start":202,"line_end":202,"column_start":12,"column_end":25},"name":"StrftimeItems","qualname":"::format::strftime::StrftimeItems","value":"StrftimeItems {  }","parent":null,"children":[{"krate":0,"index":2089},{"krate":0,"index":2090},{"krate":0,"index":2091},{"krate":0,"index":2092},{"krate":0,"index":2093}],"decl_id":null,"docs":" Parsing iterator for `strftime`-like format strings.\n","sig":null,"attributes":[{"value":"/ Parsing iterator for `strftime`-like format strings.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/strftime.rs","byte_start":664343,"byte_end":664399,"line_start":200,"line_end":200,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1389},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/strftime.rs","byte_start":665038,"byte_end":665041,"line_start":219,"line_end":219,"column_start":12,"column_end":15},"name":"new","qualname":"<StrftimeItems>::new","value":"fn (s: &'a str) -> StrftimeItems<'a>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new parsing iterator from the `strftime`-like format string.\n","sig":null,"attributes":[{"value":"/ Creates a new parsing iterator from the `strftime`-like format string.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/strftime.rs","byte_start":664952,"byte_end":665026,"line_start":218,"line_end":218,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":2106},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":535886,"byte_end":535899,"line_start":719,"line_end":719,"column_start":12,"column_end":25},"name":"DelayedFormat","qualname":"::format::DelayedFormat","value":"DelayedFormat {  }","parent":null,"children":[{"krate":0,"index":2108},{"krate":0,"index":2109},{"krate":0,"index":2110},{"krate":0,"index":2111},{"krate":0,"index":2112}],"decl_id":null,"docs":" A *temporary* object which can be used as an argument to `format!` or others.\n This is normally constructed via `format` methods of each date and time type.\n","sig":null,"attributes":[{"value":"/ A *temporary* object which can be used as an argument to `format!` or others.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":535640,"byte_end":535721,"line_start":715,"line_end":715,"column_start":1,"column_end":82}},{"value":"/ This is normally constructed via `format` methods of each date and time type.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":535722,"byte_end":535803,"line_start":716,"line_end":716,"column_start":1,"column_end":82}},{"value":"cfg(any(feature = \"alloc\", feature = \"std\", test))","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":535804,"byte_end":535857,"line_start":717,"line_end":717,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1409},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":536483,"byte_end":536486,"line_start":735,"line_end":735,"column_start":12,"column_end":15},"name":"new","qualname":"<DelayedFormat<I>>::new","value":"fn (date: Option<NaiveDate>, time: Option<NaiveTime>, items: I) -> DelayedFormat<I>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DelayedFormat` value out of local date and time.\n","sig":null,"attributes":[{"value":"/ Makes a new `DelayedFormat` value out of local date and time.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":536406,"byte_end":536471,"line_start":734,"line_end":734,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1410},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":536760,"byte_end":536775,"line_start":740,"line_end":740,"column_start":12,"column_end":27},"name":"new_with_offset","qualname":"<DelayedFormat<I>>::new_with_offset","value":"fn <Off> (date: Option<NaiveDate>, time: Option<NaiveTime>, offset: &Off, items: I) -> DelayedFormat<I>","parent":null,"children":[],"decl_id":null,"docs":" Makes a new `DelayedFormat` value out of local date and time and UTC offset.\n","sig":null,"attributes":[{"value":"/ Makes a new `DelayedFormat` value out of local date and time and UTC offset.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":536668,"byte_end":536748,"line_start":739,"line_end":739,"column_start":5,"column_end":85}}]},{"kind":"Trait","id":{"krate":0,"index":1435},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":683935,"byte_end":683946,"line_start":21,"line_end":21,"column_start":11,"column_end":22},"name":"SubsecRound","qualname":"::round::SubsecRound","value":"SubsecRound","parent":null,"children":[{"krate":0,"index":1436},{"krate":0,"index":1437}],"decl_id":null,"docs":" Extension trait for subsecond rounding or truncation to a maximum number\n of digits. Rounding can be used to decrease the error variance when\n serializing/persisting to lower precision. Truncation is the default\n behavior in Chrono display formatting.  Either can be used to guarantee\n equality (e.g. for testing) when round-tripping through a lower precision\n format.\n","sig":null,"attributes":[{"value":"/ Extension trait for subsecond rounding or truncation to a maximum number","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":683537,"byte_end":683613,"line_start":15,"line_end":15,"column_start":1,"column_end":77}},{"value":"/ of digits. Rounding can be used to decrease the error variance when","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":683614,"byte_end":683685,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/ serializing/persisting to lower precision. Truncation is the default","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":683686,"byte_end":683758,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ behavior in Chrono display formatting.  Either can be used to guarantee","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":683759,"byte_end":683834,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/ equality (e.g. for testing) when round-tripping through a lower precision","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":683835,"byte_end":683912,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ format.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":683913,"byte_end":683924,"line_start":20,"line_end":20,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1436},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":684476,"byte_end":684489,"line_start":33,"line_end":33,"column_start":8,"column_end":21},"name":"round_subsecs","qualname":"::round::SubsecRound::round_subsecs","value":"fn (self, digits: u16) -> Self","parent":{"krate":0,"index":1435},"children":[],"decl_id":null,"docs":" Return a copy rounded to the specified number of subsecond digits. With\n 9 or more digits, self is returned unmodified. Halfway values are\n rounded up (away from zero).","sig":null,"attributes":[{"value":"/ Return a copy rounded to the specified number of subsecond digits. With","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":683953,"byte_end":684028,"line_start":22,"line_end":22,"column_start":5,"column_end":80}},{"value":"/ 9 or more digits, self is returned unmodified. Halfway values are","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":684033,"byte_end":684102,"line_start":23,"line_end":23,"column_start":5,"column_end":74}},{"value":"/ rounded up (away from zero).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":684107,"byte_end":684139,"line_start":24,"line_end":24,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":684144,"byte_end":684147,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":684152,"byte_end":684165,"line_start":26,"line_end":26,"column_start":5,"column_end":18}},{"value":"/ ``` rust","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":684170,"byte_end":684182,"line_start":27,"line_end":27,"column_start":5,"column_end":17}},{"value":"/ # use chrono::{DateTime, SubsecRound, Timelike, TimeZone, Utc};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":684187,"byte_end":684254,"line_start":28,"line_end":28,"column_start":5,"column_end":72}},{"value":"/ let dt = Utc.ymd(2018, 1, 11).and_hms_milli(12, 0, 0, 154);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":684259,"byte_end":684322,"line_start":29,"line_end":29,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(dt.round_subsecs(2).nanosecond(), 150_000_000);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":684327,"byte_end":684389,"line_start":30,"line_end":30,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(dt.round_subsecs(1).nanosecond(), 200_000_000);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":684394,"byte_end":684456,"line_start":31,"line_end":31,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":684461,"byte_end":684468,"line_start":32,"line_end":32,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1437},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":684992,"byte_end":685005,"line_start":45,"line_end":45,"column_start":8,"column_end":21},"name":"trunc_subsecs","qualname":"::round::SubsecRound::trunc_subsecs","value":"fn (self, digits: u16) -> Self","parent":{"krate":0,"index":1435},"children":[],"decl_id":null,"docs":" Return a copy truncated to the specified number of subsecond\n digits. With 9 or more digits, self is returned unmodified.","sig":null,"attributes":[{"value":"/ Return a copy truncated to the specified number of subsecond","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":684523,"byte_end":684587,"line_start":35,"line_end":35,"column_start":5,"column_end":69}},{"value":"/ digits. With 9 or more digits, self is returned unmodified.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":684592,"byte_end":684655,"line_start":36,"line_end":36,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":684660,"byte_end":684663,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":684668,"byte_end":684681,"line_start":38,"line_end":38,"column_start":5,"column_end":18}},{"value":"/ ``` rust","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":684686,"byte_end":684698,"line_start":39,"line_end":39,"column_start":5,"column_end":17}},{"value":"/ # use chrono::{DateTime, SubsecRound, Timelike, TimeZone, Utc};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":684703,"byte_end":684770,"line_start":40,"line_end":40,"column_start":5,"column_end":72}},{"value":"/ let dt = Utc.ymd(2018, 1, 11).and_hms_milli(12, 0, 0, 154);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":684775,"byte_end":684838,"line_start":41,"line_end":41,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(dt.trunc_subsecs(2).nanosecond(), 150_000_000);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":684843,"byte_end":684905,"line_start":42,"line_end":42,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(dt.trunc_subsecs(1).nanosecond(), 100_000_000);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":684910,"byte_end":684972,"line_start":43,"line_end":43,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":684977,"byte_end":684984,"line_start":44,"line_end":44,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":1443},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":686744,"byte_end":686757,"line_start":102,"line_end":102,"column_start":11,"column_end":24},"name":"DurationRound","qualname":"::round::DurationRound","value":"DurationRound: Sized","parent":null,"children":[{"krate":0,"index":1444},{"krate":0,"index":1445},{"krate":0,"index":1446}],"decl_id":null,"docs":" Extension trait for rounding or truncating a DateTime by a Duration.","sig":null,"attributes":[{"value":"/ Extension trait for rounding or truncating a DateTime by a Duration.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":686331,"byte_end":686403,"line_start":95,"line_end":95,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":686404,"byte_end":686407,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ # Limitations","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":686408,"byte_end":686425,"line_start":97,"line_end":97,"column_start":1,"column_end":18}},{"value":"/ Both rounding and truncating are done via [`Duration::num_nanoseconds`] and","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":686426,"byte_end":686505,"line_start":98,"line_end":98,"column_start":1,"column_end":80}},{"value":"/ [`DateTime::timestamp_nanos`]. This means that they will fail if either the","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":686506,"byte_end":686585,"line_start":99,"line_end":99,"column_start":1,"column_end":80}},{"value":"/ `Duration` or the `DateTime` are too big to represented as nanoseconds. They","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":686586,"byte_end":686666,"line_start":100,"line_end":100,"column_start":1,"column_end":81}},{"value":"/ will also fail if the `Duration` is bigger than the timestamp.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":686667,"byte_end":686733,"line_start":101,"line_end":101,"column_start":1,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":1444},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":686870,"byte_end":686873,"line_start":105,"line_end":105,"column_start":10,"column_end":13},"name":"Err","qualname":"::round::DurationRound::Err","value":"type Err: std::error::Error;","parent":{"krate":0,"index":1443},"children":[],"decl_id":null,"docs":" Error that can occur in rounding or truncating\n","sig":null,"attributes":[{"value":"/ Error that can occur in rounding or truncating","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":686771,"byte_end":686821,"line_start":103,"line_end":103,"column_start":5,"column_end":55}},{"value":"cfg(any(feature = \"std\", test))","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":686826,"byte_end":686860,"line_start":104,"line_end":104,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1445},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":687576,"byte_end":687590,"line_start":126,"line_end":126,"column_start":8,"column_end":22},"name":"duration_round","qualname":"::round::DurationRound::duration_round","value":"fn (self, duration: Duration) -> Result<Self, Self::Err>","parent":{"krate":0,"index":1443},"children":[],"decl_id":null,"docs":" Return a copy rounded by Duration.","sig":null,"attributes":[{"value":"/ Return a copy rounded by Duration.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":687040,"byte_end":687078,"line_start":111,"line_end":111,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":687083,"byte_end":687086,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":687091,"byte_end":687104,"line_start":113,"line_end":113,"column_start":5,"column_end":18}},{"value":"/ ``` rust","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":687109,"byte_end":687121,"line_start":114,"line_end":114,"column_start":5,"column_end":17}},{"value":"/ # use chrono::{DateTime, DurationRound, Duration, TimeZone, Utc};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":687126,"byte_end":687195,"line_start":115,"line_end":115,"column_start":5,"column_end":74}},{"value":"/ let dt = Utc.ymd(2018, 1, 11).and_hms_milli(12, 0, 0, 154);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":687200,"byte_end":687263,"line_start":116,"line_end":116,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":687268,"byte_end":687283,"line_start":117,"line_end":117,"column_start":5,"column_end":20}},{"value":"/     dt.duration_round(Duration::milliseconds(10)).unwrap().to_string(),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":687288,"byte_end":687363,"line_start":118,"line_end":118,"column_start":5,"column_end":80}},{"value":"/     \"2018-01-11 12:00:00.150 UTC\"","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":687368,"byte_end":687405,"line_start":119,"line_end":119,"column_start":5,"column_end":42}},{"value":"/ );","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":687410,"byte_end":687416,"line_start":120,"line_end":120,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":687421,"byte_end":687436,"line_start":121,"line_end":121,"column_start":5,"column_end":20}},{"value":"/     dt.duration_round(Duration::days(1)).unwrap().to_string(),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":687441,"byte_end":687507,"line_start":122,"line_end":122,"column_start":5,"column_end":71}},{"value":"/     \"2018-01-12 00:00:00 UTC\"","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":687512,"byte_end":687545,"line_start":123,"line_end":123,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":687550,"byte_end":687556,"line_start":124,"line_end":124,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":687561,"byte_end":687568,"line_start":125,"line_end":125,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1446},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":688188,"byte_end":688202,"line_start":143,"line_end":143,"column_start":8,"column_end":22},"name":"duration_trunc","qualname":"::round::DurationRound::duration_trunc","value":"fn (self, duration: Duration) -> Result<Self, Self::Err>","parent":{"krate":0,"index":1443},"children":[],"decl_id":null,"docs":" Return a copy truncated by Duration.","sig":null,"attributes":[{"value":"/ Return a copy truncated by Duration.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":687650,"byte_end":687690,"line_start":128,"line_end":128,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":687695,"byte_end":687698,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":687703,"byte_end":687716,"line_start":130,"line_end":130,"column_start":5,"column_end":18}},{"value":"/ ``` rust","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":687721,"byte_end":687733,"line_start":131,"line_end":131,"column_start":5,"column_end":17}},{"value":"/ # use chrono::{DateTime, DurationRound, Duration, TimeZone, Utc};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":687738,"byte_end":687807,"line_start":132,"line_end":132,"column_start":5,"column_end":74}},{"value":"/ let dt = Utc.ymd(2018, 1, 11).and_hms_milli(12, 0, 0, 154);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":687812,"byte_end":687875,"line_start":133,"line_end":133,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":687880,"byte_end":687895,"line_start":134,"line_end":134,"column_start":5,"column_end":20}},{"value":"/     dt.duration_trunc(Duration::milliseconds(10)).unwrap().to_string(),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":687900,"byte_end":687975,"line_start":135,"line_end":135,"column_start":5,"column_end":80}},{"value":"/     \"2018-01-11 12:00:00.150 UTC\"","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":687980,"byte_end":688017,"line_start":136,"line_end":136,"column_start":5,"column_end":42}},{"value":"/ );","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":688022,"byte_end":688028,"line_start":137,"line_end":137,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":688033,"byte_end":688048,"line_start":138,"line_end":138,"column_start":5,"column_end":20}},{"value":"/     dt.duration_trunc(Duration::days(1)).unwrap().to_string(),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":688053,"byte_end":688119,"line_start":139,"line_end":139,"column_start":5,"column_end":71}},{"value":"/     \"2018-01-11 00:00:00 UTC\"","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":688124,"byte_end":688157,"line_start":140,"line_end":140,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":688162,"byte_end":688168,"line_start":141,"line_end":141,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":688173,"byte_end":688180,"line_start":142,"line_end":142,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2117},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":691029,"byte_end":691053,"line_start":218,"line_end":218,"column_start":5,"column_end":29},"name":"DurationExceedsTimestamp","qualname":"::round::RoundingError::DurationExceedsTimestamp","value":"RoundingError::DurationExceedsTimestamp","parent":{"krate":0,"index":2116},"children":[],"decl_id":null,"docs":" Error when the Duration exceeds the Duration from or until the Unix epoch.","sig":null,"attributes":[{"value":"/ Error when the Duration exceeds the Duration from or until the Unix epoch.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":690614,"byte_end":690692,"line_start":207,"line_end":207,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":690697,"byte_end":690700,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ ``` rust","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":690705,"byte_end":690717,"line_start":209,"line_end":209,"column_start":5,"column_end":17}},{"value":"/ # use chrono::{DateTime, DurationRound, Duration, RoundingError, TimeZone, Utc};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":690722,"byte_end":690806,"line_start":210,"line_end":210,"column_start":5,"column_end":89}},{"value":"/ let dt = Utc.ymd(1970, 12, 12).and_hms(0, 0, 0);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":690811,"byte_end":690863,"line_start":211,"line_end":211,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":690868,"byte_end":690871,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":690876,"byte_end":690891,"line_start":213,"line_end":213,"column_start":5,"column_end":20}},{"value":"/     dt.duration_round(Duration::days(365)),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":690896,"byte_end":690943,"line_start":214,"line_end":214,"column_start":5,"column_end":52}},{"value":"/     Err(RoundingError::DurationExceedsTimestamp),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":690948,"byte_end":691001,"line_start":215,"line_end":215,"column_start":5,"column_end":58}},{"value":"/ );","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":691006,"byte_end":691012,"line_start":216,"line_end":216,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":691017,"byte_end":691024,"line_start":217,"line_end":217,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2119},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":691480,"byte_end":691500,"line_start":231,"line_end":231,"column_start":5,"column_end":25},"name":"DurationExceedsLimit","qualname":"::round::RoundingError::DurationExceedsLimit","value":"RoundingError::DurationExceedsLimit","parent":{"krate":0,"index":2116},"children":[],"decl_id":null,"docs":" Error when `Duration.num_nanoseconds` exceeds the limit.","sig":null,"attributes":[{"value":"/ Error when `Duration.num_nanoseconds` exceeds the limit.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":691060,"byte_end":691120,"line_start":220,"line_end":220,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":691125,"byte_end":691128,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ ``` rust","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":691133,"byte_end":691145,"line_start":222,"line_end":222,"column_start":5,"column_end":17}},{"value":"/ # use chrono::{DateTime, DurationRound, Duration, RoundingError, TimeZone, Utc};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":691150,"byte_end":691234,"line_start":223,"line_end":223,"column_start":5,"column_end":89}},{"value":"/ let dt = Utc.ymd(2260, 12, 31).and_hms_nano(23, 59, 59, 1_75_500_000);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":691239,"byte_end":691313,"line_start":224,"line_end":224,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":691318,"byte_end":691321,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":691326,"byte_end":691341,"line_start":226,"line_end":226,"column_start":5,"column_end":20}},{"value":"/     dt.duration_round(Duration::days(300 * 365)),","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":691346,"byte_end":691399,"line_start":227,"line_end":227,"column_start":5,"column_end":58}},{"value":"/     Err(RoundingError::DurationExceedsLimit)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":691404,"byte_end":691452,"line_start":228,"line_end":228,"column_start":5,"column_end":53}},{"value":"/ );","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":691457,"byte_end":691463,"line_start":229,"line_end":229,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":691468,"byte_end":691475,"line_start":230,"line_end":230,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2121},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":691865,"byte_end":691886,"line_start":241,"line_end":241,"column_start":5,"column_end":26},"name":"TimestampExceedsLimit","qualname":"::round::RoundingError::TimestampExceedsLimit","value":"RoundingError::TimestampExceedsLimit","parent":{"krate":0,"index":2116},"children":[],"decl_id":null,"docs":" Error when `DateTime.timestamp_nanos` exceeds the limit.","sig":null,"attributes":[{"value":"/ Error when `DateTime.timestamp_nanos` exceeds the limit.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":691507,"byte_end":691567,"line_start":233,"line_end":233,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":691572,"byte_end":691575,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ ``` rust","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":691580,"byte_end":691592,"line_start":235,"line_end":235,"column_start":5,"column_end":17}},{"value":"/ # use chrono::{DateTime, DurationRound, Duration, RoundingError, TimeZone, Utc};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":691597,"byte_end":691681,"line_start":236,"line_end":236,"column_start":5,"column_end":89}},{"value":"/ let dt = Utc.ymd(2300, 12, 12).and_hms(0, 0, 0);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":691686,"byte_end":691738,"line_start":237,"line_end":237,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":691743,"byte_end":691746,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(dt.duration_round(Duration::days(1)), Err(RoundingError::TimestampExceedsLimit),);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":691751,"byte_end":691848,"line_start":239,"line_end":239,"column_start":5,"column_end":102}},{"value":"/ ```","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":691853,"byte_end":691860,"line_start":240,"line_end":240,"column_start":5,"column_end":12}}]},{"kind":"Enum","id":{"krate":0,"index":2116},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":690594,"byte_end":690607,"line_start":206,"line_end":206,"column_start":10,"column_end":23},"name":"RoundingError","qualname":"::round::RoundingError","value":"RoundingError::{DurationExceedsTimestamp, DurationExceedsLimit, TimestampExceedsLimit}","parent":null,"children":[{"krate":0,"index":2117},{"krate":0,"index":2119},{"krate":0,"index":2121}],"decl_id":null,"docs":" An error from rounding by `Duration`","sig":null,"attributes":[{"value":"/ An error from rounding by `Duration`","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":690468,"byte_end":690508,"line_start":202,"line_end":202,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":690509,"byte_end":690512,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ See: [`DurationRound`]","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":690513,"byte_end":690539,"line_start":204,"line_end":204,"column_start":1,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2135},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":27205,"byte_end":27208,"line_start":648,"line_end":648,"column_start":5,"column_end":8},"name":"Mon","qualname":"::Weekday::Mon","value":"Weekday::Mon","parent":{"krate":0,"index":2134},"children":[],"decl_id":null,"docs":" Monday.\n","sig":null,"attributes":[{"value":"/ Monday.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":27189,"byte_end":27200,"line_start":647,"line_end":647,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2138},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":27235,"byte_end":27238,"line_start":650,"line_end":650,"column_start":5,"column_end":8},"name":"Tue","qualname":"::Weekday::Tue","value":"Weekday::Tue","parent":{"krate":0,"index":2134},"children":[],"decl_id":null,"docs":" Tuesday.\n","sig":null,"attributes":[{"value":"/ Tuesday.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":27218,"byte_end":27230,"line_start":649,"line_end":649,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2141},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":27267,"byte_end":27270,"line_start":652,"line_end":652,"column_start":5,"column_end":8},"name":"Wed","qualname":"::Weekday::Wed","value":"Weekday::Wed","parent":{"krate":0,"index":2134},"children":[],"decl_id":null,"docs":" Wednesday.\n","sig":null,"attributes":[{"value":"/ Wednesday.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":27248,"byte_end":27262,"line_start":651,"line_end":651,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2144},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":27298,"byte_end":27301,"line_start":654,"line_end":654,"column_start":5,"column_end":8},"name":"Thu","qualname":"::Weekday::Thu","value":"Weekday::Thu","parent":{"krate":0,"index":2134},"children":[],"decl_id":null,"docs":" Thursday.\n","sig":null,"attributes":[{"value":"/ Thursday.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":27280,"byte_end":27293,"line_start":653,"line_end":653,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2147},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":27327,"byte_end":27330,"line_start":656,"line_end":656,"column_start":5,"column_end":8},"name":"Fri","qualname":"::Weekday::Fri","value":"Weekday::Fri","parent":{"krate":0,"index":2134},"children":[],"decl_id":null,"docs":" Friday.\n","sig":null,"attributes":[{"value":"/ Friday.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":27311,"byte_end":27322,"line_start":655,"line_end":655,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2150},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":27358,"byte_end":27361,"line_start":658,"line_end":658,"column_start":5,"column_end":8},"name":"Sat","qualname":"::Weekday::Sat","value":"Weekday::Sat","parent":{"krate":0,"index":2134},"children":[],"decl_id":null,"docs":" Saturday.\n","sig":null,"attributes":[{"value":"/ Saturday.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":27340,"byte_end":27353,"line_start":657,"line_end":657,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2153},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":27387,"byte_end":27390,"line_start":660,"line_end":660,"column_start":5,"column_end":8},"name":"Sun","qualname":"::Weekday::Sun","value":"Weekday::Sun","parent":{"krate":0,"index":2134},"children":[],"decl_id":null,"docs":" Sunday.\n","sig":null,"attributes":[{"value":"/ Sunday.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":27371,"byte_end":27382,"line_start":659,"line_end":659,"column_start":5,"column_end":16}}]},{"kind":"Enum","id":{"krate":0,"index":2134},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":27175,"byte_end":27182,"line_start":646,"line_end":646,"column_start":10,"column_end":17},"name":"Weekday","qualname":"::Weekday","value":"Weekday::{Mon, Tue, Wed, Thu, Fri, Sat, Sun}","parent":null,"children":[{"krate":0,"index":2135},{"krate":0,"index":2138},{"krate":0,"index":2141},{"krate":0,"index":2144},{"krate":0,"index":2147},{"krate":0,"index":2150},{"krate":0,"index":2153}],"decl_id":null,"docs":" The day of week.","sig":null,"attributes":[{"value":"/ The day of week.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":26780,"byte_end":26800,"line_start":639,"line_end":639,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":26801,"byte_end":26804,"line_start":640,"line_end":640,"column_start":1,"column_end":4}},{"value":"/ The order of the days of week depends on the context.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":26805,"byte_end":26862,"line_start":641,"line_end":641,"column_start":1,"column_end":58}},{"value":"/ (This is why this type does *not* implement `PartialOrd` or `Ord` traits.)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":26863,"byte_end":26941,"line_start":642,"line_end":642,"column_start":1,"column_end":79}},{"value":"/ One should prefer `*_from_monday` or `*_from_sunday` methods to get the correct result.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":26942,"byte_end":27033,"line_start":643,"line_end":643,"column_start":1,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1458},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":27709,"byte_end":27713,"line_start":670,"line_end":670,"column_start":12,"column_end":16},"name":"succ","qualname":"<Weekday>::succ","value":"fn (&self) -> Weekday","parent":null,"children":[],"decl_id":null,"docs":" The next day in the week.","sig":null,"attributes":[{"value":"/ The next day in the week.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":27418,"byte_end":27447,"line_start":664,"line_end":664,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":27452,"byte_end":27455,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ `w`:        | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":27460,"byte_end":27531,"line_start":666,"line_end":666,"column_start":5,"column_end":76}},{"value":"/ ----------- | ----- | ----- | ----- | ----- | ----- | ----- | -----","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":27536,"byte_end":27607,"line_start":667,"line_end":667,"column_start":5,"column_end":76}},{"value":"/ `w.succ()`: | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun` | `Mon`","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":27612,"byte_end":27683,"line_start":668,"line_end":668,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":27688,"byte_end":27697,"line_start":669,"line_end":669,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1459},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":28366,"byte_end":28370,"line_start":688,"line_end":688,"column_start":12,"column_end":16},"name":"pred","qualname":"<Weekday>::pred","value":"fn (&self) -> Weekday","parent":null,"children":[],"decl_id":null,"docs":" The previous day in the week.","sig":null,"attributes":[{"value":"/ The previous day in the week.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":28071,"byte_end":28104,"line_start":682,"line_end":682,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":28109,"byte_end":28112,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ `w`:        | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":28117,"byte_end":28188,"line_start":684,"line_end":684,"column_start":5,"column_end":76}},{"value":"/ ----------- | ----- | ----- | ----- | ----- | ----- | ----- | -----","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":28193,"byte_end":28264,"line_start":685,"line_end":685,"column_start":5,"column_end":76}},{"value":"/ `w.pred()`: | `Sun` | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat`","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":28269,"byte_end":28340,"line_start":686,"line_end":686,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":28345,"byte_end":28354,"line_start":687,"line_end":687,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1460},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":29112,"byte_end":29130,"line_start":706,"line_end":706,"column_start":12,"column_end":30},"name":"number_from_monday","qualname":"<Weekday>::number_from_monday","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns a day-of-week number starting from Monday = 1. (ISO 8601 weekday number)","sig":null,"attributes":[{"value":"/ Returns a day-of-week number starting from Monday = 1. (ISO 8601 weekday number)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":28728,"byte_end":28812,"line_start":700,"line_end":700,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":28817,"byte_end":28820,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ `w`:                      | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":28825,"byte_end":28910,"line_start":702,"line_end":702,"column_start":5,"column_end":90}},{"value":"/ ------------------------- | ----- | ----- | ----- | ----- | ----- | ----- | -----","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":28915,"byte_end":29000,"line_start":703,"line_end":703,"column_start":5,"column_end":90}},{"value":"/ `w.number_from_monday()`: | 1     | 2     | 3     | 4     | 5     | 6     | 7","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":29005,"byte_end":29086,"line_start":704,"line_end":704,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":29091,"byte_end":29100,"line_start":705,"line_end":705,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1461},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":29765,"byte_end":29783,"line_start":724,"line_end":724,"column_start":12,"column_end":30},"name":"number_from_sunday","qualname":"<Weekday>::number_from_sunday","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns a day-of-week number starting from Sunday = 1.","sig":null,"attributes":[{"value":"/ Returns a day-of-week number starting from Sunday = 1.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":29407,"byte_end":29465,"line_start":718,"line_end":718,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":29470,"byte_end":29473,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ `w`:                      | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":29478,"byte_end":29563,"line_start":720,"line_end":720,"column_start":5,"column_end":90}},{"value":"/ ------------------------- | ----- | ----- | ----- | ----- | ----- | ----- | -----","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":29568,"byte_end":29653,"line_start":721,"line_end":721,"column_start":5,"column_end":90}},{"value":"/ `w.number_from_sunday()`: | 2     | 3     | 4     | 5     | 6     | 7     | 1","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":29658,"byte_end":29739,"line_start":722,"line_end":722,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":29744,"byte_end":29753,"line_start":723,"line_end":723,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1462},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":30424,"byte_end":30444,"line_start":742,"line_end":742,"column_start":12,"column_end":32},"name":"num_days_from_monday","qualname":"<Weekday>::num_days_from_monday","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns a day-of-week number starting from Monday = 0.","sig":null,"attributes":[{"value":"/ Returns a day-of-week number starting from Monday = 0.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":30060,"byte_end":30118,"line_start":736,"line_end":736,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":30123,"byte_end":30126,"line_start":737,"line_end":737,"column_start":5,"column_end":8}},{"value":"/ `w`:                        | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":30131,"byte_end":30218,"line_start":738,"line_end":738,"column_start":5,"column_end":92}},{"value":"/ --------------------------- | ----- | ----- | ----- | ----- | ----- | ----- | -----","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":30223,"byte_end":30310,"line_start":739,"line_end":739,"column_start":5,"column_end":92}},{"value":"/ `w.num_days_from_monday()`: | 0     | 1     | 2     | 3     | 4     | 5     | 6","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":30315,"byte_end":30398,"line_start":740,"line_end":740,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":30403,"byte_end":30412,"line_start":741,"line_end":741,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1463},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":31085,"byte_end":31105,"line_start":760,"line_end":760,"column_start":12,"column_end":32},"name":"num_days_from_sunday","qualname":"<Weekday>::num_days_from_sunday","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns a day-of-week number starting from Sunday = 0.","sig":null,"attributes":[{"value":"/ Returns a day-of-week number starting from Sunday = 0.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":30721,"byte_end":30779,"line_start":754,"line_end":754,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":30784,"byte_end":30787,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ `w`:                        | `Mon` | `Tue` | `Wed` | `Thu` | `Fri` | `Sat` | `Sun`","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":30792,"byte_end":30879,"line_start":756,"line_end":756,"column_start":5,"column_end":92}},{"value":"/ --------------------------- | ----- | ----- | ----- | ----- | ----- | ----- | -----","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":30884,"byte_end":30971,"line_start":757,"line_end":757,"column_start":5,"column_end":92}},{"value":"/ `w.num_days_from_sunday()`: | 1     | 2     | 3     | 4     | 5     | 6     | 0","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":30976,"byte_end":31059,"line_start":758,"line_end":758,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":31064,"byte_end":31073,"line_start":759,"line_end":759,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2170},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":32944,"byte_end":32961,"line_start":824,"line_end":824,"column_start":12,"column_end":29},"name":"ParseWeekdayError","qualname":"::ParseWeekdayError","value":"ParseWeekdayError {  }","parent":null,"children":[{"krate":0,"index":2171}],"decl_id":null,"docs":" An error resulting from reading `Weekday` value with `FromStr`.\n","sig":null,"attributes":[{"value":"/ An error resulting from reading `Weekday` value with `FromStr`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":32837,"byte_end":32904,"line_start":822,"line_end":822,"column_start":1,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2179},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":37130,"byte_end":37137,"line_start":968,"line_end":968,"column_start":5,"column_end":12},"name":"January","qualname":"::Month::January","value":"Month::January","parent":{"krate":0,"index":2178},"children":[],"decl_id":null,"docs":" January\n","sig":null,"attributes":[{"value":"/ January","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":37114,"byte_end":37125,"line_start":967,"line_end":967,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2182},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":37164,"byte_end":37172,"line_start":970,"line_end":970,"column_start":5,"column_end":13},"name":"February","qualname":"::Month::February","value":"Month::February","parent":{"krate":0,"index":2178},"children":[],"decl_id":null,"docs":" February\n","sig":null,"attributes":[{"value":"/ February","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":37147,"byte_end":37159,"line_start":969,"line_end":969,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2185},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":37196,"byte_end":37201,"line_start":972,"line_end":972,"column_start":5,"column_end":10},"name":"March","qualname":"::Month::March","value":"Month::March","parent":{"krate":0,"index":2178},"children":[],"decl_id":null,"docs":" March\n","sig":null,"attributes":[{"value":"/ March","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":37182,"byte_end":37191,"line_start":971,"line_end":971,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2188},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":37225,"byte_end":37230,"line_start":974,"line_end":974,"column_start":5,"column_end":10},"name":"April","qualname":"::Month::April","value":"Month::April","parent":{"krate":0,"index":2178},"children":[],"decl_id":null,"docs":" April\n","sig":null,"attributes":[{"value":"/ April","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":37211,"byte_end":37220,"line_start":973,"line_end":973,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2191},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":37252,"byte_end":37255,"line_start":976,"line_end":976,"column_start":5,"column_end":8},"name":"May","qualname":"::Month::May","value":"Month::May","parent":{"krate":0,"index":2178},"children":[],"decl_id":null,"docs":" May\n","sig":null,"attributes":[{"value":"/ May","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":37240,"byte_end":37247,"line_start":975,"line_end":975,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2194},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":37278,"byte_end":37282,"line_start":978,"line_end":978,"column_start":5,"column_end":9},"name":"June","qualname":"::Month::June","value":"Month::June","parent":{"krate":0,"index":2178},"children":[],"decl_id":null,"docs":" June\n","sig":null,"attributes":[{"value":"/ June","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":37265,"byte_end":37273,"line_start":977,"line_end":977,"column_start":5,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2197},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":37305,"byte_end":37309,"line_start":980,"line_end":980,"column_start":5,"column_end":9},"name":"July","qualname":"::Month::July","value":"Month::July","parent":{"krate":0,"index":2178},"children":[],"decl_id":null,"docs":" July\n","sig":null,"attributes":[{"value":"/ July","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":37292,"byte_end":37300,"line_start":979,"line_end":979,"column_start":5,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2200},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":37334,"byte_end":37340,"line_start":982,"line_end":982,"column_start":5,"column_end":11},"name":"August","qualname":"::Month::August","value":"Month::August","parent":{"krate":0,"index":2178},"children":[],"decl_id":null,"docs":" August\n","sig":null,"attributes":[{"value":"/ August","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":37319,"byte_end":37329,"line_start":981,"line_end":981,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2203},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":37368,"byte_end":37377,"line_start":984,"line_end":984,"column_start":5,"column_end":14},"name":"September","qualname":"::Month::September","value":"Month::September","parent":{"krate":0,"index":2178},"children":[],"decl_id":null,"docs":" September\n","sig":null,"attributes":[{"value":"/ September","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":37350,"byte_end":37363,"line_start":983,"line_end":983,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2206},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":37403,"byte_end":37410,"line_start":986,"line_end":986,"column_start":5,"column_end":12},"name":"October","qualname":"::Month::October","value":"Month::October","parent":{"krate":0,"index":2178},"children":[],"decl_id":null,"docs":" October\n","sig":null,"attributes":[{"value":"/ October","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":37387,"byte_end":37398,"line_start":985,"line_end":985,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2209},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":37437,"byte_end":37445,"line_start":988,"line_end":988,"column_start":5,"column_end":13},"name":"November","qualname":"::Month::November","value":"Month::November","parent":{"krate":0,"index":2178},"children":[],"decl_id":null,"docs":" November\n","sig":null,"attributes":[{"value":"/ November","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":37420,"byte_end":37432,"line_start":987,"line_end":987,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2212},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":37473,"byte_end":37481,"line_start":990,"line_end":990,"column_start":5,"column_end":13},"name":"December","qualname":"::Month::December","value":"Month::December","parent":{"krate":0,"index":2178},"children":[],"decl_id":null,"docs":" December\n","sig":null,"attributes":[{"value":"/ December","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":37456,"byte_end":37468,"line_start":989,"line_end":989,"column_start":5,"column_end":17}}]},{"kind":"Enum","id":{"krate":0,"index":2178},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":37102,"byte_end":37107,"line_start":966,"line_end":966,"column_start":10,"column_end":15},"name":"Month","qualname":"::Month","value":"Month::{January, February, March, April, May, June, July, August, September, October, November, December}","parent":null,"children":[{"krate":0,"index":2179},{"krate":0,"index":2182},{"krate":0,"index":2185},{"krate":0,"index":2188},{"krate":0,"index":2191},{"krate":0,"index":2194},{"krate":0,"index":2197},{"krate":0,"index":2200},{"krate":0,"index":2203},{"krate":0,"index":2206},{"krate":0,"index":2209},{"krate":0,"index":2212}],"decl_id":null,"docs":" The month of the year.","sig":null,"attributes":[{"value":"/ The month of the year.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":35957,"byte_end":35983,"line_start":939,"line_end":939,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":35984,"byte_end":35987,"line_start":940,"line_end":940,"column_start":1,"column_end":4}},{"value":"/ This enum is just a convenience implementation.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":35988,"byte_end":36039,"line_start":941,"line_end":941,"column_start":1,"column_end":52}},{"value":"/ The month in dates created by DateLike objects does not return this enum.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":36040,"byte_end":36117,"line_start":942,"line_end":942,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":36118,"byte_end":36121,"line_start":943,"line_end":943,"column_start":1,"column_end":4}},{"value":"/ It is possible to convert from a date to a month independently","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":36122,"byte_end":36188,"line_start":944,"line_end":944,"column_start":1,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":36189,"byte_end":36196,"line_start":945,"line_end":945,"column_start":1,"column_end":8}},{"value":"/ # extern crate num_traits;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":36197,"byte_end":36227,"line_start":946,"line_end":946,"column_start":1,"column_end":31}},{"value":"/ use num_traits::FromPrimitive;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":36228,"byte_end":36262,"line_start":947,"line_end":947,"column_start":1,"column_end":35}},{"value":"/ use chrono::prelude::*;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":36263,"byte_end":36290,"line_start":948,"line_end":948,"column_start":1,"column_end":28}},{"value":"/ let date = Utc.ymd(2019, 10, 28).and_hms(9, 10, 11);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":36291,"byte_end":36347,"line_start":949,"line_end":949,"column_start":1,"column_end":57}},{"value":"/ // `2019-10-28T09:10:11Z`","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":36348,"byte_end":36377,"line_start":950,"line_end":950,"column_start":1,"column_end":30}},{"value":"/ let month = Month::from_u32(date.month());","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":36378,"byte_end":36424,"line_start":951,"line_end":951,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(month, Some(Month::October))","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":36425,"byte_end":36468,"line_start":952,"line_end":952,"column_start":1,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":36469,"byte_end":36476,"line_start":953,"line_end":953,"column_start":1,"column_end":8}},{"value":"/ Or from a Month to an integer usable by dates","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":36477,"byte_end":36526,"line_start":954,"line_end":954,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":36527,"byte_end":36534,"line_start":955,"line_end":955,"column_start":1,"column_end":8}},{"value":"/ # use chrono::prelude::*;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":36535,"byte_end":36564,"line_start":956,"line_end":956,"column_start":1,"column_end":30}},{"value":"/ let month = Month::January;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":36565,"byte_end":36596,"line_start":957,"line_end":957,"column_start":1,"column_end":32}},{"value":"/ let dt = Utc.ymd(2019, month.number_from_month(), 28).and_hms(9, 10, 11);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":36597,"byte_end":36674,"line_start":958,"line_end":958,"column_start":1,"column_end":78}},{"value":"/ assert_eq!((dt.year(), dt.month(), dt.day()), (2019, 1, 28));","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":36675,"byte_end":36740,"line_start":959,"line_end":959,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":36741,"byte_end":36748,"line_start":960,"line_end":960,"column_start":1,"column_end":8}},{"value":"/ Allows mapping from and to month, from 1-January to 12-December.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":36749,"byte_end":36817,"line_start":961,"line_end":961,"column_start":1,"column_end":69}},{"value":"/ Can be Serialized/Deserialized with serde","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":36818,"byte_end":36863,"line_start":962,"line_end":962,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1473},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":37758,"byte_end":37762,"line_start":1000,"line_end":1000,"column_start":12,"column_end":16},"name":"succ","qualname":"<Month>::succ","value":"fn (&self) -> Month","parent":null,"children":[],"decl_id":null,"docs":" The next month.","sig":null,"attributes":[{"value":"/ The next month.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":37508,"byte_end":37527,"line_start":994,"line_end":994,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":37532,"byte_end":37535,"line_start":995,"line_end":995,"column_start":5,"column_end":8}},{"value":"/ `m`:        | `January`  | `February` | `...` | `December`","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":37540,"byte_end":37602,"line_start":996,"line_end":996,"column_start":5,"column_end":67}},{"value":"/ ----------- | ---------  | ---------- | --- | ---------","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":37607,"byte_end":37666,"line_start":997,"line_end":997,"column_start":5,"column_end":64}},{"value":"/ `m.succ()`: | `February` | `March`    | `...` | `January`","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":37671,"byte_end":37732,"line_start":998,"line_end":998,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":37737,"byte_end":37746,"line_start":999,"line_end":999,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1474},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":38611,"byte_end":38615,"line_start":1023,"line_end":1023,"column_start":12,"column_end":16},"name":"pred","qualname":"<Month>::pred","value":"fn (&self) -> Month","parent":null,"children":[],"decl_id":null,"docs":" The previous month.","sig":null,"attributes":[{"value":"/ The previous month.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":38356,"byte_end":38379,"line_start":1017,"line_end":1017,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":38384,"byte_end":38387,"line_start":1018,"line_end":1018,"column_start":5,"column_end":8}},{"value":"/ `m`:        | `January`  | `February` | `...` | `December`","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":38392,"byte_end":38454,"line_start":1019,"line_end":1019,"column_start":5,"column_end":67}},{"value":"/ ----------- | ---------  | ---------- | --- | ---------","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":38459,"byte_end":38518,"line_start":1020,"line_end":1020,"column_start":5,"column_end":64}},{"value":"/ `m.succ()`: | `December` | `January`  | `...` | `November`","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":38523,"byte_end":38585,"line_start":1021,"line_end":1021,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":38590,"byte_end":38599,"line_start":1022,"line_end":1022,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1475},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":39526,"byte_end":39543,"line_start":1046,"line_end":1046,"column_start":12,"column_end":29},"name":"number_from_month","qualname":"<Month>::number_from_month","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns a month-of-year number starting from January = 1.","sig":null,"attributes":[{"value":"/ Returns a month-of-year number starting from January = 1.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":39209,"byte_end":39270,"line_start":1040,"line_end":1040,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":39275,"byte_end":39278,"line_start":1041,"line_end":1041,"column_start":5,"column_end":8}},{"value":"/ `m`:                     | `January` | `February` | `...` | `December`","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":39283,"byte_end":39357,"line_start":1042,"line_end":1042,"column_start":5,"column_end":79}},{"value":"/ -------------------------| --------- | ---------- | --- | -----","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":39362,"byte_end":39429,"line_start":1043,"line_end":1043,"column_start":5,"column_end":72}},{"value":"/ `m.number_from_month()`: | 1         | 2          | `...` | 12","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":39434,"byte_end":39500,"line_start":1044,"line_end":1044,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":39505,"byte_end":39514,"line_start":1045,"line_end":1045,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1476},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":40153,"byte_end":40157,"line_start":1070,"line_end":1070,"column_start":12,"column_end":16},"name":"name","qualname":"<Month>::name","value":"fn (&self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Get the name of the month","sig":null,"attributes":[{"value":"/ Get the name of the month","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":39992,"byte_end":40021,"line_start":1063,"line_end":1063,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":40026,"byte_end":40029,"line_start":1064,"line_end":1064,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":40034,"byte_end":40041,"line_start":1065,"line_end":1065,"column_start":5,"column_end":12}},{"value":"/ use chrono::Month;","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":40046,"byte_end":40068,"line_start":1066,"line_end":1066,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":40073,"byte_end":40076,"line_start":1067,"line_end":1067,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Month::January.name(), \"January\")","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":40081,"byte_end":40129,"line_start":1068,"line_end":1068,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":40134,"byte_end":40141,"line_start":1069,"line_end":1069,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":2229},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":42008,"byte_end":42023,"line_start":1127,"line_end":1127,"column_start":12,"column_end":27},"name":"ParseMonthError","qualname":"::ParseMonthError","value":"ParseMonthError {  }","parent":null,"children":[{"krate":0,"index":2230}],"decl_id":null,"docs":" An error resulting from reading `<Month>` value with `FromStr`.\n","sig":null,"attributes":[{"value":"/ An error resulting from reading `<Month>` value with `FromStr`.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":41901,"byte_end":41968,"line_start":1125,"line_end":1125,"column_start":1,"column_end":68}}]},{"kind":"Trait","id":{"krate":0,"index":1483},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":45158,"byte_end":45166,"line_start":1245,"line_end":1245,"column_start":11,"column_end":19},"name":"Datelike","qualname":"::Datelike","value":"Datelike: Sized","parent":null,"children":[{"krate":0,"index":1484},{"krate":0,"index":1485},{"krate":0,"index":1486},{"krate":0,"index":1487},{"krate":0,"index":1488},{"krate":0,"index":1489},{"krate":0,"index":1490},{"krate":0,"index":1491},{"krate":0,"index":1492},{"krate":0,"index":1493},{"krate":0,"index":1494},{"krate":0,"index":1495},{"krate":0,"index":1496},{"krate":0,"index":1497},{"krate":0,"index":1498},{"krate":0,"index":1499},{"krate":0,"index":1500},{"krate":0,"index":1501}],"decl_id":null,"docs":" The common set of methods for date component.\n","sig":null,"attributes":[{"value":"/ The common set of methods for date component.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":45098,"byte_end":45147,"line_start":1244,"line_end":1244,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1484},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":45284,"byte_end":45288,"line_start":1247,"line_end":1247,"column_start":8,"column_end":12},"name":"year","qualname":"::Datelike::year","value":"fn (&self) -> i32","parent":{"krate":0,"index":1483},"children":[],"decl_id":null,"docs":" Returns the year number in the [calendar date](./naive/struct.NaiveDate.html#calendar-date).\n","sig":null,"attributes":[{"value":"/ Returns the year number in the [calendar date](./naive/struct.NaiveDate.html#calendar-date).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":45180,"byte_end":45276,"line_start":1246,"line_end":1246,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":1485},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":45497,"byte_end":45504,"line_start":1252,"line_end":1252,"column_start":8,"column_end":15},"name":"year_ce","qualname":"::Datelike::year_ce","value":"fn (&self) -> (bool, u32)","parent":{"krate":0,"index":1483},"children":[],"decl_id":null,"docs":" Returns the absolute year number starting from 1 with a boolean flag,\n which is false when the year predates the epoch (BCE/BC) and true otherwise (CE/AD).\n","sig":null,"attributes":[{"value":"/ Returns the absolute year number starting from 1 with a boolean flag,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":45309,"byte_end":45382,"line_start":1249,"line_end":1249,"column_start":5,"column_end":78}},{"value":"/ which is false when the year predates the epoch (BCE/BC) and true otherwise (CE/AD).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":45387,"byte_end":45475,"line_start":1250,"line_end":1250,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":45480,"byte_end":45489,"line_start":1251,"line_end":1251,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1486},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":45799,"byte_end":45804,"line_start":1264,"line_end":1264,"column_start":8,"column_end":13},"name":"month","qualname":"::Datelike::month","value":"fn (&self) -> u32","parent":{"krate":0,"index":1483},"children":[],"decl_id":null,"docs":" Returns the month number starting from 1.","sig":null,"attributes":[{"value":"/ Returns the month number starting from 1.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":45692,"byte_end":45737,"line_start":1261,"line_end":1261,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":45742,"byte_end":45745,"line_start":1262,"line_end":1262,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 1 to 12.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":45750,"byte_end":45791,"line_start":1263,"line_end":1263,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1487},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":45932,"byte_end":45938,"line_start":1269,"line_end":1269,"column_start":8,"column_end":14},"name":"month0","qualname":"::Datelike::month0","value":"fn (&self) -> u32","parent":{"krate":0,"index":1483},"children":[],"decl_id":null,"docs":" Returns the month number starting from 0.","sig":null,"attributes":[{"value":"/ Returns the month number starting from 0.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":45825,"byte_end":45870,"line_start":1266,"line_end":1266,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":45875,"byte_end":45878,"line_start":1267,"line_end":1267,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 0 to 11.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":45883,"byte_end":45924,"line_start":1268,"line_end":1268,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1488},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":46109,"byte_end":46112,"line_start":1274,"line_end":1274,"column_start":8,"column_end":11},"name":"day","qualname":"::Datelike::day","value":"fn (&self) -> u32","parent":{"krate":0,"index":1483},"children":[],"decl_id":null,"docs":" Returns the day of month starting from 1.","sig":null,"attributes":[{"value":"/ Returns the day of month starting from 1.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":45959,"byte_end":46004,"line_start":1271,"line_end":1271,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":46009,"byte_end":46012,"line_start":1272,"line_end":1272,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 1 to 31. (The last day of month differs by months.)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":46017,"byte_end":46101,"line_start":1273,"line_end":1273,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1489},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":46283,"byte_end":46287,"line_start":1279,"line_end":1279,"column_start":8,"column_end":12},"name":"day0","qualname":"::Datelike::day0","value":"fn (&self) -> u32","parent":{"krate":0,"index":1483},"children":[],"decl_id":null,"docs":" Returns the day of month starting from 0.","sig":null,"attributes":[{"value":"/ Returns the day of month starting from 0.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":46133,"byte_end":46178,"line_start":1276,"line_end":1276,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":46183,"byte_end":46186,"line_start":1277,"line_end":1277,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 0 to 30. (The last day of month differs by months.)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":46191,"byte_end":46275,"line_start":1278,"line_end":1278,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1490},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":46456,"byte_end":46463,"line_start":1284,"line_end":1284,"column_start":8,"column_end":15},"name":"ordinal","qualname":"::Datelike::ordinal","value":"fn (&self) -> u32","parent":{"krate":0,"index":1483},"children":[],"decl_id":null,"docs":" Returns the day of year starting from 1.","sig":null,"attributes":[{"value":"/ Returns the day of year starting from 1.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":46308,"byte_end":46352,"line_start":1281,"line_end":1281,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":46357,"byte_end":46360,"line_start":1282,"line_end":1282,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 1 to 366. (The last day of year differs by years.)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":46365,"byte_end":46448,"line_start":1283,"line_end":1283,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1491},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":46632,"byte_end":46640,"line_start":1289,"line_end":1289,"column_start":8,"column_end":16},"name":"ordinal0","qualname":"::Datelike::ordinal0","value":"fn (&self) -> u32","parent":{"krate":0,"index":1483},"children":[],"decl_id":null,"docs":" Returns the day of year starting from 0.","sig":null,"attributes":[{"value":"/ Returns the day of year starting from 0.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":46484,"byte_end":46528,"line_start":1286,"line_end":1286,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":46533,"byte_end":46536,"line_start":1287,"line_end":1287,"column_start":5,"column_end":8}},{"value":"/ The return value ranges from 0 to 365. (The last day of year differs by years.)","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":46541,"byte_end":46624,"line_start":1288,"line_end":1288,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1492},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":46697,"byte_end":46704,"line_start":1292,"line_end":1292,"column_start":8,"column_end":15},"name":"weekday","qualname":"::Datelike::weekday","value":"fn (&self) -> Weekday","parent":{"krate":0,"index":1483},"children":[],"decl_id":null,"docs":" Returns the day of week.\n","sig":null,"attributes":[{"value":"/ Returns the day of week.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":46661,"byte_end":46689,"line_start":1291,"line_end":1291,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1493},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":46762,"byte_end":46770,"line_start":1295,"line_end":1295,"column_start":8,"column_end":16},"name":"iso_week","qualname":"::Datelike::iso_week","value":"fn (&self) -> IsoWeek","parent":{"krate":0,"index":1483},"children":[],"decl_id":null,"docs":" Returns the ISO week.\n","sig":null,"attributes":[{"value":"/ Returns the ISO week.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":46729,"byte_end":46754,"line_start":1294,"line_end":1294,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1494},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":46928,"byte_end":46937,"line_start":1300,"line_end":1300,"column_start":8,"column_end":17},"name":"with_year","qualname":"::Datelike::with_year","value":"fn (&self, year: i32) -> Option<Self>","parent":{"krate":0,"index":1483},"children":[],"decl_id":null,"docs":" Makes a new value with the year number changed.","sig":null,"attributes":[{"value":"/ Makes a new value with the year number changed.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":46795,"byte_end":46846,"line_start":1297,"line_end":1297,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":46851,"byte_end":46854,"line_start":1298,"line_end":1298,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting value would be invalid.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":46859,"byte_end":46920,"line_start":1299,"line_end":1299,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1495},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":47130,"byte_end":47140,"line_start":1305,"line_end":1305,"column_start":8,"column_end":18},"name":"with_month","qualname":"::Datelike::with_month","value":"fn (&self, month: u32) -> Option<Self>","parent":{"krate":0,"index":1483},"children":[],"decl_id":null,"docs":" Makes a new value with the month number (starting from 1) changed.","sig":null,"attributes":[{"value":"/ Makes a new value with the month number (starting from 1) changed.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":46978,"byte_end":47048,"line_start":1302,"line_end":1302,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":47053,"byte_end":47056,"line_start":1303,"line_end":1303,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting value would be invalid.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":47061,"byte_end":47122,"line_start":1304,"line_end":1304,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1496},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":47334,"byte_end":47345,"line_start":1310,"line_end":1310,"column_start":8,"column_end":19},"name":"with_month0","qualname":"::Datelike::with_month0","value":"fn (&self, month0: u32) -> Option<Self>","parent":{"krate":0,"index":1483},"children":[],"decl_id":null,"docs":" Makes a new value with the month number (starting from 0) changed.","sig":null,"attributes":[{"value":"/ Makes a new value with the month number (starting from 0) changed.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":47182,"byte_end":47252,"line_start":1307,"line_end":1307,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":47257,"byte_end":47260,"line_start":1308,"line_end":1308,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting value would be invalid.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":47265,"byte_end":47326,"line_start":1309,"line_end":1309,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1497},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":47540,"byte_end":47548,"line_start":1315,"line_end":1315,"column_start":8,"column_end":16},"name":"with_day","qualname":"::Datelike::with_day","value":"fn (&self, day: u32) -> Option<Self>","parent":{"krate":0,"index":1483},"children":[],"decl_id":null,"docs":" Makes a new value with the day of month (starting from 1) changed.","sig":null,"attributes":[{"value":"/ Makes a new value with the day of month (starting from 1) changed.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":47388,"byte_end":47458,"line_start":1312,"line_end":1312,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":47463,"byte_end":47466,"line_start":1313,"line_end":1313,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting value would be invalid.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":47471,"byte_end":47532,"line_start":1314,"line_end":1314,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1498},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":47740,"byte_end":47749,"line_start":1320,"line_end":1320,"column_start":8,"column_end":17},"name":"with_day0","qualname":"::Datelike::with_day0","value":"fn (&self, day0: u32) -> Option<Self>","parent":{"krate":0,"index":1483},"children":[],"decl_id":null,"docs":" Makes a new value with the day of month (starting from 0) changed.","sig":null,"attributes":[{"value":"/ Makes a new value with the day of month (starting from 0) changed.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":47588,"byte_end":47658,"line_start":1317,"line_end":1317,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":47663,"byte_end":47666,"line_start":1318,"line_end":1318,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting value would be invalid.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":47671,"byte_end":47732,"line_start":1319,"line_end":1319,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1499},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":47941,"byte_end":47953,"line_start":1325,"line_end":1325,"column_start":8,"column_end":20},"name":"with_ordinal","qualname":"::Datelike::with_ordinal","value":"fn (&self, ordinal: u32) -> Option<Self>","parent":{"krate":0,"index":1483},"children":[],"decl_id":null,"docs":" Makes a new value with the day of year (starting from 1) changed.","sig":null,"attributes":[{"value":"/ Makes a new value with the day of year (starting from 1) changed.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":47790,"byte_end":47859,"line_start":1322,"line_end":1322,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":47864,"byte_end":47867,"line_start":1323,"line_end":1323,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting value would be invalid.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":47872,"byte_end":47933,"line_start":1324,"line_end":1324,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1500},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":48148,"byte_end":48161,"line_start":1330,"line_end":1330,"column_start":8,"column_end":21},"name":"with_ordinal0","qualname":"::Datelike::with_ordinal0","value":"fn (&self, ordinal0: u32) -> Option<Self>","parent":{"krate":0,"index":1483},"children":[],"decl_id":null,"docs":" Makes a new value with the day of year (starting from 0) changed.","sig":null,"attributes":[{"value":"/ Makes a new value with the day of year (starting from 0) changed.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":47997,"byte_end":48066,"line_start":1327,"line_end":1327,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":48071,"byte_end":48074,"line_start":1328,"line_end":1328,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting value would be invalid.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":48079,"byte_end":48140,"line_start":1329,"line_end":1329,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1501},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":48720,"byte_end":48736,"line_start":1344,"line_end":1344,"column_start":8,"column_end":24},"name":"num_days_from_ce","qualname":"::Datelike::num_days_from_ce","value":"fn (&self) -> i32","parent":{"krate":0,"index":1483},"children":[],"decl_id":null,"docs":" Counts the days in the proleptic Gregorian calendar, with January 1, Year 1 (CE) as day 1.","sig":null,"attributes":[{"value":"/ Counts the days in the proleptic Gregorian calendar, with January 1, Year 1 (CE) as day 1.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":48206,"byte_end":48300,"line_start":1332,"line_end":1332,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":48305,"byte_end":48308,"line_start":1333,"line_end":1333,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":48313,"byte_end":48327,"line_start":1334,"line_end":1334,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":48332,"byte_end":48335,"line_start":1335,"line_end":1335,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":48340,"byte_end":48347,"line_start":1336,"line_end":1336,"column_start":5,"column_end":12}},{"value":"/ use chrono::{NaiveDate, Datelike};","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":48352,"byte_end":48390,"line_start":1337,"line_end":1337,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":48395,"byte_end":48398,"line_start":1338,"line_end":1338,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(NaiveDate::from_ymd(1970, 1, 1).num_days_from_ce(), 719_163);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":48403,"byte_end":48479,"line_start":1339,"line_end":1339,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(NaiveDate::from_ymd(2, 1, 1).num_days_from_ce(), 366);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":48484,"byte_end":48553,"line_start":1340,"line_end":1340,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(NaiveDate::from_ymd(1, 1, 1).num_days_from_ce(), 1);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":48558,"byte_end":48625,"line_start":1341,"line_end":1341,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(NaiveDate::from_ymd(0, 1, 1).num_days_from_ce(), -365);","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":48630,"byte_end":48700,"line_start":1342,"line_end":1342,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":48705,"byte_end":48712,"line_start":1343,"line_end":1343,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":1502},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":49394,"byte_end":49402,"line_start":1363,"line_end":1363,"column_start":11,"column_end":19},"name":"Timelike","qualname":"::Timelike","value":"Timelike: Sized","parent":null,"children":[{"krate":0,"index":1503},{"krate":0,"index":1504},{"krate":0,"index":1505},{"krate":0,"index":1506},{"krate":0,"index":1507},{"krate":0,"index":1508},{"krate":0,"index":1509},{"krate":0,"index":1510},{"krate":0,"index":1511},{"krate":0,"index":1512}],"decl_id":null,"docs":" The common set of methods for time component.\n","sig":null,"attributes":[{"value":"/ The common set of methods for time component.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":49334,"byte_end":49383,"line_start":1362,"line_end":1362,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1503},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":49465,"byte_end":49469,"line_start":1365,"line_end":1365,"column_start":8,"column_end":12},"name":"hour","qualname":"::Timelike::hour","value":"fn (&self) -> u32","parent":{"krate":0,"index":1502},"children":[],"decl_id":null,"docs":" Returns the hour number from 0 to 23.\n","sig":null,"attributes":[{"value":"/ Returns the hour number from 0 to 23.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":49416,"byte_end":49457,"line_start":1364,"line_end":1364,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1504},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":49620,"byte_end":49626,"line_start":1370,"line_end":1370,"column_start":8,"column_end":14},"name":"hour12","qualname":"::Timelike::hour12","value":"fn (&self) -> (bool, u32)","parent":{"krate":0,"index":1502},"children":[],"decl_id":null,"docs":" Returns the hour number from 1 to 12 with a boolean flag,\n which is false for AM and true for PM.\n","sig":null,"attributes":[{"value":"/ Returns the hour number from 1 to 12 with a boolean flag,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":49490,"byte_end":49551,"line_start":1367,"line_end":1367,"column_start":5,"column_end":66}},{"value":"/ which is false for AM and true for PM.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":49556,"byte_end":49598,"line_start":1368,"line_end":1368,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":49603,"byte_end":49612,"line_start":1369,"line_end":1369,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1505},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":49870,"byte_end":49876,"line_start":1380,"line_end":1380,"column_start":8,"column_end":14},"name":"minute","qualname":"::Timelike::minute","value":"fn (&self) -> u32","parent":{"krate":0,"index":1502},"children":[],"decl_id":null,"docs":" Returns the minute number from 0 to 59.\n","sig":null,"attributes":[{"value":"/ Returns the minute number from 0 to 59.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":49819,"byte_end":49862,"line_start":1379,"line_end":1379,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1506},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":49948,"byte_end":49954,"line_start":1383,"line_end":1383,"column_start":8,"column_end":14},"name":"second","qualname":"::Timelike::second","value":"fn (&self) -> u32","parent":{"krate":0,"index":1502},"children":[],"decl_id":null,"docs":" Returns the second number from 0 to 59.\n","sig":null,"attributes":[{"value":"/ Returns the second number from 0 to 59.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":49897,"byte_end":49940,"line_start":1382,"line_end":1382,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1507},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":50197,"byte_end":50207,"line_start":1388,"line_end":1388,"column_start":8,"column_end":18},"name":"nanosecond","qualname":"::Timelike::nanosecond","value":"fn (&self) -> u32","parent":{"krate":0,"index":1502},"children":[],"decl_id":null,"docs":" Returns the number of nanoseconds since the whole non-leap second.\n The range from 1,000,000,000 to 1,999,999,999 represents\n the [leap second](./naive/struct.NaiveTime.html#leap-second-handling).\n","sig":null,"attributes":[{"value":"/ Returns the number of nanoseconds since the whole non-leap second.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":49975,"byte_end":50045,"line_start":1385,"line_end":1385,"column_start":5,"column_end":75}},{"value":"/ The range from 1,000,000,000 to 1,999,999,999 represents","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":50050,"byte_end":50110,"line_start":1386,"line_end":1386,"column_start":5,"column_end":65}},{"value":"/ the [leap second](./naive/struct.NaiveTime.html#leap-second-handling).","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":50115,"byte_end":50189,"line_start":1387,"line_end":1387,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1508},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":50361,"byte_end":50370,"line_start":1393,"line_end":1393,"column_start":8,"column_end":17},"name":"with_hour","qualname":"::Timelike::with_hour","value":"fn (&self, hour: u32) -> Option<Self>","parent":{"krate":0,"index":1502},"children":[],"decl_id":null,"docs":" Makes a new value with the hour number changed.","sig":null,"attributes":[{"value":"/ Makes a new value with the hour number changed.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":50228,"byte_end":50279,"line_start":1390,"line_end":1390,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":50284,"byte_end":50287,"line_start":1391,"line_end":1391,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting value would be invalid.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":50292,"byte_end":50353,"line_start":1392,"line_end":1392,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1509},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":50546,"byte_end":50557,"line_start":1398,"line_end":1398,"column_start":8,"column_end":19},"name":"with_minute","qualname":"::Timelike::with_minute","value":"fn (&self, min: u32) -> Option<Self>","parent":{"krate":0,"index":1502},"children":[],"decl_id":null,"docs":" Makes a new value with the minute number changed.","sig":null,"attributes":[{"value":"/ Makes a new value with the minute number changed.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":50411,"byte_end":50464,"line_start":1395,"line_end":1395,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":50469,"byte_end":50472,"line_start":1396,"line_end":1396,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting value would be invalid.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":50477,"byte_end":50538,"line_start":1397,"line_end":1397,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1510},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":50844,"byte_end":50855,"line_start":1405,"line_end":1405,"column_start":8,"column_end":19},"name":"with_second","qualname":"::Timelike::with_second","value":"fn (&self, sec: u32) -> Option<Self>","parent":{"krate":0,"index":1502},"children":[],"decl_id":null,"docs":" Makes a new value with the second number changed.","sig":null,"attributes":[{"value":"/ Makes a new value with the second number changed.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":50597,"byte_end":50650,"line_start":1400,"line_end":1400,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":50655,"byte_end":50658,"line_start":1401,"line_end":1401,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting value would be invalid.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":50663,"byte_end":50724,"line_start":1402,"line_end":1402,"column_start":5,"column_end":66}},{"value":"/ As with the [`second`](#tymethod.second) method,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":50729,"byte_end":50781,"line_start":1403,"line_end":1403,"column_start":5,"column_end":57}},{"value":"/ the input range is restricted to 0 through 59.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":50786,"byte_end":50836,"line_start":1404,"line_end":1404,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1511},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":51188,"byte_end":51203,"line_start":1412,"line_end":1412,"column_start":8,"column_end":23},"name":"with_nanosecond","qualname":"::Timelike::with_nanosecond","value":"fn (&self, nano: u32) -> Option<Self>","parent":{"krate":0,"index":1502},"children":[],"decl_id":null,"docs":" Makes a new value with nanoseconds since the whole non-leap second changed.","sig":null,"attributes":[{"value":"/ Makes a new value with nanoseconds since the whole non-leap second changed.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":50895,"byte_end":50974,"line_start":1407,"line_end":1407,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":50979,"byte_end":50982,"line_start":1408,"line_end":1408,"column_start":5,"column_end":8}},{"value":"/ Returns `None` when the resulting value would be invalid.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":50987,"byte_end":51048,"line_start":1409,"line_end":1409,"column_start":5,"column_end":66}},{"value":"/ As with the [`nanosecond`](#tymethod.nanosecond) method,","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":51053,"byte_end":51113,"line_start":1410,"line_end":1410,"column_start":5,"column_end":65}},{"value":"/ the input range can exceed 1,000,000,000 for leap seconds.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":51118,"byte_end":51180,"line_start":1411,"line_end":1411,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1512},"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":51332,"byte_end":51357,"line_start":1416,"line_end":1416,"column_start":8,"column_end":33},"name":"num_seconds_from_midnight","qualname":"::Timelike::num_seconds_from_midnight","value":"fn (&self) -> u32","parent":{"krate":0,"index":1502},"children":[],"decl_id":null,"docs":" Returns the number of non-leap seconds past the last midnight.\n","sig":null,"attributes":[{"value":"/ Returns the number of non-leap seconds past the last midnight.","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":51244,"byte_end":51310,"line_start":1414,"line_end":1414,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":51315,"byte_end":51324,"line_start":1415,"line_end":1415,"column_start":5,"column_end":14}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/sys.rs","byte_start":57212,"byte_end":57220,"line_start":41,"line_end":41,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/sys.rs","byte_start":59422,"byte_end":59424,"line_start":117,"line_end":117,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":43}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":66340,"byte_end":66351,"line_start":41,"line_end":41,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":67532,"byte_end":67543,"line_start":76,"line_end":76,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":70753,"byte_end":70764,"line_start":169,"line_end":169,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":86111,"byte_end":86122,"line_start":27,"line_end":27,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":88679,"byte_end":88690,"line_start":101,"line_end":101,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":89278,"byte_end":89289,"line_start":123,"line_end":123,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":89370,"byte_end":89381,"line_start":129,"line_end":129,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":89879,"byte_end":89890,"line_start":143,"line_end":143,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":90658,"byte_end":90667,"line_start":164,"line_end":164,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":204},{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":90855,"byte_end":90864,"line_start":173,"line_end":173,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":207},{"krate":0,"index":208}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":91053,"byte_end":91066,"line_start":182,"line_end":182,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":91262,"byte_end":91275,"line_start":191,"line_end":191,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":213},{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":91486,"byte_end":91494,"line_start":200,"line_end":200,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":217},{"krate":0,"index":218}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":91706,"byte_end":91714,"line_start":209,"line_end":209,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":221},{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/local.rs","byte_start":96131,"byte_end":96136,"line_start":93,"line_end":93,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":245},{"krate":0,"index":246}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/local.rs","byte_start":97036,"byte_end":97041,"line_start":117,"line_end":117,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":252},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/utc.rs","byte_start":102412,"byte_end":102415,"line_start":39,"line_end":39,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/utc.rs","byte_start":103301,"byte_end":103304,"line_start":62,"line_end":62,"column_start":19,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284},{"krate":0,"index":285},{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/utc.rs","byte_start":103824,"byte_end":103827,"line_start":84,"line_end":84,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":288}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/utc.rs","byte_start":103923,"byte_end":103926,"line_start":90,"line_end":90,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/utc.rs","byte_start":104042,"byte_end":104045,"line_start":96,"line_end":96,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":109840,"byte_end":109849,"line_start":136,"line_end":136,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":343},{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371},{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":379},{"krate":0,"index":383},{"krate":0,"index":385},{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":147653,"byte_end":147662,"line_start":1102,"line_end":1102,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":159963,"byte_end":159972,"line_start":1468,"line_end":1468,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":405},{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":160191,"byte_end":160200,"line_start":1477,"line_end":1477,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":161584,"byte_end":161593,"line_start":1509,"line_end":1509,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":410},{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":161812,"byte_end":161821,"line_start":1518,"line_end":1518,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":163046,"byte_end":163055,"line_start":1551,"line_end":1551,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":415},{"krate":0,"index":416}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":163408,"byte_end":163429,"line_start":1566,"line_end":1566,"column_start":19,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":418},{"krate":0,"index":419},{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":164006,"byte_end":164027,"line_start":1586,"line_end":1586,"column_start":28,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":164179,"byte_end":164201,"line_start":1593,"line_end":1593,"column_start":19,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":423},{"krate":0,"index":424},{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":164716,"byte_end":164738,"line_start":1611,"line_end":1611,"column_start":28,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":165785,"byte_end":165794,"line_start":1639,"line_end":1639,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":167053,"byte_end":167062,"line_start":1674,"line_end":1674,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":167664,"byte_end":167673,"line_start":1696,"line_end":1696,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":432},{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":198984,"byte_end":198997,"line_start":67,"line_end":67,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":481},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493},{"krate":0,"index":494},{"krate":0,"index":495},{"krate":0,"index":496},{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":225161,"byte_end":225174,"line_start":702,"line_end":702,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":505},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":508},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":514},{"krate":0,"index":516},{"krate":0,"index":518},{"krate":0,"index":520},{"krate":0,"index":522},{"krate":0,"index":524}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":236230,"byte_end":236243,"line_start":1020,"line_end":1020,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":533},{"krate":0,"index":535},{"krate":0,"index":537}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":242439,"byte_end":242452,"line_start":1192,"line_end":1192,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":540}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":245003,"byte_end":245016,"line_start":1252,"line_end":1252,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":543},{"krate":0,"index":544}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":245247,"byte_end":245260,"line_start":1261,"line_end":1261,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":546}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":247707,"byte_end":247720,"line_start":1320,"line_end":1320,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":548},{"krate":0,"index":549}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":247951,"byte_end":247964,"line_start":1329,"line_end":1329,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":551}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":249838,"byte_end":249851,"line_start":1380,"line_end":1380,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":553},{"krate":0,"index":554}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":251059,"byte_end":251072,"line_start":1416,"line_end":1416,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":556}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":252168,"byte_end":252181,"line_start":1447,"line_end":1447,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":558}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":252919,"byte_end":252932,"line_start":1469,"line_end":1469,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":560},{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/internals.rs","byte_start":297139,"byte_end":297148,"line_start":113,"line_end":113,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/internals.rs","byte_start":297945,"byte_end":297954,"line_start":148,"line_end":148,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":602}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/internals.rs","byte_start":306095,"byte_end":306097,"line_start":270,"line_end":270,"column_start":6,"column_end":8},"value":"","parent":null,"children":[{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/internals.rs","byte_start":308176,"byte_end":308178,"line_start":359,"line_end":359,"column_start":21,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":627}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/internals.rs","byte_start":308777,"byte_end":308780,"line_start":380,"line_end":380,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":629},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":635},{"krate":0,"index":636},{"krate":0,"index":637},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":640}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/internals.rs","byte_start":310743,"byte_end":310746,"line_start":469,"line_end":469,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":642}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":324969,"byte_end":324976,"line_start":48,"line_end":48,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":651},{"krate":0,"index":652},{"krate":0,"index":653}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":327522,"byte_end":327529,"line_start":130,"line_end":130,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":655}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":336548,"byte_end":336557,"line_start":187,"line_end":187,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":693},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":702},{"krate":0,"index":706},{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":360947,"byte_end":360956,"line_start":803,"line_end":803,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":368185,"byte_end":368194,"line_start":1016,"line_end":1016,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":720}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":371104,"byte_end":371113,"line_start":1078,"line_end":1078,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":723},{"krate":0,"index":724}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":371294,"byte_end":371303,"line_start":1087,"line_end":1087,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":726}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":373809,"byte_end":373818,"line_start":1145,"line_end":1145,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":728},{"krate":0,"index":729}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":373999,"byte_end":374008,"line_start":1154,"line_end":1154,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":731}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":376479,"byte_end":376488,"line_start":1210,"line_end":1210,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":733},{"krate":0,"index":734}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":377876,"byte_end":377885,"line_start":1247,"line_end":1247,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":736}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":379738,"byte_end":379747,"line_start":1297,"line_end":1297,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":738}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":380519,"byte_end":380528,"line_start":1322,"line_end":1322,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":740},{"krate":0,"index":741}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":401811,"byte_end":401815,"line_start":57,"line_end":57,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":794},{"krate":0,"index":795},{"krate":0,"index":797},{"krate":0,"index":798},{"krate":0,"index":800},{"krate":0,"index":801},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":809},{"krate":0,"index":811},{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":409915,"byte_end":409919,"line_start":277,"line_end":277,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":819},{"krate":0,"index":823}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":411796,"byte_end":411800,"line_start":336,"line_end":336,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":831},{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":838},{"krate":0,"index":840},{"krate":0,"index":842},{"krate":0,"index":844},{"krate":0,"index":846},{"krate":0,"index":848}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":413635,"byte_end":413639,"line_start":411,"line_end":411,"column_start":29,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":413719,"byte_end":413723,"line_start":412,"line_end":412,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":413828,"byte_end":413832,"line_start":414,"line_end":414,"column_start":60,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":857}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":413952,"byte_end":413956,"line_start":420,"line_end":420,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":413999,"byte_end":414003,"line_start":422,"line_end":422,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":862}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":414155,"byte_end":414159,"line_start":428,"line_end":428,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":865}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":414294,"byte_end":414298,"line_start":434,"line_end":434,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":868}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":414437,"byte_end":414441,"line_start":440,"line_end":440,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":872},{"krate":0,"index":873}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":414665,"byte_end":414669,"line_start":449,"line_end":449,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":876},{"krate":0,"index":877}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":414890,"byte_end":414894,"line_start":458,"line_end":458,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":880},{"krate":0,"index":881}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":415079,"byte_end":415083,"line_start":467,"line_end":467,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":884}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":415257,"byte_end":415261,"line_start":473,"line_end":473,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":887}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":418187,"byte_end":418195,"line_start":80,"line_end":80,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":950},{"krate":0,"index":951}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":424242,"byte_end":424250,"line_start":257,"line_end":257,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":953}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":424756,"byte_end":424764,"line_start":269,"line_end":269,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":955}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":425174,"byte_end":425182,"line_start":279,"line_end":279,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":957}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":425634,"byte_end":425642,"line_start":291,"line_end":291,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":959}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":426090,"byte_end":426098,"line_start":303,"line_end":303,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":961}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":426536,"byte_end":426544,"line_start":315,"line_end":315,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":963}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":427260,"byte_end":427268,"line_start":333,"line_end":333,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":969},{"krate":0,"index":971},{"krate":0,"index":973}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":429960,"byte_end":429968,"line_start":393,"line_end":393,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":976},{"krate":0,"index":978},{"krate":0,"index":980},{"krate":0,"index":985},{"krate":0,"index":989}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":435450,"byte_end":435458,"line_start":535,"line_end":535,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":993},{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":999},{"krate":0,"index":1000},{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1004},{"krate":0,"index":1006},{"krate":0,"index":1008},{"krate":0,"index":1010},{"krate":0,"index":1012},{"krate":0,"index":1014}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":437315,"byte_end":437323,"line_start":609,"line_end":609,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1021},{"krate":0,"index":1022},{"krate":0,"index":1024},{"krate":0,"index":1026},{"krate":0,"index":1028}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":438363,"byte_end":438371,"line_start":649,"line_end":649,"column_start":29,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":438451,"byte_end":438459,"line_start":650,"line_end":650,"column_start":36,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":438568,"byte_end":438576,"line_start":652,"line_end":652,"column_start":64,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":1037}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":438708,"byte_end":438716,"line_start":658,"line_end":658,"column_start":27,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":438789,"byte_end":438797,"line_start":660,"line_end":660,"column_start":65,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":1043}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":439536,"byte_end":439544,"line_start":681,"line_end":681,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1046}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":439691,"byte_end":439699,"line_start":687,"line_end":687,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1049}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":439842,"byte_end":439850,"line_start":693,"line_end":693,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1053},{"krate":0,"index":1054}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":440086,"byte_end":440094,"line_start":702,"line_end":702,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1057},{"krate":0,"index":1058}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":440331,"byte_end":440339,"line_start":711,"line_end":711,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1061},{"krate":0,"index":1062}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":440528,"byte_end":440536,"line_start":720,"line_end":720,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1065}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":440710,"byte_end":440718,"line_start":726,"line_end":726,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1068}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":440911,"byte_end":440919,"line_start":735,"line_end":735,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1070},{"krate":0,"index":1071}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":441145,"byte_end":441153,"line_start":744,"line_end":744,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1074},{"krate":0,"index":1075}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":441398,"byte_end":441406,"line_start":753,"line_end":753,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1078}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":442058,"byte_end":442066,"line_start":773,"line_end":773,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1080}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":442265,"byte_end":442275,"line_start":780,"line_end":780,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1083}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":512688,"byte_end":512703,"line_start":141,"line_end":141,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1110}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":512793,"byte_end":512808,"line_start":147,"line_end":147,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1112}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":512914,"byte_end":512929,"line_start":153,"line_end":153,"column_start":13,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":512954,"byte_end":512969,"line_start":155,"line_end":155,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1115}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":520258,"byte_end":520268,"line_start":358,"line_end":358,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1126}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":521017,"byte_end":521027,"line_start":373,"line_end":373,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1128}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":547070,"byte_end":547076,"line_start":129,"line_end":129,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1216}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":547752,"byte_end":547758,"line_start":157,"line_end":157,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1218},{"krate":0,"index":1219},{"krate":0,"index":1220},{"krate":0,"index":1221},{"krate":0,"index":1222},{"krate":0,"index":1223},{"krate":0,"index":1224},{"krate":0,"index":1225},{"krate":0,"index":1226},{"krate":0,"index":1227},{"krate":0,"index":1228},{"krate":0,"index":1229},{"krate":0,"index":1230},{"krate":0,"index":1231},{"krate":0,"index":1232},{"krate":0,"index":1233},{"krate":0,"index":1234},{"krate":0,"index":1235},{"krate":0,"index":1236},{"krate":0,"index":1237},{"krate":0,"index":1238},{"krate":0,"index":1239},{"krate":0,"index":1240},{"krate":0,"index":1248},{"krate":0,"index":1249},{"krate":0,"index":1254},{"krate":0,"index":1255},{"krate":0,"index":1256}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parse.rs","byte_start":616663,"byte_end":616671,"line_start":458,"line_end":458,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1324},{"krate":0,"index":1325}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/strftime.rs","byte_start":664928,"byte_end":664941,"line_start":217,"line_end":217,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1389},{"krate":0,"index":1390}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/strftime.rs","byte_start":666436,"byte_end":666449,"line_start":266,"line_end":266,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1396},{"krate":0,"index":1397}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":536383,"byte_end":536396,"line_start":733,"line_end":733,"column_start":62,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":1409},{"krate":0,"index":1410}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":538369,"byte_end":538382,"line_start":794,"line_end":794,"column_start":79,"column_end":92},"value":"","parent":null,"children":[{"krate":0,"index":1416}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":539669,"byte_end":539676,"line_start":840,"line_end":840,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1418},{"krate":0,"index":1419}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":541634,"byte_end":541639,"line_start":914,"line_end":914,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1421},{"krate":0,"index":1422}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":685061,"byte_end":685062,"line_start":48,"line_end":48,"column_start":25,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1440},{"krate":0,"index":1441}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":688443,"byte_end":688451,"line_start":149,"line_end":149,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1450},{"krate":0,"index":1451},{"krate":0,"index":1452}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":691913,"byte_end":691926,"line_start":244,"line_end":244,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1454}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":692505,"byte_end":692518,"line_start":261,"line_end":261,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1456}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":27404,"byte_end":27411,"line_start":663,"line_end":663,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1458},{"krate":0,"index":1459},{"krate":0,"index":1460},{"krate":0,"index":1461},{"krate":0,"index":1462},{"krate":0,"index":1463}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":31402,"byte_end":31409,"line_start":773,"line_end":773,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1465}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":32057,"byte_end":32064,"line_start":790,"line_end":790,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1467},{"krate":0,"index":1468}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":33003,"byte_end":33020,"line_start":828,"line_end":828,"column_start":21,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1471}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":37496,"byte_end":37501,"line_start":993,"line_end":993,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1473},{"krate":0,"index":1474},{"krate":0,"index":1475},{"krate":0,"index":1476}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":40731,"byte_end":40736,"line_start":1088,"line_end":1088,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1478},{"krate":0,"index":1479},{"krate":0,"index":1480}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":42065,"byte_end":42080,"line_start":1131,"line_end":1131,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1482}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":23609,"byte_end":23615,"line_start":540,"line_end":540,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":104}},{"kind":"Mod","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":24931,"byte_end":24937,"line_start":581,"line_end":581,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1085}},{"kind":"Mod","span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":535629,"byte_end":535637,"line_start":713,"line_end":713,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":1374}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/sys.rs","byte_start":57212,"byte_end":57220,"line_start":41,"line_end":41,"column_start":6,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":24},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/sys.rs","byte_start":59422,"byte_end":59424,"line_start":117,"line_end":117,"column_start":6,"column_end":8},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":30},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":66340,"byte_end":66351,"line_start":41,"line_end":41,"column_start":9,"column_end":20},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1515},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":67532,"byte_end":67543,"line_start":76,"line_end":76,"column_start":20,"column_end":31},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1515},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":70753,"byte_end":70764,"line_start":169,"line_end":169,"column_start":21,"column_end":32},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1515},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":71226,"byte_end":71231,"line_start":183,"line_end":183,"column_start":19,"column_end":24},"kind":"SuperTrait","from":{"krate":2,"index":1908},"to":{"krate":0,"index":137}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":71234,"byte_end":71239,"line_start":183,"line_end":183,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":1604},"to":{"krate":0,"index":137}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":71247,"byte_end":71252,"line_start":183,"line_end":183,"column_start":40,"column_end":45},"kind":"SuperTrait","from":{"krate":2,"index":6176},"to":{"krate":0,"index":137}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":71542,"byte_end":71547,"line_start":192,"line_end":192,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":1908},"to":{"krate":0,"index":139}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/mod.rs","byte_start":71550,"byte_end":71555,"line_start":192,"line_end":192,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":1604},"to":{"krate":0,"index":139}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":86111,"byte_end":86122,"line_start":27,"line_end":27,"column_start":6,"column_end":17},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1549},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":88679,"byte_end":88690,"line_start":101,"line_end":101,"column_start":19,"column_end":30},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1549},"to":{"krate":0,"index":139}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":89278,"byte_end":89289,"line_start":123,"line_end":123,"column_start":17,"column_end":28},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1549},"to":{"krate":0,"index":137}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":89370,"byte_end":89381,"line_start":129,"line_end":129,"column_start":21,"column_end":32},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1549},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":89879,"byte_end":89890,"line_start":143,"line_end":143,"column_start":23,"column_end":34},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1549},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":90658,"byte_end":90667,"line_start":164,"line_end":164,"column_start":27,"column_end":36},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1745},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":90855,"byte_end":90864,"line_start":173,"line_end":173,"column_start":27,"column_end":36},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1745},"to":{"krate":2,"index":1973}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":91053,"byte_end":91066,"line_start":182,"line_end":182,"column_start":27,"column_end":40},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1655},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":91262,"byte_end":91275,"line_start":191,"line_end":191,"column_start":27,"column_end":40},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1655},"to":{"krate":2,"index":1973}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":91486,"byte_end":91494,"line_start":200,"line_end":200,"column_start":41,"column_end":49},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1801},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/fixed.rs","byte_start":91706,"byte_end":91714,"line_start":209,"line_end":209,"column_start":41,"column_end":49},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1801},"to":{"krate":2,"index":1973}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/local.rs","byte_start":96131,"byte_end":96136,"line_start":93,"line_end":93,"column_start":6,"column_end":11},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1564},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/local.rs","byte_start":97036,"byte_end":97041,"line_start":117,"line_end":117,"column_start":19,"column_end":24},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1564},"to":{"krate":0,"index":139}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/utc.rs","byte_start":102412,"byte_end":102415,"line_start":39,"line_end":39,"column_start":6,"column_end":9},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1571},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/utc.rs","byte_start":103301,"byte_end":103304,"line_start":62,"line_end":62,"column_start":19,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1571},"to":{"krate":0,"index":139}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/utc.rs","byte_start":103824,"byte_end":103827,"line_start":84,"line_end":84,"column_start":17,"column_end":20},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1571},"to":{"krate":0,"index":137}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/utc.rs","byte_start":103923,"byte_end":103926,"line_start":90,"line_end":90,"column_start":21,"column_end":24},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1571},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/offset/utc.rs","byte_start":104042,"byte_end":104045,"line_start":96,"line_end":96,"column_start":23,"column_end":26},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1571},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":109840,"byte_end":109849,"line_start":136,"line_end":136,"column_start":6,"column_end":15},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1582},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":147653,"byte_end":147662,"line_start":1102,"line_end":1102,"column_start":19,"column_end":28},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1582},"to":{"krate":0,"index":1483}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":159963,"byte_end":159972,"line_start":1468,"line_end":1468,"column_start":27,"column_end":36},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1582},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":160191,"byte_end":160200,"line_start":1477,"line_end":1477,"column_start":33,"column_end":42},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1582},"to":{"krate":2,"index":1999}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":161584,"byte_end":161593,"line_start":1509,"line_end":1509,"column_start":27,"column_end":36},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1582},"to":{"krate":2,"index":1973}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":161812,"byte_end":161821,"line_start":1518,"line_end":1518,"column_start":33,"column_end":42},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1582},"to":{"krate":2,"index":2003}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":163046,"byte_end":163055,"line_start":1551,"line_end":1551,"column_start":25,"column_end":34},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1582},"to":{"krate":2,"index":1973}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":163408,"byte_end":163429,"line_start":1566,"line_end":1566,"column_start":19,"column_end":40},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1605},"to":{"krate":2,"index":4965}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":164006,"byte_end":164027,"line_start":1586,"line_end":1586,"column_start":28,"column_end":49},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1605},"to":{"krate":2,"index":4920}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":164179,"byte_end":164201,"line_start":1593,"line_end":1593,"column_start":19,"column_end":41},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1630},"to":{"krate":2,"index":4965}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":164716,"byte_end":164738,"line_start":1611,"line_end":1611,"column_start":28,"column_end":50},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1630},"to":{"krate":2,"index":4920}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":165785,"byte_end":165794,"line_start":1639,"line_end":1639,"column_start":21,"column_end":30},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":1582},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":167053,"byte_end":167062,"line_start":1674,"line_end":1674,"column_start":23,"column_end":32},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":1582},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/date.rs","byte_start":167664,"byte_end":167673,"line_start":1696,"line_end":1696,"column_start":23,"column_end":32},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":1582},"to":{"krate":2,"index":7699}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":198984,"byte_end":198997,"line_start":67,"line_end":67,"column_start":6,"column_end":19},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":1655},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":225161,"byte_end":225174,"line_start":702,"line_end":702,"column_start":19,"column_end":32},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":1655},"to":{"krate":0,"index":1483}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":236230,"byte_end":236243,"line_start":1020,"line_end":1020,"column_start":19,"column_end":32},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1655},"to":{"krate":0,"index":1502}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":242439,"byte_end":242452,"line_start":1192,"line_end":1192,"column_start":21,"column_end":34},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1655},"to":{"krate":2,"index":6364}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":245003,"byte_end":245016,"line_start":1252,"line_end":1252,"column_start":27,"column_end":40},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":1655},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":245247,"byte_end":245260,"line_start":1261,"line_end":1261,"column_start":33,"column_end":46},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":1655},"to":{"krate":2,"index":1999}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":247707,"byte_end":247720,"line_start":1320,"line_end":1320,"column_start":27,"column_end":40},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":1655},"to":{"krate":2,"index":1973}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":247951,"byte_end":247964,"line_start":1329,"line_end":1329,"column_start":33,"column_end":46},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1655},"to":{"krate":2,"index":2003}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":249838,"byte_end":249851,"line_start":1380,"line_end":1380,"column_start":29,"column_end":42},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1655},"to":{"krate":2,"index":1973}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":251059,"byte_end":251072,"line_start":1416,"line_end":1416,"column_start":21,"column_end":34},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1655},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":252168,"byte_end":252181,"line_start":1447,"line_end":1447,"column_start":23,"column_end":36},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1655},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/datetime.rs","byte_start":252919,"byte_end":252932,"line_start":1469,"line_end":1469,"column_start":23,"column_end":36},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1655},"to":{"krate":2,"index":7699}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/internals.rs","byte_start":297139,"byte_end":297148,"line_start":113,"line_end":113,"column_start":6,"column_end":15},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1680},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/internals.rs","byte_start":297945,"byte_end":297954,"line_start":148,"line_end":148,"column_start":21,"column_end":30},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1680},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/internals.rs","byte_start":306095,"byte_end":306097,"line_start":270,"line_end":270,"column_start":6,"column_end":8},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1693},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/internals.rs","byte_start":308176,"byte_end":308178,"line_start":359,"line_end":359,"column_start":21,"column_end":23},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1693},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/internals.rs","byte_start":308777,"byte_end":308780,"line_start":380,"line_end":380,"column_start":6,"column_end":9},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1709},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/internals.rs","byte_start":310743,"byte_end":310746,"line_start":469,"line_end":469,"column_start":21,"column_end":24},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1709},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":324969,"byte_end":324976,"line_start":48,"line_end":48,"column_start":6,"column_end":13},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1725},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/isoweek.rs","byte_start":327522,"byte_end":327529,"line_start":130,"line_end":130,"column_start":21,"column_end":28},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1725},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":336548,"byte_end":336557,"line_start":187,"line_end":187,"column_start":6,"column_end":15},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1745},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":360947,"byte_end":360956,"line_start":803,"line_end":803,"column_start":19,"column_end":28},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1745},"to":{"krate":0,"index":1502}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":368185,"byte_end":368194,"line_start":1016,"line_end":1016,"column_start":21,"column_end":30},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1745},"to":{"krate":2,"index":6364}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":371104,"byte_end":371113,"line_start":1078,"line_end":1078,"column_start":27,"column_end":36},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1745},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":371294,"byte_end":371303,"line_start":1087,"line_end":1087,"column_start":33,"column_end":42},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1745},"to":{"krate":2,"index":1999}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":373809,"byte_end":373818,"line_start":1145,"line_end":1145,"column_start":27,"column_end":36},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1745},"to":{"krate":2,"index":1973}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":373999,"byte_end":374008,"line_start":1154,"line_end":1154,"column_start":33,"column_end":42},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1745},"to":{"krate":2,"index":2003}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":376479,"byte_end":376488,"line_start":1210,"line_end":1210,"column_start":25,"column_end":34},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1745},"to":{"krate":2,"index":1973}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":377876,"byte_end":377885,"line_start":1247,"line_end":1247,"column_start":21,"column_end":30},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1745},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":379738,"byte_end":379747,"line_start":1297,"line_end":1297,"column_start":23,"column_end":32},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1745},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/naive/time.rs","byte_start":380519,"byte_end":380528,"line_start":1322,"line_end":1322,"column_start":23,"column_end":32},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1745},"to":{"krate":2,"index":7699}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":401811,"byte_end":401815,"line_start":57,"line_end":57,"column_start":20,"column_end":24},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1770},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":409915,"byte_end":409919,"line_start":277,"line_end":277,"column_start":20,"column_end":24},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1770},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":411796,"byte_end":411800,"line_start":336,"line_end":336,"column_start":33,"column_end":37},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":1770},"to":{"krate":0,"index":1483}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":413635,"byte_end":413639,"line_start":411,"line_end":411,"column_start":29,"column_end":33},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":1770},"to":{"krate":2,"index":1913}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":413719,"byte_end":413723,"line_start":412,"line_end":412,"column_start":36,"column_end":40},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1770},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":413828,"byte_end":413832,"line_start":414,"line_end":414,"column_start":60,"column_end":64},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1770},"to":{"krate":2,"index":1632}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":413952,"byte_end":413956,"line_start":420,"line_end":420,"column_start":27,"column_end":31},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1770},"to":{"krate":2,"index":1637}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":413999,"byte_end":414003,"line_start":422,"line_end":422,"column_start":35,"column_end":39},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1770},"to":{"krate":2,"index":1669}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":414155,"byte_end":414159,"line_start":428,"line_end":428,"column_start":28,"column_end":32},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1770},"to":{"krate":2,"index":1658}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":414294,"byte_end":414298,"line_start":434,"line_end":434,"column_start":35,"column_end":39},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1770},"to":{"krate":2,"index":6364}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":414437,"byte_end":414441,"line_start":440,"line_end":440,"column_start":41,"column_end":45},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1770},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":414665,"byte_end":414669,"line_start":449,"line_end":449,"column_start":41,"column_end":45},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1770},"to":{"krate":2,"index":1973}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":414890,"byte_end":414894,"line_start":458,"line_end":458,"column_start":38,"column_end":42},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1770},"to":{"krate":2,"index":1973}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":415079,"byte_end":415083,"line_start":467,"line_end":467,"column_start":35,"column_end":39},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":1770},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/date.rs","byte_start":415257,"byte_end":415261,"line_start":473,"line_end":473,"column_start":37,"column_end":41},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":1770},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":418187,"byte_end":418195,"line_start":80,"line_end":80,"column_start":20,"column_end":28},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":1801},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":424242,"byte_end":424250,"line_start":257,"line_end":257,"column_start":30,"column_end":38},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1801},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":424756,"byte_end":424764,"line_start":269,"line_end":269,"column_start":30,"column_end":38},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1801},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":425174,"byte_end":425182,"line_start":279,"line_end":279,"column_start":38,"column_end":46},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1801},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":425634,"byte_end":425642,"line_start":291,"line_end":291,"column_start":38,"column_end":46},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1801},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":426090,"byte_end":426098,"line_start":303,"line_end":303,"column_start":32,"column_end":40},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1801},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":426536,"byte_end":426544,"line_start":315,"line_end":315,"column_start":32,"column_end":40},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1801},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":427260,"byte_end":427268,"line_start":333,"line_end":333,"column_start":6,"column_end":14},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":1801},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":429960,"byte_end":429968,"line_start":393,"line_end":393,"column_start":20,"column_end":28},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1801},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":435450,"byte_end":435458,"line_start":535,"line_end":535,"column_start":33,"column_end":41},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1801},"to":{"krate":0,"index":1483}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":437315,"byte_end":437323,"line_start":609,"line_end":609,"column_start":33,"column_end":41},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1801},"to":{"krate":0,"index":1502}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":438363,"byte_end":438371,"line_start":649,"line_end":649,"column_start":29,"column_end":37},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1801},"to":{"krate":2,"index":1913}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":438451,"byte_end":438459,"line_start":650,"line_end":650,"column_start":36,"column_end":44},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1801},"to":{"krate":2,"index":1903}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":438568,"byte_end":438576,"line_start":652,"line_end":652,"column_start":64,"column_end":72},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1801},"to":{"krate":2,"index":1632}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":438708,"byte_end":438716,"line_start":658,"line_end":658,"column_start":27,"column_end":35},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1801},"to":{"krate":2,"index":1637}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":438789,"byte_end":438797,"line_start":660,"line_end":660,"column_start":65,"column_end":73},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1801},"to":{"krate":2,"index":1669}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":439536,"byte_end":439544,"line_start":681,"line_end":681,"column_start":28,"column_end":36},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":1801},"to":{"krate":2,"index":1658}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":439691,"byte_end":439699,"line_start":687,"line_end":687,"column_start":35,"column_end":43},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1801},"to":{"krate":2,"index":6364}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":439842,"byte_end":439850,"line_start":693,"line_end":693,"column_start":41,"column_end":49},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1801},"to":{"krate":2,"index":1968}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":440086,"byte_end":440094,"line_start":702,"line_end":702,"column_start":41,"column_end":49},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1801},"to":{"krate":2,"index":1973}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":440331,"byte_end":440339,"line_start":711,"line_end":711,"column_start":42,"column_end":50},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1801},"to":{"krate":2,"index":1973}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":440528,"byte_end":440536,"line_start":720,"line_end":720,"column_start":35,"column_end":43},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1801},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":440710,"byte_end":440718,"line_start":726,"line_end":726,"column_start":37,"column_end":45},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1801},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":440911,"byte_end":440919,"line_start":735,"line_end":735,"column_start":23,"column_end":31},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1801},"to":{"krate":2,"index":7699}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":441145,"byte_end":441153,"line_start":744,"line_end":744,"column_start":23,"column_end":31},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1801},"to":{"krate":2,"index":7699}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":441398,"byte_end":441406,"line_start":753,"line_end":753,"column_start":27,"column_end":35},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1801},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":442058,"byte_end":442066,"line_start":773,"line_end":773,"column_start":27,"column_end":35},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1801},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/datetime.rs","byte_start":442265,"byte_end":442275,"line_start":780,"line_end":780,"column_start":43,"column_end":53},"kind":{"Impl":{"id":110}},"from":{"krate":1,"index":7751},"to":{"krate":2,"index":1823}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":512688,"byte_end":512703,"line_start":141,"line_end":141,"column_start":16,"column_end":31},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1107},"to":{"krate":2,"index":1604}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":512793,"byte_end":512808,"line_start":147,"line_end":147,"column_start":20,"column_end":35},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1107},"to":{"krate":2,"index":1632}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":512914,"byte_end":512929,"line_start":153,"line_end":153,"column_start":13,"column_end":28},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1107},"to":{"krate":2,"index":1637}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":512954,"byte_end":512969,"line_start":155,"line_end":155,"column_start":21,"column_end":36},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1107},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":520258,"byte_end":520268,"line_start":358,"line_end":358,"column_start":23,"column_end":33},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":2015},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":521017,"byte_end":521027,"line_start":373,"line_end":373,"column_start":16,"column_end":26},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":2015},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":547070,"byte_end":547076,"line_start":129,"line_end":129,"column_start":18,"column_end":24},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":2056},"to":{"krate":2,"index":1893}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parsed.rs","byte_start":547752,"byte_end":547758,"line_start":157,"line_end":157,"column_start":6,"column_end":12},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":2056},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/parse.rs","byte_start":616663,"byte_end":616671,"line_start":458,"line_end":458,"column_start":23,"column_end":31},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1801},"to":{"krate":2,"index":7699}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/strftime.rs","byte_start":664928,"byte_end":664941,"line_start":217,"line_end":217,"column_start":10,"column_end":23},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":2087},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/strftime.rs","byte_start":666436,"byte_end":666449,"line_start":266,"line_end":266,"column_start":23,"column_end":36},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":2087},"to":{"krate":2,"index":4965}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":536383,"byte_end":536396,"line_start":733,"line_end":733,"column_start":62,"column_end":75},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":2106},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":538369,"byte_end":538382,"line_start":794,"line_end":794,"column_start":79,"column_end":92},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":2106},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":539669,"byte_end":539676,"line_start":840,"line_end":840,"column_start":18,"column_end":25},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":2134},"to":{"krate":2,"index":7699}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/format/mod.rs","byte_start":541634,"byte_end":541639,"line_start":914,"line_end":914,"column_start":18,"column_end":23},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":2178},"to":{"krate":2,"index":7699}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":685061,"byte_end":685062,"line_start":48,"line_end":48,"column_start":25,"column_end":26},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":1439},"to":{"krate":0,"index":1435}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":686759,"byte_end":686764,"line_start":102,"line_end":102,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":1908},"to":{"krate":0,"index":1443}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":688443,"byte_end":688451,"line_start":149,"line_end":149,"column_start":38,"column_end":46},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1801},"to":{"krate":0,"index":1443}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":691913,"byte_end":691926,"line_start":244,"line_end":244,"column_start":23,"column_end":36},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":2116},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/round.rs","byte_start":692505,"byte_end":692518,"line_start":261,"line_end":261,"column_start":28,"column_end":41},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":2116},"to":{"krate":1,"index":1642}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":27404,"byte_end":27411,"line_start":663,"line_end":663,"column_start":6,"column_end":13},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":2134},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":31402,"byte_end":31409,"line_start":773,"line_end":773,"column_start":23,"column_end":30},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":2134},"to":{"krate":2,"index":6181}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":32057,"byte_end":32064,"line_start":790,"line_end":790,"column_start":36,"column_end":43},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":2134},"to":{"krate":18,"index":149}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":33003,"byte_end":33020,"line_start":828,"line_end":828,"column_start":21,"column_end":38},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":2170},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":37496,"byte_end":37501,"line_start":993,"line_end":993,"column_start":6,"column_end":11},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":2178},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":40731,"byte_end":40736,"line_start":1088,"line_end":1088,"column_start":36,"column_end":41},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":2178},"to":{"krate":18,"index":149}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":42065,"byte_end":42080,"line_start":1131,"line_end":1131,"column_start":21,"column_end":36},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":2229},"to":{"krate":2,"index":6176}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":45168,"byte_end":45173,"line_start":1245,"line_end":1245,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":1908},"to":{"krate":0,"index":1483}},{"span":{"file_name":"/home/zoozle/.cargo/registry/src/github.com-1ecc6299db9ec823/chrono-0.4.18/src/lib.rs","byte_start":49404,"byte_end":49409,"line_start":1363,"line_end":1363,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":1908},"to":{"krate":0,"index":1502}}]}